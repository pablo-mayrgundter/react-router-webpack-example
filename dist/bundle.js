!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=16)}([function(e,t,n){"use strict";e.exports=n(17)},function(e,t,n){e.exports=n(22)()},function(e,t,n){"use strict";e.exports=function(){}},function(e,t,n){"use strict";(function(e){var r=n(9),o=n.n(r),a=n(12),i=n.n(a),l=n(0),u=n.n(l),c=n(13),s=n(7),f=n(10),p=(n(1),n(6),n(15)),d=function(e,t){for(var n=[e[0]],r=0,o=t.length;r<o;r+=1)n.push(t[r],e[r+1]);return n},h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},y=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),v=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},g=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)},b=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n},w=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t},k=function(e){return"object"===(void 0===e?"undefined":h(e))&&e.constructor===Object},x=Object.freeze([]),T=Object.freeze({});function C(e){return"function"==typeof e}function S(e){return e.displayName||e.name||"Component"}function E(e){return e&&"string"==typeof e.styledComponentId}var _=void 0!==e&&e.env.SC_ATTR||"data-styled",O="undefined"!=typeof window&&"HTMLElement"in window,P="boolean"==typeof SC_DISABLE_SPEEDY&&SC_DISABLE_SPEEDY||!1;var j=function(e){function t(n){m(this,t);for(var r=arguments.length,o=Array(r>1?r-1:0),a=1;a<r;a++)o[a-1]=arguments[a];var i=w(this,e.call(this,"An error occurred. See https://github.com/styled-components/styled-components/blob/master/src/utils/errors.md#"+n+" for more information. "+(o?"Additional arguments: "+o.join(", "):"")));return w(i)}return g(t,e),t}(Error),R=/^[^\S\n]*?\/\* sc-component-id:\s*(\S+)\s+\*\//gm,A=function(e){var t=""+(e||""),n=[];return t.replace(R,function(e,t,r){return n.push({componentId:t,matchIndex:r}),e}),n.map(function(e,r){var o=e.componentId,a=e.matchIndex,i=n[r+1];return{componentId:o,cssFromDOM:i?t.slice(a,i.matchIndex):t.slice(a)}})},N=/^\s*\/\/.*$/gm,I=new o.a({global:!1,cascade:!0,keyframe:!1,prefix:!1,compress:!1,semicolon:!0}),M=new o.a({global:!1,cascade:!0,keyframe:!1,prefix:!0,compress:!1,semicolon:!1}),z=[],L=function(e){if(-2===e){var t=z;return z=[],t}},U=i()(function(e){z.push(e)}),F=void 0,D=void 0,$=void 0,W=function(e,t,n){return t>0&&-1!==n.slice(0,t).indexOf(D)&&n.slice(t-D.length,t)!==D?"."+F:e};M.use([function(e,t,n){2===e&&n.length&&n[0].lastIndexOf(D)>0&&(n[0]=n[0].replace($,W))},U,L]),I.use([U,L]);function B(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"&",o=e.join("").replace(N,""),a=t&&n?n+" "+t+" { "+o+" }":o;return F=r,D=t,$=new RegExp("\\"+D+"\\b","g"),M(n||!t?"":t,a)}var H=function(){return n.nc},V=function(e,t,n){n&&((e[t]||(e[t]=Object.create(null)))[n]=!0)},q=function(e,t){e[t]=Object.create(null)},Q=function(e){return function(t,n){return void 0!==e[t]&&e[t][n]}},Y=function(e){var t="";for(var n in e)t+=Object.keys(e[n]).join(" ")+" ";return t.trim()},K=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets.length,n=0;n<t;n+=1){var r=document.styleSheets[n];if(r.ownerNode===e)return r}throw new j(10)},X=function(e,t,n){if(!t)return!1;var r=e.cssRules.length;try{e.insertRule(t,n<=r?n:r)}catch(e){return!1}return!0},G=function(e){return"\n/* sc-component-id: "+e+" */\n"},J=function(e,t){for(var n=0,r=0;r<=t;r+=1)n+=e[r];return n},Z=function(e,t){return function(n){var r=H();return"<style "+[r&&'nonce="'+r+'"',_+'="'+Y(t)+'"','data-styled-version="4.1.3"',n].filter(Boolean).join(" ")+">"+e()+"</style>"}},ee=function(e,t){return function(){var n,r=((n={})[_]=Y(t),n["data-styled-version"]="4.1.3",n),o=H();return o&&(r.nonce=o),u.a.createElement("style",v({},r,{dangerouslySetInnerHTML:{__html:e()}}))}},te=function(e){return function(){return Object.keys(e)}},ne=function(e){return document.createTextNode(G(e))},re=function e(t,n){var r=void 0===t?Object.create(null):t,o=void 0===n?Object.create(null):n,a=function(e){var t=o[e];return void 0!==t?t:o[e]=[""]},i=function(){var e="";for(var t in o){var n=o[t][0];n&&(e+=G(t)+n)}return e};return{clone:function(){var t=function(e){var t=Object.create(null);for(var n in e)t[n]=v({},e[n]);return t}(r),n=Object.create(null);for(var a in o)n[a]=[o[a][0]];return e(t,n)},css:i,getIds:te(o),hasNameForId:Q(r),insertMarker:a,insertRules:function(e,t,n){a(e)[0]+=t.join(" "),V(r,e,n)},removeRules:function(e){var t=o[e];void 0!==t&&(t[0]="",q(r,e))},sealed:!1,styleTag:null,toElement:ee(i,r),toHTML:Z(i,r)}},oe=function(e,t,n,r,o){if(O&&!n){var a=function(e,t,n){var r=document.createElement("style");r.setAttribute(_,""),r.setAttribute("data-styled-version","4.1.3");var o=H();if(o&&r.setAttribute("nonce",o),r.appendChild(document.createTextNode("")),e&&!t)e.appendChild(r);else{if(!t||!e||!t.parentNode)throw new j(6);t.parentNode.insertBefore(r,n?t:t.nextSibling)}return r}(e,t,r);return P?function(e,t){var n=Object.create(null),r=Object.create(null),o=void 0!==t,a=!1,i=function(t){var o=r[t];return void 0!==o?o:(r[t]=ne(t),e.appendChild(r[t]),n[t]=Object.create(null),r[t])},l=function(){var e="";for(var t in r)e+=r[t].data;return e};return{clone:function(){throw new j(5)},css:l,getIds:te(r),hasNameForId:Q(n),insertMarker:i,insertRules:function(e,r,l){for(var u=i(e),c=[],s=r.length,f=0;f<s;f+=1){var p=r[f],d=o;if(d&&-1!==p.indexOf("@import"))c.push(p);else{d=!1;var h=f===s-1?"":" ";u.appendData(""+p+h)}}V(n,e,l),o&&c.length>0&&(a=!0,t().insertRules(e+"-import",c))},removeRules:function(i){var l=r[i];if(void 0!==l){var u=ne(i);e.replaceChild(u,l),r[i]=u,q(n,i),o&&a&&t().removeRules(i+"-import")}},sealed:!1,styleTag:e,toElement:ee(l,n),toHTML:Z(l,n)}}(a,o):function(e,t){var n=Object.create(null),r=Object.create(null),o=[],a=void 0!==t,i=!1,l=function(e){var t=r[e];return void 0!==t?t:(r[e]=o.length,o.push(0),q(n,e),r[e])},u=function(){var t=K(e).cssRules,n="";for(var a in r){n+=G(a);for(var i=r[a],l=J(o,i),u=l-o[i];u<l;u+=1){var c=t[u];void 0!==c&&(n+=c.cssText)}}return n};return{clone:function(){throw new j(5)},css:u,getIds:te(r),hasNameForId:Q(n),insertMarker:l,insertRules:function(r,u,c){for(var s=l(r),f=K(e),p=J(o,s),d=0,h=[],m=u.length,y=0;y<m;y+=1){var v=u[y],g=a;g&&-1!==v.indexOf("@import")?h.push(v):X(f,v,p+d)&&(g=!1,d+=1)}a&&h.length>0&&(i=!0,t().insertRules(r+"-import",h)),o[s]+=d,V(n,r,c)},removeRules:function(l){var u=r[l];if(void 0!==u){var c=o[u];!function(e,t,n){for(var r=t-n,o=t;o>r;o-=1)e.deleteRule(o)}(K(e),J(o,u)-1,c),o[u]=0,q(n,l),a&&i&&t().removeRules(l+"-import")}},sealed:!1,styleTag:e,toElement:ee(u,n),toHTML:Z(u,n)}}(a,o)}return re()},ae=/\s+/,ie=void 0;ie=O?P?40:1e3:-1;var le=0,ue=void 0,ce=function(){function e(){var t=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:O?document.head:null,r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];m(this,e),this.getImportRuleTag=function(){var e=t.importRuleTag;if(void 0!==e)return e;var n=t.tags[0];return t.importRuleTag=oe(t.target,n?n.styleTag:null,t.forceServer,!0)},le+=1,this.id=le,this.forceServer=r,this.target=r?null:n,this.tagMap={},this.deferred={},this.rehydratedNames={},this.ignoreRehydratedNames={},this.tags=[],this.capacity=1,this.clones=[]}return e.prototype.rehydrate=function(){if(!O||this.forceServer)return this;var e=[],t=[],n=!1,r=document.querySelectorAll("style["+_+'][data-styled-version="4.1.3"]'),o=r.length;if(!o)return this;for(var a=0;a<o;a+=1){var i=r[a];n||(n=!!i.getAttribute("data-styled-streamed"));for(var l,u=(i.getAttribute(_)||"").trim().split(ae),c=u.length,s=0;s<c;s+=1)l=u[s],this.rehydratedNames[l]=!0;t.push.apply(t,A(i.textContent)),e.push(i)}var f=t.length;if(!f)return this;var p=this.makeTag(null);!function(e,t,n){for(var r=0,o=n.length;r<o;r+=1){var a=n[r],i=a.componentId,l=a.cssFromDOM,u=I("",l);e.insertRules(i,u)}for(var c=0,s=t.length;c<s;c+=1){var f=t[c];f.parentNode&&f.parentNode.removeChild(f)}}(p,e,t),this.capacity=Math.max(1,ie-f),this.tags.push(p);for(var d=0;d<f;d+=1)this.tagMap[t[d].componentId]=p;return this},e.reset=function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];ue=new e(void 0,t).rehydrate()},e.prototype.clone=function(){var t=new e(this.target,this.forceServer);return this.clones.push(t),t.tags=this.tags.map(function(e){for(var n=e.getIds(),r=e.clone(),o=0;o<n.length;o+=1)t.tagMap[n[o]]=r;return r}),t.rehydratedNames=v({},this.rehydratedNames),t.deferred=v({},this.deferred),t},e.prototype.sealAllTags=function(){this.capacity=1,this.tags.forEach(function(e){e.sealed=!0})},e.prototype.makeTag=function(e){var t=e?e.styleTag:null;return oe(this.target,t,this.forceServer,!1,this.getImportRuleTag)},e.prototype.getTagForId=function(e){var t=this.tagMap[e];if(void 0!==t&&!t.sealed)return t;var n=this.tags[this.tags.length-1];return this.capacity-=1,0===this.capacity&&(this.capacity=ie,n=this.makeTag(n),this.tags.push(n)),this.tagMap[e]=n},e.prototype.hasId=function(e){return void 0!==this.tagMap[e]},e.prototype.hasNameForId=function(e,t){if(void 0===this.ignoreRehydratedNames[e]&&this.rehydratedNames[t])return!0;var n=this.tagMap[e];return void 0!==n&&n.hasNameForId(e,t)},e.prototype.deferredInject=function(e,t){if(void 0===this.tagMap[e]){for(var n=this.clones,r=0;r<n.length;r+=1)n[r].deferredInject(e,t);this.getTagForId(e).insertMarker(e),this.deferred[e]=t}},e.prototype.inject=function(e,t,n){for(var r=this.clones,o=0;o<r.length;o+=1)r[o].inject(e,t,n);var a=this.getTagForId(e);if(void 0!==this.deferred[e]){var i=this.deferred[e].concat(t);a.insertRules(e,i,n),this.deferred[e]=void 0}else a.insertRules(e,t,n)},e.prototype.remove=function(e){var t=this.tagMap[e];if(void 0!==t){for(var n=this.clones,r=0;r<n.length;r+=1)n[r].remove(e);t.removeRules(e),this.ignoreRehydratedNames[e]=!0,this.deferred[e]=void 0}},e.prototype.toHTML=function(){return this.tags.map(function(e){return e.toHTML()}).join("")},e.prototype.toReactElements=function(){var e=this.id;return this.tags.map(function(t,n){var r="sc-"+e+"-"+n;return Object(l.cloneElement)(t.toElement(),{key:r})})},y(e,null,[{key:"master",get:function(){return ue||(ue=(new e).rehydrate())}},{key:"instance",get:function(){return e.master}}]),e}(),se=function(){function e(t,n){var r=this;m(this,e),this.inject=function(e){e.hasNameForId(r.id,r.name)||e.inject(r.id,r.rules,r.name)},this.toString=function(){throw new j(12,String(r.name))},this.name=t,this.rules=n,this.id="sc-keyframes-"+t}return e.prototype.getName=function(){return this.name},e}(),fe=/([A-Z])/g,pe=/^ms-/;var de=function(e){return null==e||!1===e||""===e},he=function e(t,n){var r=Object.keys(t).filter(function(e){return!de(t[e])}).map(function(n){return k(t[n])?e(t[n],n):n.replace(fe,"-$1").toLowerCase().replace(pe,"-ms-")+": "+(r=n,null==(o=t[n])||"boolean"==typeof o||""===o?"":"number"!=typeof o||0===o||r in c.a?String(o).trim():o+"px")+";";var r,o}).join(" ");return n?n+" {\n  "+r+"\n}":r};function me(e,t,n){if(Array.isArray(e)){for(var r,o=[],a=0,i=e.length;a<i;a+=1)null!==(r=me(e[a],t,n))&&(Array.isArray(r)?o.push.apply(o,r):o.push(r));return o}if(de(e))return null;if(E(e))return"."+e.styledComponentId;if(C(e)){if(t){var l=!1;try{Object(s.isElement)(new e(t))&&(l=!0)}catch(e){}if(l)throw new j(13,S(e));return me(e(t),t,n)}return e}return e instanceof se?n?(e.inject(n),e.getName()):e:k(e)?he(e):e.toString()}function ye(e){for(var t=arguments.length,n=Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return C(e)||k(e)?me(d(x,[e].concat(n))):me(d(e,n))}function ve(e){for(var t,n=0|e.length,r=0|n,o=0;n>=4;)t=1540483477*(65535&(t=255&e.charCodeAt(o)|(255&e.charCodeAt(++o))<<8|(255&e.charCodeAt(++o))<<16|(255&e.charCodeAt(++o))<<24))+((1540483477*(t>>>16)&65535)<<16),r=1540483477*(65535&r)+((1540483477*(r>>>16)&65535)<<16)^(t=1540483477*(65535&(t^=t>>>24))+((1540483477*(t>>>16)&65535)<<16)),n-=4,++o;switch(n){case 3:r^=(255&e.charCodeAt(o+2))<<16;case 2:r^=(255&e.charCodeAt(o+1))<<8;case 1:r=1540483477*(65535&(r^=255&e.charCodeAt(o)))+((1540483477*(r>>>16)&65535)<<16)}return((r=1540483477*(65535&(r^=r>>>13))+((1540483477*(r>>>16)&65535)<<16))^r>>>15)>>>0}var ge=52,be=function(e){return String.fromCharCode(e+(e>25?39:97))};function we(e){var t="",n=void 0;for(n=e;n>ge;n=Math.floor(n/ge))t=be(n%ge)+t;return be(n%ge)+t}function ke(e,t){for(var n=0;n<e.length;n+=1){var r=e[n];if(Array.isArray(r)&&!ke(r,t))return!1;if(C(r)&&!E(r))return!1}return!t.some(function(e){return C(e)||function(e){for(var t in e)if(C(e[t]))return!0;return!1}(e)})}var xe,Te=!1,Ce=function(e){return we(ve(e))},Se=function(){function e(t,n,r){m(this,e),this.rules=t,this.isStatic=!Te&&ke(t,n),this.componentId=r,ce.master.hasId(r)||ce.master.deferredInject(r,[])}return e.prototype.generateAndInjectStyles=function(e,t){var n=this.isStatic,r=this.componentId,o=this.lastClassName;if(O&&n&&"string"==typeof o&&t.hasNameForId(r,o))return o;var a=me(this.rules,e,t),i=Ce(this.componentId+a.join(""));return t.hasNameForId(r,i)||t.inject(this.componentId,B(a,"."+i,void 0,r),i),this.lastClassName=i,i},e.generateName=function(e){return Ce(e)},e}(),Ee=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:T,r=!!n&&e.theme===n.theme;return e.theme&&!r?e.theme:t||n.theme},_e=/[[\].#*$><+~=|^:(),"'`-]+/g,Oe=/(^-|-$)/g;function Pe(e){return e.replace(_e,"-").replace(Oe,"")}function je(e){return"string"==typeof e&&!0}var Re={childContextTypes:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDerivedStateFromProps:!0,propTypes:!0,type:!0},Ae={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},Ne=((xe={})[s.ForwardRef]={$$typeof:!0,render:!0},xe),Ie=Object.defineProperty,Me=Object.getOwnPropertyNames,ze=Object.getOwnPropertySymbols,Le=void 0===ze?function(){return[]}:ze,Ue=Object.getOwnPropertyDescriptor,Fe=Object.getPrototypeOf,De=Object.prototype,$e=Array.prototype;function We(e,t,n){if("string"!=typeof t){var r=Fe(t);r&&r!==De&&We(e,r,n);for(var o=$e.concat(Me(t),Le(t)),a=Ne[e.$$typeof]||Re,i=Ne[t.$$typeof]||Re,l=o.length,u=void 0,c=void 0;l--;)if(c=o[l],!(Ae[c]||n&&n[c]||i&&i[c]||a&&a[c])&&(u=Ue(t,c)))try{Ie(e,c,u)}catch(e){}return e}return e}var Be=Object(l.createContext)(),He=Be.Consumer,Ve=(function(e){function t(n){m(this,t);var r=w(this,e.call(this,n));return r.getContext=Object(f.a)(r.getContext.bind(r)),r.renderInner=r.renderInner.bind(r),r}g(t,e),t.prototype.render=function(){return this.props.children?u.a.createElement(Be.Consumer,null,this.renderInner):null},t.prototype.renderInner=function(e){var t=this.getContext(this.props.theme,e);return u.a.createElement(Be.Provider,{value:t},u.a.Children.only(this.props.children))},t.prototype.getTheme=function(e,t){if(C(e))return e(t);if(null===e||Array.isArray(e)||"object"!==(void 0===e?"undefined":h(e)))throw new j(8);return v({},t,e)},t.prototype.getContext=function(e,t){return this.getTheme(e,t)}}(l.Component),function(){function e(){m(this,e),this.masterSheet=ce.master,this.instance=this.masterSheet.clone(),this.sealed=!1}e.prototype.seal=function(){if(!this.sealed){var e=this.masterSheet.clones.indexOf(this.instance);this.masterSheet.clones.splice(e,1),this.sealed=!0}},e.prototype.collectStyles=function(e){if(this.sealed)throw new j(2);return u.a.createElement(Qe,{sheet:this.instance},e)},e.prototype.getStyleTags=function(){return this.seal(),this.instance.toHTML()},e.prototype.getStyleElement=function(){return this.seal(),this.instance.toReactElements()},e.prototype.interleaveWithNodeStream=function(e){throw new j(3)}}(),Object(l.createContext)()),qe=Ve.Consumer,Qe=function(e){function t(n){m(this,t);var r=w(this,e.call(this,n));return r.getContext=Object(f.a)(r.getContext),r}return g(t,e),t.prototype.getContext=function(e,t){if(e)return e;if(t)return new ce(t);throw new j(4)},t.prototype.render=function(){var e=this.props,t=e.children,n=e.sheet,r=e.target;return u.a.createElement(Ve.Provider,{value:this.getContext(n,r)},t)},t}(l.Component),Ye=(new Set,{});var Ke=function(e){function t(){m(this,t);var n=w(this,e.call(this));return n.attrs={},n.renderOuter=n.renderOuter.bind(n),n.renderInner=n.renderInner.bind(n),n}return g(t,e),t.prototype.render=function(){return u.a.createElement(qe,null,this.renderOuter)},t.prototype.renderOuter=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ce.master;return this.styleSheet=e,this.props.forwardedComponent.componentStyle.isStatic?this.renderInner():u.a.createElement(He,null,this.renderInner)},t.prototype.renderInner=function(e){var t=this.props.forwardedComponent,n=t.componentStyle,r=t.defaultProps,o=(t.displayName,t.foldedComponentIds),a=t.styledComponentId,i=t.target,u=void 0;u=n.isStatic?this.generateAndInjectStyles(T,this.props):void 0!==e?this.generateAndInjectStyles(Ee(this.props,e,r),this.props):this.generateAndInjectStyles(this.props.theme||T,this.props);var c=this.props.as||this.attrs.as||i,s=je(c),f={},d=v({},this.attrs,this.props),h=void 0;for(h in d)"forwardedComponent"!==h&&"as"!==h&&("forwardedRef"===h?f.ref=d[h]:s&&!Object(p.a)(h)||(f[h]=d[h]));return this.props.style&&this.attrs.style&&(f.style=v({},this.attrs.style,this.props.style)),f.className=Array.prototype.concat(o,this.props.className,a,this.attrs.className,u).filter(Boolean).join(" "),Object(l.createElement)(c,f)},t.prototype.buildExecutionContext=function(e,t,n){var r=this,o=v({},t,{theme:e});return n.length?(this.attrs={},n.forEach(function(e){var t,n=e,a=!1,i=void 0,l=void 0;for(l in C(n)&&(n=n(o),a=!0),n)i=n[l],a||!C(i)||(t=i)&&t.prototype&&t.prototype.isReactComponent||E(i)||(i=i(o)),r.attrs[l]=i,o[l]=i}),o):o},t.prototype.generateAndInjectStyles=function(e,t){var n=t.forwardedComponent,r=n.attrs,o=n.componentStyle;n.warnTooManyClasses;return o.isStatic&&!r.length?o.generateAndInjectStyles(T,this.styleSheet):o.generateAndInjectStyles(this.buildExecutionContext(e,t,r),this.styleSheet)},t}(l.Component);function Xe(e,t,n){var r=E(e),o=!je(e),a=t.displayName,i=void 0===a?function(e){return je(e)?"styled."+e:"Styled("+S(e)+")"}(e):a,l=t.componentId,c=void 0===l?function(e,t,n){var r="string"!=typeof t?"sc":Pe(t),o=(Ye[r]||0)+1;Ye[r]=o;var a=r+"-"+e.generateName(r+o);return n?n+"-"+a:a}(Se,t.displayName,t.parentComponentId):l,s=t.ParentComponent,f=void 0===s?Ke:s,p=t.attrs,d=void 0===p?x:p,h=t.displayName&&t.componentId?Pe(t.displayName)+"-"+t.componentId:t.componentId||c,m=r&&e.attrs?Array.prototype.concat(e.attrs,d).filter(Boolean):d,y=new Se(r?e.componentStyle.rules.concat(n):n,m,h),g=u.a.forwardRef(function(e,t){return u.a.createElement(f,v({},e,{forwardedComponent:g,forwardedRef:t}))});return g.attrs=m,g.componentStyle=y,g.displayName=i,g.foldedComponentIds=r?Array.prototype.concat(e.foldedComponentIds,e.styledComponentId):x,g.styledComponentId=h,g.target=r?e.target:e,g.withComponent=function(e){var r=t.componentId,o=b(t,["componentId"]),a=r&&r+"-"+(je(e)?e:Pe(S(e)));return Xe(e,v({},o,{attrs:m,componentId:a,ParentComponent:f}),n)},g.toString=function(){return"."+g.styledComponentId},o&&We(g,e,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,styledComponentId:!0,target:!0,withComponent:!0}),g}var Ge=function(e){return function e(t,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:T;if(!Object(s.isValidElementType)(n))throw new j(1,String(n));var o=function(){return t(n,r,ye.apply(void 0,arguments))};return o.withConfig=function(o){return e(t,n,v({},r,o))},o.attrs=function(o){return e(t,n,v({},r,{attrs:Array.prototype.concat(r.attrs,o).filter(Boolean)}))},o}(Xe,e)};["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"].forEach(function(e){Ge[e]=Ge(e)});!function(){function e(t,n){m(this,e),this.rules=t,this.componentId=n,this.isStatic=ke(t,x),ce.master.hasId(n)||ce.master.deferredInject(n,[])}e.prototype.createStyles=function(e,t){var n=B(me(this.rules,e,t),"");t.inject(this.componentId,n)},e.prototype.removeStyles=function(e){var t=this.componentId;e.hasId(t)&&e.remove(t)},e.prototype.renderStyles=function(e,t){this.removeStyles(t),this.createStyles(e,t)}}();O&&(window.scCGSHMRCache={});t.a=Ge}).call(this,n(24))},function(e,t,n){"use strict";e.exports=function(e,t,n,r,o,a,i,l){if(!e){var u;if(void 0===t)u=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,o,a,i,l],s=0;(u=new Error(t.replace(/%s/g,function(){return c[s++]}))).name="Invariant Violation"}throw u.framesToPop=1,u}}},function(e,t,n){"use strict";var r=function(){};e.exports=r},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(18)},function(e,t,n){"use strict";e.exports=n(25)},,function(e,t,n){e.exports=function e(t){"use strict";var n=/^\0+/g,r=/[\0\r\f]/g,o=/: */g,a=/zoo|gra/,i=/([,: ])(transform)/g,l=/,+\s*(?![^(]*[)])/g,u=/ +\s*(?![^(]*[)])/g,c=/ *[\0] */g,s=/,\r+?/g,f=/([\t\r\n ])*\f?&/g,p=/:global\(((?:[^\(\)\[\]]*|\[.*\]|\([^\(\)]*\))*)\)/g,d=/\W+/g,h=/@(k\w+)\s*(\S*)\s*/,m=/::(place)/g,y=/:(read-only)/g,v=/\s+(?=[{\];=:>])/g,g=/([[}=:>])\s+/g,b=/(\{[^{]+?);(?=\})/g,w=/\s{2,}/g,k=/([^\(])(:+) */g,x=/[svh]\w+-[tblr]{2}/,T=/\(\s*(.*)\s*\)/g,C=/([\s\S]*?);/g,S=/-self|flex-/g,E=/[^]*?(:[rp][el]a[\w-]+)[^]*/,_=/stretch|:\s*\w+\-(?:conte|avail)/,O=/([^-])(image-set\()/,P="-webkit-",j="-moz-",R="-ms-",A=59,N=125,I=123,M=40,z=41,L=91,U=93,F=10,D=13,$=9,W=64,B=32,H=38,V=45,q=95,Q=42,Y=44,K=58,X=39,G=34,J=47,Z=62,ee=43,te=126,ne=0,re=12,oe=11,ae=107,ie=109,le=115,ue=112,ce=111,se=105,fe=99,pe=100,de=112,he=1,me=1,ye=0,ve=1,ge=1,be=1,we=0,ke=0,xe=0,Te=[],Ce=[],Se=0,Ee=null,_e=-2,Oe=-1,Pe=0,je=1,Re=2,Ae=3,Ne=0,Ie=1,Me="",ze="",Le="";function Ue(e,t,o,a,i){for(var l,u,s=0,f=0,p=0,d=0,v=0,g=0,b=0,w=0,x=0,C=0,S=0,E=0,_=0,O=0,q=0,we=0,Ce=0,Ee=0,_e=0,Oe=o.length,De=Oe-1,qe="",Qe="",Ye="",Ke="",Xe="",Ge="";q<Oe;){if(b=o.charCodeAt(q),q===De&&f+d+p+s!==0&&(0!==f&&(b=f===J?F:J),d=p=s=0,Oe++,De++),f+d+p+s===0){if(q===De&&(we>0&&(Qe=Qe.replace(r,"")),Qe.trim().length>0)){switch(b){case B:case $:case A:case D:case F:break;default:Qe+=o.charAt(q)}b=A}if(1===Ce)switch(b){case I:case N:case A:case G:case X:case M:case z:case Y:Ce=0;case $:case D:case F:case B:break;default:for(Ce=0,_e=q,v=b,q--,b=A;_e<Oe;)switch(o.charCodeAt(_e++)){case F:case D:case A:++q,b=v,_e=Oe;break;case K:we>0&&(++q,b=v);case I:_e=Oe}}switch(b){case I:for(v=(Qe=Qe.trim()).charCodeAt(0),S=1,_e=++q;q<Oe;){switch(b=o.charCodeAt(q)){case I:S++;break;case N:S--;break;case J:switch(g=o.charCodeAt(q+1)){case Q:case J:q=Ve(g,q,De,o)}break;case L:b++;case M:b++;case G:case X:for(;q++<De&&o.charCodeAt(q)!==b;);}if(0===S)break;q++}switch(Ye=o.substring(_e,q),v===ne&&(v=(Qe=Qe.replace(n,"").trim()).charCodeAt(0)),v){case W:switch(we>0&&(Qe=Qe.replace(r,"")),g=Qe.charCodeAt(1)){case pe:case ie:case le:case V:l=t;break;default:l=Te}if(_e=(Ye=Ue(t,l,Ye,g,i+1)).length,xe>0&&0===_e&&(_e=Qe.length),Se>0&&(l=Fe(Te,Qe,Ee),u=He(Ae,Ye,l,t,me,he,_e,g,i,a),Qe=l.join(""),void 0!==u&&0===(_e=(Ye=u.trim()).length)&&(g=0,Ye="")),_e>0)switch(g){case le:Qe=Qe.replace(T,Be);case pe:case ie:case V:Ye=Qe+"{"+Ye+"}";break;case ae:Ye=(Qe=Qe.replace(h,"$1 $2"+(Ie>0?Me:"")))+"{"+Ye+"}",Ye=1===ge||2===ge&&We("@"+Ye,3)?"@"+P+Ye+"@"+Ye:"@"+Ye;break;default:Ye=Qe+Ye,a===de&&(Ke+=Ye,Ye="")}else Ye="";break;default:Ye=Ue(t,Fe(t,Qe,Ee),Ye,a,i+1)}Xe+=Ye,E=0,Ce=0,O=0,we=0,Ee=0,_=0,Qe="",Ye="",b=o.charCodeAt(++q);break;case N:case A:if((_e=(Qe=(we>0?Qe.replace(r,""):Qe).trim()).length)>1)switch(0===O&&((v=Qe.charCodeAt(0))===V||v>96&&v<123)&&(_e=(Qe=Qe.replace(" ",":")).length),Se>0&&void 0!==(u=He(je,Qe,t,e,me,he,Ke.length,a,i,a))&&0===(_e=(Qe=u.trim()).length)&&(Qe="\0\0"),v=Qe.charCodeAt(0),g=Qe.charCodeAt(1),v){case ne:break;case W:if(g===se||g===fe){Ge+=Qe+o.charAt(q);break}default:if(Qe.charCodeAt(_e-1)===K)break;Ke+=$e(Qe,v,g,Qe.charCodeAt(2))}E=0,Ce=0,O=0,we=0,Ee=0,Qe="",b=o.charCodeAt(++q)}}switch(b){case D:case F:if(f+d+p+s+ke===0)switch(C){case z:case X:case G:case W:case te:case Z:case Q:case ee:case J:case V:case K:case Y:case A:case I:case N:break;default:O>0&&(Ce=1)}f===J?f=0:ve+E===0&&a!==ae&&Qe.length>0&&(we=1,Qe+="\0"),Se*Ne>0&&He(Pe,Qe,t,e,me,he,Ke.length,a,i,a),he=1,me++;break;case A:case N:if(f+d+p+s===0){he++;break}default:switch(he++,qe=o.charAt(q),b){case $:case B:if(d+s+f===0)switch(w){case Y:case K:case $:case B:qe="";break;default:b!==B&&(qe=" ")}break;case ne:qe="\\0";break;case re:qe="\\f";break;case oe:qe="\\v";break;case H:d+f+s===0&&ve>0&&(Ee=1,we=1,qe="\f"+qe);break;case 108:if(d+f+s+ye===0&&O>0)switch(q-O){case 2:w===ue&&o.charCodeAt(q-3)===K&&(ye=w);case 8:x===ce&&(ye=x)}break;case K:d+f+s===0&&(O=q);break;case Y:f+p+d+s===0&&(we=1,qe+="\r");break;case G:case X:0===f&&(d=d===b?0:0===d?b:d);break;case L:d+f+p===0&&s++;break;case U:d+f+p===0&&s--;break;case z:d+f+s===0&&p--;break;case M:if(d+f+s===0){if(0===E)switch(2*w+3*x){case 533:break;default:S=0,E=1}p++}break;case W:f+p+d+s+O+_===0&&(_=1);break;case Q:case J:if(d+s+p>0)break;switch(f){case 0:switch(2*b+3*o.charCodeAt(q+1)){case 235:f=J;break;case 220:_e=q,f=Q}break;case Q:b===J&&w===Q&&_e+2!==q&&(33===o.charCodeAt(_e+2)&&(Ke+=o.substring(_e,q+1)),qe="",f=0)}}if(0===f){if(ve+d+s+_===0&&a!==ae&&b!==A)switch(b){case Y:case te:case Z:case ee:case z:case M:if(0===E){switch(w){case $:case B:case F:case D:qe+="\0";break;default:qe="\0"+qe+(b===Y?"":"\0")}we=1}else switch(b){case M:O+7===q&&108===w&&(O=0),E=++S;break;case z:0==(E=--S)&&(we=1,qe+="\0")}break;case $:case B:switch(w){case ne:case I:case N:case A:case Y:case re:case $:case B:case F:case D:break;default:0===E&&(we=1,qe+="\0")}}Qe+=qe,b!==B&&b!==$&&(C=b)}}x=w,w=b,q++}if(_e=Ke.length,xe>0&&0===_e&&0===Xe.length&&0===t[0].length==0&&(a!==ie||1===t.length&&(ve>0?ze:Le)===t[0])&&(_e=t.join(",").length+2),_e>0){if(l=0===ve&&a!==ae?function(e){for(var t,n,o=0,a=e.length,i=Array(a);o<a;++o){for(var l=e[o].split(c),u="",s=0,f=0,p=0,d=0,h=l.length;s<h;++s)if(!(0===(f=(n=l[s]).length)&&h>1)){if(p=u.charCodeAt(u.length-1),d=n.charCodeAt(0),t="",0!==s)switch(p){case Q:case te:case Z:case ee:case B:case M:break;default:t=" "}switch(d){case H:n=t+ze;case te:case Z:case ee:case B:case z:case M:break;case L:n=t+n+ze;break;case K:switch(2*n.charCodeAt(1)+3*n.charCodeAt(2)){case 530:if(be>0){n=t+n.substring(8,f-1);break}default:(s<1||l[s-1].length<1)&&(n=t+ze+n)}break;case Y:t="";default:n=f>1&&n.indexOf(":")>0?t+n.replace(k,"$1"+ze+"$2"):t+n+ze}u+=n}i[o]=u.replace(r,"").trim()}return i}(t):t,Se>0&&void 0!==(u=He(Re,Ke,l,e,me,he,_e,a,i,a))&&0===(Ke=u).length)return Ge+Ke+Xe;if(Ke=l.join(",")+"{"+Ke+"}",ge*ye!=0){switch(2!==ge||We(Ke,2)||(ye=0),ye){case ce:Ke=Ke.replace(y,":"+j+"$1")+Ke;break;case ue:Ke=Ke.replace(m,"::"+P+"input-$1")+Ke.replace(m,"::"+j+"$1")+Ke.replace(m,":"+R+"input-$1")+Ke}ye=0}}return Ge+Ke+Xe}function Fe(e,t,n){var r=t.trim().split(s),o=r,a=r.length,i=e.length;switch(i){case 0:case 1:for(var l=0,u=0===i?"":e[0]+" ";l<a;++l)o[l]=De(u,o[l],n,i).trim();break;default:l=0;var c=0;for(o=[];l<a;++l)for(var f=0;f<i;++f)o[c++]=De(e[f]+" ",r[l],n,i).trim()}return o}function De(e,t,n,r){var o=t,a=o.charCodeAt(0);switch(a<33&&(a=(o=o.trim()).charCodeAt(0)),a){case H:switch(ve+r){case 0:case 1:if(0===e.trim().length)break;default:return o.replace(f,"$1"+e.trim())}break;case K:switch(o.charCodeAt(1)){case 103:if(be>0&&ve>0)return o.replace(p,"$1").replace(f,"$1"+Le);break;default:return e.trim()+o.replace(f,"$1"+e.trim())}default:if(n*ve>0&&o.indexOf("\f")>0)return o.replace(f,(e.charCodeAt(0)===K?"":"$1")+e.trim())}return e+o}function $e(e,t,n,r){var c,s=0,f=e+";",p=2*t+3*n+4*r;if(944===p)return function(e){var t=e.length,n=e.indexOf(":",9)+1,r=e.substring(0,n).trim(),o=e.substring(n,t-1).trim();switch(e.charCodeAt(9)*Ie){case 0:break;case V:if(110!==e.charCodeAt(10))break;default:for(var a=o.split((o="",l)),i=0,n=0,t=a.length;i<t;n=0,++i){for(var c=a[i],s=c.split(u);c=s[n];){var f=c.charCodeAt(0);if(1===Ie&&(f>W&&f<90||f>96&&f<123||f===q||f===V&&c.charCodeAt(1)!==V))switch(isNaN(parseFloat(c))+(-1!==c.indexOf("("))){case 1:switch(c){case"infinite":case"alternate":case"backwards":case"running":case"normal":case"forwards":case"both":case"none":case"linear":case"ease":case"ease-in":case"ease-out":case"ease-in-out":case"paused":case"reverse":case"alternate-reverse":case"inherit":case"initial":case"unset":case"step-start":case"step-end":break;default:c+=Me}}s[n++]=c}o+=(0===i?"":",")+s.join(" ")}}return o=r+o+";",1===ge||2===ge&&We(o,1)?P+o+o:o}(f);if(0===ge||2===ge&&!We(f,1))return f;switch(p){case 1015:return 97===f.charCodeAt(10)?P+f+f:f;case 951:return 116===f.charCodeAt(3)?P+f+f:f;case 963:return 110===f.charCodeAt(5)?P+f+f:f;case 1009:if(100!==f.charCodeAt(4))break;case 969:case 942:return P+f+f;case 978:return P+f+j+f+f;case 1019:case 983:return P+f+j+f+R+f+f;case 883:return f.charCodeAt(8)===V?P+f+f:f.indexOf("image-set(",11)>0?f.replace(O,"$1"+P+"$2")+f:f;case 932:if(f.charCodeAt(4)===V)switch(f.charCodeAt(5)){case 103:return P+"box-"+f.replace("-grow","")+P+f+R+f.replace("grow","positive")+f;case 115:return P+f+R+f.replace("shrink","negative")+f;case 98:return P+f+R+f.replace("basis","preferred-size")+f}return P+f+R+f+f;case 964:return P+f+R+"flex-"+f+f;case 1023:if(99!==f.charCodeAt(8))break;return c=f.substring(f.indexOf(":",15)).replace("flex-","").replace("space-between","justify"),P+"box-pack"+c+P+f+R+"flex-pack"+c+f;case 1005:return a.test(f)?f.replace(o,":"+P)+f.replace(o,":"+j)+f:f;case 1e3:switch(s=(c=f.substring(13).trim()).indexOf("-")+1,c.charCodeAt(0)+c.charCodeAt(s)){case 226:c=f.replace(x,"tb");break;case 232:c=f.replace(x,"tb-rl");break;case 220:c=f.replace(x,"lr");break;default:return f}return P+f+R+c+f;case 1017:if(-1===f.indexOf("sticky",9))return f;case 975:switch(s=(f=e).length-10,p=(c=(33===f.charCodeAt(s)?f.substring(0,s):f).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|c.charCodeAt(7))){case 203:if(c.charCodeAt(8)<111)break;case 115:f=f.replace(c,P+c)+";"+f;break;case 207:case 102:f=f.replace(c,P+(p>102?"inline-":"")+"box")+";"+f.replace(c,P+c)+";"+f.replace(c,R+c+"box")+";"+f}return f+";";case 938:if(f.charCodeAt(5)===V)switch(f.charCodeAt(6)){case 105:return c=f.replace("-items",""),P+f+P+"box-"+c+R+"flex-"+c+f;case 115:return P+f+R+"flex-item-"+f.replace(S,"")+f;default:return P+f+R+"flex-line-pack"+f.replace("align-content","").replace(S,"")+f}break;case 973:case 989:if(f.charCodeAt(3)!==V||122===f.charCodeAt(4))break;case 931:case 953:if(!0===_.test(e))return 115===(c=e.substring(e.indexOf(":")+1)).charCodeAt(0)?$e(e.replace("stretch","fill-available"),t,n,r).replace(":fill-available",":stretch"):f.replace(c,P+c)+f.replace(c,j+c.replace("fill-",""))+f;break;case 962:if(f=P+f+(102===f.charCodeAt(5)?R+f:"")+f,n+r===211&&105===f.charCodeAt(13)&&f.indexOf("transform",10)>0)return f.substring(0,f.indexOf(";",27)+1).replace(i,"$1"+P+"$2")+f}return f}function We(e,t){var n=e.indexOf(1===t?":":"{"),r=e.substring(0,3!==t?n:10),o=e.substring(n+1,e.length-1);return Ee(2!==t?r:r.replace(E,"$1"),o,t)}function Be(e,t){var n=$e(t,t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2));return n!==t+";"?n.replace(C," or ($1)").substring(4):"("+t+")"}function He(e,t,n,r,o,a,i,l,u,c){for(var s,f=0,p=t;f<Se;++f)switch(s=Ce[f].call(Qe,e,p,n,r,o,a,i,l,u,c)){case void 0:case!1:case!0:case null:break;default:p=s}if(p!==t)return p}function Ve(e,t,n,r){for(var o=t+1;o<n;++o)switch(r.charCodeAt(o)){case J:if(e===Q&&r.charCodeAt(o-1)===Q&&t+2!==o)return o+1;break;case F:if(e===J)return o+1}return o}function qe(e){for(var t in e){var n=e[t];switch(t){case"keyframe":Ie=0|n;break;case"global":be=0|n;break;case"cascade":ve=0|n;break;case"compress":we=0|n;break;case"semicolon":ke=0|n;break;case"preserve":xe=0|n;break;case"prefix":Ee=null,n?"function"!=typeof n?ge=1:(ge=2,Ee=n):ge=0}}return qe}function Qe(t,n){if(void 0!==this&&this.constructor===Qe)return e(t);var o=t,a=o.charCodeAt(0);a<33&&(a=(o=o.trim()).charCodeAt(0)),Ie>0&&(Me=o.replace(d,a===L?"":"-")),a=1,1===ve?Le=o:ze=o;var i,l=[Le];Se>0&&void 0!==(i=He(Oe,n,l,l,me,he,0,0,0,0))&&"string"==typeof i&&(n=i);var u=Ue(Te,l,n,0,0);return Se>0&&void 0!==(i=He(_e,u,l,l,me,he,u.length,0,0,0))&&"string"!=typeof(u=i)&&(a=0),Me="",Le="",ze="",ye=0,me=1,he=1,we*a==0?u:u.replace(r,"").replace(v,"").replace(g,"$1").replace(b,"$1").replace(w," ")}return Qe.use=function e(t){switch(t){case void 0:case null:Se=Ce.length=0;break;default:if("function"==typeof t)Ce[Se++]=t;else if("object"==typeof t)for(var n=0,r=t.length;n<r;++n)e(t[n]);else Ne=0|!!t}return e},Qe.set=qe,void 0!==t&&qe(t),Qe}(null)},function(e,t,n){"use strict";var r=function(e,t){return e===t};t.a=function(e,t){var n;void 0===t&&(t=r);var o,a=[],i=!1,l=function(e,n){return t(e,a[n],n)};return function(){for(var t=arguments.length,r=new Array(t),u=0;u<t;u++)r[u]=arguments[u];return i&&n===this&&r.length===a.length&&r.every(l)?o:(o=e.apply(this,r),i=!0,n=this,a=r,o)}}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,i,l=function(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),u=1;u<arguments.length;u++){for(var c in n=Object(arguments[u]))o.call(n,c)&&(l[c]=n[c]);if(r){i=r(n);for(var s=0;s<i.length;s++)a.call(n,i[s])&&(l[i[s]]=n[i[s]])}}return l}},function(e,t,n){e.exports=function(){"use strict";return function(e){function t(t){if(t)try{e(t+"}")}catch(e){}}return function(n,r,o,a,i,l,u,c,s,f){switch(n){case 1:if(0===s&&64===r.charCodeAt(0))return e(r+";"),"";break;case 2:if(0===c)return r+"/*|*/";break;case 3:switch(c){case 102:case 112:return e(o[0]+r),"";default:return r+(0===f?"/*|*/":"")}case-2:r.split("/*|*/}").forEach(t)}}}}()},function(e,t,n){"use strict";t.a={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1}},function(e,t,n){var r=n(26);e.exports=d,e.exports.parse=a,e.exports.compile=function(e,t){return l(a(e,t))},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=p;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function a(e,t){for(var n,r=[],a=0,i=0,l="",s=t&&t.delimiter||"/";null!=(n=o.exec(e));){var f=n[0],p=n[1],d=n.index;if(l+=e.slice(i,d),i=d+f.length,p)l+=p[1];else{var h=e[i],m=n[2],y=n[3],v=n[4],g=n[5],b=n[6],w=n[7];l&&(r.push(l),l="");var k=null!=m&&null!=h&&h!==m,x="+"===b||"*"===b,T="?"===b||"*"===b,C=n[2]||s,S=v||g;r.push({name:y||a++,prefix:m||"",delimiter:C,optional:T,repeat:x,partial:k,asterisk:!!w,pattern:S?c(S):w?".*":"[^"+u(C)+"]+?"})}}return i<e.length&&(l+=e.substr(i)),l&&r.push(l),r}function i(e){return encodeURI(e).replace(/[\/?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function l(e){for(var t=new Array(e.length),n=0;n<e.length;n++)"object"==typeof e[n]&&(t[n]=new RegExp("^(?:"+e[n].pattern+")$"));return function(n,o){for(var a="",l=n||{},u=(o||{}).pretty?i:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,p=l[s.name];if(null==p){if(s.optional){s.partial&&(a+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(p)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(p)+"`");if(0===p.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var d=0;d<p.length;d++){if(f=u(p[d]),!t[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");a+=(0===d?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(p).replace(/[?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}):u(p),!t[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');a+=s.prefix+f}}else a+=s}return a}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function s(e,t){return e.keys=t,e}function f(e){return e.sensitive?"":"i"}function p(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,a=!1!==n.end,i="",l=0;l<e.length;l++){var c=e[l];if("string"==typeof c)i+=u(c);else{var p=u(c.prefix),d="(?:"+c.pattern+")";t.push(c),c.repeat&&(d+="(?:"+p+d+")*"),i+=d=c.optional?c.partial?p+"("+d+")?":"(?:"+p+"("+d+"))?":p+"("+d+")"}}var h=u(n.delimiter||"/"),m=i.slice(-h.length)===h;return o||(i=(m?i.slice(0,-h.length):i)+"(?:"+h+"(?=$))?"),i+=a?"$":o&&m?"":"(?="+h+"|$)",s(new RegExp("^"+i,f(n)),t)}function d(e,t,n){return r(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(e,t)}(e,t):r(e)?function(e,t,n){for(var r=[],o=0;o<e.length;o++)r.push(d(e[o],t,n).source);return s(new RegExp("(?:"+r.join("|")+")",f(n)),t)}(e,t,n):function(e,t,n){return p(a(e,n),t,n)}(e,t,n)}},function(e,t,n){"use strict";var r=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|default|defer|dir|disabled|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|itemProp|itemScope|itemType|itemID|itemRef|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,o=function(e){var t={};return function(n){return void 0===t[n]&&(t[n]=e(n)),t[n]}}(function(e){return r.test(e)||111===e.charCodeAt(0)&&110===e.charCodeAt(1)&&e.charCodeAt(2)<91});t.a=o},function(e,t,n){e.exports=n(27)},function(e,t,n){"use strict";
/** @license React v16.8.4
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(11),o="function"==typeof Symbol&&Symbol.for,a=o?Symbol.for("react.element"):60103,i=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,p=o?Symbol.for("react.concurrent_mode"):60111,d=o?Symbol.for("react.forward_ref"):60112,h=o?Symbol.for("react.suspense"):60113,m=o?Symbol.for("react.memo"):60115,y=o?Symbol.for("react.lazy"):60116,v="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,a,i,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,a,i,l],c=0;(e=Error(t.replace(/%s/g,function(){return u[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var b={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},w={};function k(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||b}function x(){}function T(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||b}k.prototype.isReactComponent={},k.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&g("85"),this.updater.enqueueSetState(this,e,t,"setState")},k.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},x.prototype=k.prototype;var C=T.prototype=new x;C.constructor=T,r(C,k.prototype),C.isPureReactComponent=!0;var S={current:null},E={current:null},_=Object.prototype.hasOwnProperty,O={key:!0,ref:!0,__self:!0,__source:!0};function P(e,t,n){var r=void 0,o={},i=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)_.call(t,r)&&!O.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:a,type:e,key:i,ref:l,props:o,_owner:E.current}}function j(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var R=/\/+/g,A=[];function N(e,t,n,r){if(A.length){var o=A.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function I(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>A.length&&A.push(e)}function M(e,t,n){return null==e?0:function e(t,n,r,o){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var u=!1;if(null===t)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case a:case i:u=!0}}if(u)return r(o,t,""===n?"."+z(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var s=n+z(l=t[c],c);u+=e(l,s,r,o)}else if(s=null===t||"object"!=typeof t?null:"function"==typeof(s=v&&t[v]||t["@@iterator"])?s:null,"function"==typeof s)for(t=s.call(t),c=0;!(l=t.next()).done;)u+=e(l=l.value,s=n+z(l,c++),r,o);else"object"===l&&g("31","[object Object]"==(r=""+t)?"object with keys {"+Object.keys(t).join(", ")+"}":r,"");return u}(e,"",t,n)}function z(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function L(e,t){e.func.call(e.context,t,e.count++)}function U(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?F(e,r,n,function(e){return e}):null!=e&&(j(e)&&(e=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(R,"$&/")+"/")+n)),r.push(e))}function F(e,t,n,r,o){var a="";null!=n&&(a=(""+n).replace(R,"$&/")+"/"),M(e,U,t=N(t,a,r,o)),I(t)}function D(){var e=S.current;return null===e&&g("307"),e}var $={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return F(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;M(e,L,t=N(null,null,t,n)),I(t)},count:function(e){return M(e,function(){return null},null)},toArray:function(e){var t=[];return F(e,t,null,function(e){return e}),t},only:function(e){return j(e)||g("143"),e}},createRef:function(){return{current:null}},Component:k,PureComponent:T,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:d,render:e}},lazy:function(e){return{$$typeof:y,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},useCallback:function(e,t){return D().useCallback(e,t)},useContext:function(e,t){return D().useContext(e,t)},useEffect:function(e,t){return D().useEffect(e,t)},useImperativeHandle:function(e,t,n){return D().useImperativeHandle(e,t,n)},useDebugValue:function(){},useLayoutEffect:function(e,t){return D().useLayoutEffect(e,t)},useMemo:function(e,t){return D().useMemo(e,t)},useReducer:function(e,t,n){return D().useReducer(e,t,n)},useRef:function(e){return D().useRef(e)},useState:function(e){return D().useState(e)},Fragment:l,StrictMode:u,Suspense:h,createElement:P,cloneElement:function(e,t,n){null==e&&g("267",e);var o=void 0,i=r({},e.props),l=e.key,u=e.ref,c=e._owner;if(null!=t){void 0!==t.ref&&(u=t.ref,c=E.current),void 0!==t.key&&(l=""+t.key);var s=void 0;for(o in e.type&&e.type.defaultProps&&(s=e.type.defaultProps),t)_.call(t,o)&&!O.hasOwnProperty(o)&&(i[o]=void 0===t[o]&&void 0!==s?s[o]:t[o])}if(1===(o=arguments.length-2))i.children=n;else if(1<o){s=Array(o);for(var f=0;f<o;f++)s[f]=arguments[f+2];i.children=s}return{$$typeof:a,type:e.type,key:l,ref:u,props:i,_owner:c}},createFactory:function(e){var t=P.bind(null,e);return t.type=e,t},isValidElement:j,version:"16.8.4",unstable_ConcurrentMode:p,unstable_Profiler:c,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:S,ReactCurrentOwner:E,assign:r}},W={default:$},B=W&&$||W;e.exports=B.default||B},function(e,t,n){"use strict";
/** @license React v16.8.4
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(11),a=n(19);function i(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,a,i,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,a,i,l],c=0;(e=Error(t.replace(/%s/g,function(){return u[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}r||i("227");var l=!1,u=null,c=!1,s=null,f={onError:function(e){l=!0,u=e}};function p(e,t,n,r,o,a,i,c,s){l=!1,u=null,function(e,t,n,r,o,a,i,l,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}.apply(f,arguments)}var d=null,h={};function m(){if(d)for(var e in h){var t=h[e],n=d.indexOf(e);if(-1<n||i("96",e),!v[n])for(var r in t.extractEvents||i("97",e),v[n]=t,n=t.eventTypes){var o=void 0,a=n[r],l=t,u=r;g.hasOwnProperty(u)&&i("99",u),g[u]=a;var c=a.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&y(c[o],l,u);o=!0}else a.registrationName?(y(a.registrationName,l,u),o=!0):o=!1;o||i("98",r,e)}}}function y(e,t,n){b[e]&&i("100",e),b[e]=t,w[e]=t.eventTypes[n].dependencies}var v=[],g={},b={},w={},k=null,x=null,T=null;function C(e,t,n){var r=e.type||"unknown-event";e.currentTarget=T(n),function(e,t,n,r,o,a,f,d,h){if(p.apply(this,arguments),l){if(l){var m=u;l=!1,u=null}else i("198"),m=void 0;c||(c=!0,s=m)}}(r,t,void 0,e),e.currentTarget=null}function S(e,t){return null==t&&i("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function E(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var _=null;function O(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)C(e,t[r],n[r]);else t&&C(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}var P={injectEventPluginOrder:function(e){d&&i("101"),d=Array.prototype.slice.call(e),m()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];h.hasOwnProperty(t)&&h[t]===r||(h[t]&&i("102",t),h[t]=r,n=!0)}n&&m()}};function j(e,t){var n=e.stateNode;if(!n)return null;var r=k(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&i("231",t,typeof n),n)}function R(e){if(null!==e&&(_=S(_,e)),e=_,_=null,e&&(E(e,O),_&&i("95"),c))throw e=s,c=!1,s=null,e}var A=Math.random().toString(36).slice(2),N="__reactInternalInstance$"+A,I="__reactEventHandlers$"+A;function M(e){if(e[N])return e[N];for(;!e[N];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[N]).tag||6===e.tag?e:null}function z(e){return!(e=e[N])||5!==e.tag&&6!==e.tag?null:e}function L(e){if(5===e.tag||6===e.tag)return e.stateNode;i("33")}function U(e){return e[I]||null}function F(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function D(e,t,n){(t=j(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function $(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=F(t);for(t=n.length;0<t--;)D(n[t],"captured",e);for(t=0;t<n.length;t++)D(n[t],"bubbled",e)}}function W(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=j(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function B(e){e&&e.dispatchConfig.registrationName&&W(e._targetInst,null,e)}function H(e){E(e,$)}var V=!("undefined"==typeof window||!window.document||!window.document.createElement);function q(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Q={animationend:q("Animation","AnimationEnd"),animationiteration:q("Animation","AnimationIteration"),animationstart:q("Animation","AnimationStart"),transitionend:q("Transition","TransitionEnd")},Y={},K={};function X(e){if(Y[e])return Y[e];if(!Q[e])return e;var t,n=Q[e];for(t in n)if(n.hasOwnProperty(t)&&t in K)return Y[e]=n[t];return e}V&&(K=document.createElement("div").style,"AnimationEvent"in window||(delete Q.animationend.animation,delete Q.animationiteration.animation,delete Q.animationstart.animation),"TransitionEvent"in window||delete Q.transitionend.transition);var G=X("animationend"),J=X("animationiteration"),Z=X("animationstart"),ee=X("transitionend"),te="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ne=null,re=null,oe=null;function ae(){if(oe)return oe;var e,t,n=re,r=n.length,o="value"in ne?ne.value:ne.textContent,a=o.length;for(e=0;e<r&&n[e]===o[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===o[a-t];t++);return oe=o.slice(e,1<t?1-t:void 0)}function ie(){return!0}function le(){return!1}function ue(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?ie:le,this.isPropagationStopped=le,this}function ce(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function se(e){e instanceof this||i("279"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function fe(e){e.eventPool=[],e.getPooled=ce,e.release=se}o(ue.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ie)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ie)},persist:function(){this.isPersistent=ie},isPersistent:le,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=le,this._dispatchInstances=this._dispatchListeners=null}}),ue.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},ue.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var a=new t;return o(a,n.prototype),n.prototype=a,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,fe(n),n},fe(ue);var pe=ue.extend({data:null}),de=ue.extend({data:null}),he=[9,13,27,32],me=V&&"CompositionEvent"in window,ye=null;V&&"documentMode"in document&&(ye=document.documentMode);var ve=V&&"TextEvent"in window&&!ye,ge=V&&(!me||ye&&8<ye&&11>=ye),be=String.fromCharCode(32),we={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},ke=!1;function xe(e,t){switch(e){case"keyup":return-1!==he.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Te(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Ce=!1;var Se={eventTypes:we,extractEvents:function(e,t,n,r){var o=void 0,a=void 0;if(me)e:{switch(e){case"compositionstart":o=we.compositionStart;break e;case"compositionend":o=we.compositionEnd;break e;case"compositionupdate":o=we.compositionUpdate;break e}o=void 0}else Ce?xe(e,n)&&(o=we.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=we.compositionStart);return o?(ge&&"ko"!==n.locale&&(Ce||o!==we.compositionStart?o===we.compositionEnd&&Ce&&(a=ae()):(re="value"in(ne=r)?ne.value:ne.textContent,Ce=!0)),o=pe.getPooled(o,t,n,r),a?o.data=a:null!==(a=Te(n))&&(o.data=a),H(o),a=o):a=null,(e=ve?function(e,t){switch(e){case"compositionend":return Te(t);case"keypress":return 32!==t.which?null:(ke=!0,be);case"textInput":return(e=t.data)===be&&ke?null:e;default:return null}}(e,n):function(e,t){if(Ce)return"compositionend"===e||!me&&xe(e,t)?(e=ae(),oe=re=ne=null,Ce=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return ge&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=de.getPooled(we.beforeInput,t,n,r)).data=e,H(t)):t=null,null===a?t:null===t?a:[a,t]}},Ee=null,_e=null,Oe=null;function Pe(e){if(e=x(e)){"function"!=typeof Ee&&i("280");var t=k(e.stateNode);Ee(e.stateNode,e.type,t)}}function je(e){_e?Oe?Oe.push(e):Oe=[e]:_e=e}function Re(){if(_e){var e=_e,t=Oe;if(Oe=_e=null,Pe(e),t)for(e=0;e<t.length;e++)Pe(t[e])}}function Ae(e,t){return e(t)}function Ne(e,t,n){return e(t,n)}function Ie(){}var Me=!1;function ze(e,t){if(Me)return e(t);Me=!0;try{return Ae(e,t)}finally{Me=!1,(null!==_e||null!==Oe)&&(Ie(),Re())}}var Le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Ue(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Le[e.type]:"textarea"===t}function Fe(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function De(e){if(!V)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}function $e(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function We(e){e._valueTracker||(e._valueTracker=function(e){var t=$e(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Be(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=$e(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var He=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;He.hasOwnProperty("ReactCurrentDispatcher")||(He.ReactCurrentDispatcher={current:null});var Ve=/^(.*)[\\\/]/,qe="function"==typeof Symbol&&Symbol.for,Qe=qe?Symbol.for("react.element"):60103,Ye=qe?Symbol.for("react.portal"):60106,Ke=qe?Symbol.for("react.fragment"):60107,Xe=qe?Symbol.for("react.strict_mode"):60108,Ge=qe?Symbol.for("react.profiler"):60114,Je=qe?Symbol.for("react.provider"):60109,Ze=qe?Symbol.for("react.context"):60110,et=qe?Symbol.for("react.concurrent_mode"):60111,tt=qe?Symbol.for("react.forward_ref"):60112,nt=qe?Symbol.for("react.suspense"):60113,rt=qe?Symbol.for("react.memo"):60115,ot=qe?Symbol.for("react.lazy"):60116,at="function"==typeof Symbol&&Symbol.iterator;function it(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=at&&e[at]||e["@@iterator"])?e:null}function lt(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case et:return"ConcurrentMode";case Ke:return"Fragment";case Ye:return"Portal";case Ge:return"Profiler";case Xe:return"StrictMode";case nt:return"Suspense"}if("object"==typeof e)switch(e.$$typeof){case Ze:return"Context.Consumer";case Je:return"Context.Provider";case tt:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case rt:return lt(e.type);case ot:if(e=1===e._status?e._result:null)return lt(e)}return null}function ut(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,a=lt(e.type);n=null,r&&(n=lt(r.type)),r=a,a="",o?a=" (at "+o.fileName.replace(Ve,"")+":"+o.lineNumber+")":n&&(a=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+a}t+=n,e=e.return}while(e);return t}var ct=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,st=Object.prototype.hasOwnProperty,ft={},pt={};function dt(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var ht={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){ht[e]=new dt(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];ht[t]=new dt(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){ht[e]=new dt(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){ht[e]=new dt(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){ht[e]=new dt(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){ht[e]=new dt(e,3,!0,e,null)}),["capture","download"].forEach(function(e){ht[e]=new dt(e,4,!1,e,null)}),["cols","rows","size","span"].forEach(function(e){ht[e]=new dt(e,6,!1,e,null)}),["rowSpan","start"].forEach(function(e){ht[e]=new dt(e,5,!1,e.toLowerCase(),null)});var mt=/[\-:]([a-z])/g;function yt(e){return e[1].toUpperCase()}function vt(e,t,n,r){var o=ht.hasOwnProperty(t)?ht[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!st.call(pt,e)||!st.call(ft,e)&&(ct.test(e)?pt[e]=!0:(ft[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function gt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function bt(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function wt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=gt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function kt(e,t){null!=(t=t.checked)&&vt(e,"checked",t,!1)}function xt(e,t){kt(e,t);var n=gt(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Ct(e,t.type,n):t.hasOwnProperty("defaultValue")&&Ct(e,t.type,gt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Tt(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Ct(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(mt,yt);ht[t]=new dt(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(mt,yt);ht[t]=new dt(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(mt,yt);ht[t]=new dt(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),["tabIndex","crossOrigin"].forEach(function(e){ht[e]=new dt(e,1,!1,e.toLowerCase(),null)});var St={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Et(e,t,n){return(e=ue.getPooled(St.change,e,t,n)).type="change",je(n),H(e),e}var _t=null,Ot=null;function Pt(e){R(e)}function jt(e){if(Be(L(e)))return e}function Rt(e,t){if("change"===e)return t}var At=!1;function Nt(){_t&&(_t.detachEvent("onpropertychange",It),Ot=_t=null)}function It(e){"value"===e.propertyName&&jt(Ot)&&ze(Pt,e=Et(Ot,e,Fe(e)))}function Mt(e,t,n){"focus"===e?(Nt(),Ot=n,(_t=t).attachEvent("onpropertychange",It)):"blur"===e&&Nt()}function zt(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return jt(Ot)}function Lt(e,t){if("click"===e)return jt(t)}function Ut(e,t){if("input"===e||"change"===e)return jt(t)}V&&(At=De("input")&&(!document.documentMode||9<document.documentMode));var Ft={eventTypes:St,_isInputEventSupported:At,extractEvents:function(e,t,n,r){var o=t?L(t):window,a=void 0,i=void 0,l=o.nodeName&&o.nodeName.toLowerCase();if("select"===l||"input"===l&&"file"===o.type?a=Rt:Ue(o)?At?a=Ut:(a=zt,i=Mt):(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(a=Lt),a&&(a=a(e,t)))return Et(a,n,r);i&&i(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Ct(o,"number",o.value)}},Dt=ue.extend({view:null,detail:null}),$t={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Wt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=$t[e])&&!!t[e]}function Bt(){return Wt}var Ht=0,Vt=0,qt=!1,Qt=!1,Yt=Dt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Bt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Ht;return Ht=e.screenX,qt?"mousemove"===e.type?e.screenX-t:0:(qt=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Vt;return Vt=e.screenY,Qt?"mousemove"===e.type?e.screenY-t:0:(Qt=!0,0)}}),Kt=Yt.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Xt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Gt={eventTypes:Xt,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,a="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!a&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,a?(a=t,t=(t=n.relatedTarget||n.toElement)?M(t):null):a=null,a===t)return null;var i=void 0,l=void 0,u=void 0,c=void 0;"mouseout"===e||"mouseover"===e?(i=Yt,l=Xt.mouseLeave,u=Xt.mouseEnter,c="mouse"):"pointerout"!==e&&"pointerover"!==e||(i=Kt,l=Xt.pointerLeave,u=Xt.pointerEnter,c="pointer");var s=null==a?o:L(a);if(o=null==t?o:L(t),(e=i.getPooled(l,a,n,r)).type=c+"leave",e.target=s,e.relatedTarget=o,(n=i.getPooled(u,t,n,r)).type=c+"enter",n.target=o,n.relatedTarget=s,r=t,a&&r)e:{for(o=r,c=0,i=t=a;i;i=F(i))c++;for(i=0,u=o;u;u=F(u))i++;for(;0<c-i;)t=F(t),c--;for(;0<i-c;)o=F(o),i--;for(;c--;){if(t===o||t===o.alternate)break e;t=F(t),o=F(o)}t=null}else t=null;for(o=t,t=[];a&&a!==o&&(null===(c=a.alternate)||c!==o);)t.push(a),a=F(a);for(a=[];r&&r!==o&&(null===(c=r.alternate)||c!==o);)a.push(r),r=F(r);for(r=0;r<t.length;r++)W(t[r],"bubbled",e);for(r=a.length;0<r--;)W(a[r],"captured",n);return[e,n]}};function Jt(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t}var Zt=Object.prototype.hasOwnProperty;function en(e,t){if(Jt(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Zt.call(t,n[r])||!Jt(e[n[r]],t[n[r]]))return!1;return!0}function tn(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function nn(e){2!==tn(e)&&i("188")}function rn(e){if(!(e=function(e){var t=e.alternate;if(!t)return 3===(t=tn(e))&&i("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,a=o?o.alternate:null;if(!o||!a)break;if(o.child===a.child){for(var l=o.child;l;){if(l===n)return nn(o),e;if(l===r)return nn(o),t;l=l.sibling}i("188")}if(n.return!==r.return)n=o,r=a;else{l=!1;for(var u=o.child;u;){if(u===n){l=!0,n=o,r=a;break}if(u===r){l=!0,r=o,n=a;break}u=u.sibling}if(!l){for(u=a.child;u;){if(u===n){l=!0,n=a,r=o;break}if(u===r){l=!0,r=a,n=o;break}u=u.sibling}l||i("189")}}n.alternate!==r&&i("190")}return 3!==n.tag&&i("188"),n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var on=ue.extend({animationName:null,elapsedTime:null,pseudoElement:null}),an=ue.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),ln=Dt.extend({relatedTarget:null});function un(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var cn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},fn=Dt.extend({key:function(e){if(e.key){var t=cn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=un(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?sn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Bt,charCode:function(e){return"keypress"===e.type?un(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?un(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),pn=Yt.extend({dataTransfer:null}),dn=Dt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Bt}),hn=ue.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),mn=Yt.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),yn=[["abort","abort"],[G,"animationEnd"],[J,"animationIteration"],[Z,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ee,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],vn={},gn={};function bn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},vn[e]=t,gn[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){bn(e,!0)}),yn.forEach(function(e){bn(e,!1)});var wn={eventTypes:vn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=gn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=gn[e];if(!o)return null;switch(e){case"keypress":if(0===un(n))return null;case"keydown":case"keyup":e=fn;break;case"blur":case"focus":e=ln;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Yt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=pn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=dn;break;case G:case J:case Z:e=on;break;case ee:e=hn;break;case"scroll":e=Dt;break;case"wheel":e=mn;break;case"copy":case"cut":case"paste":e=an;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Kt;break;default:e=ue}return H(t=e.getPooled(o,t,n,r)),t}},kn=wn.isInteractiveTopLevelEventType,xn=[];function Tn(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=M(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=Fe(e.nativeEvent);r=e.topLevelType;for(var a=e.nativeEvent,i=null,l=0;l<v.length;l++){var u=v[l];u&&(u=u.extractEvents(r,t,a,o))&&(i=S(i,u))}R(i)}}var Cn=!0;function Sn(e,t){if(!t)return null;var n=(kn(e)?_n:On).bind(null,e);t.addEventListener(e,n,!1)}function En(e,t){if(!t)return null;var n=(kn(e)?_n:On).bind(null,e);t.addEventListener(e,n,!0)}function _n(e,t){Ne(On,e,t)}function On(e,t){if(Cn){var n=Fe(t);if(null===(n=M(n))||"number"!=typeof n.tag||2===tn(n)||(n=null),xn.length){var r=xn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{ze(Tn,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>xn.length&&xn.push(e)}}}var Pn={},jn=0,Rn="_reactListenersID"+(""+Math.random()).slice(2);function An(e){return Object.prototype.hasOwnProperty.call(e,Rn)||(e[Rn]=jn++,Pn[e[Rn]]={}),Pn[e[Rn]]}function Nn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function In(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Mn(e,t){var n,r=In(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=In(r)}}function zn(){for(var e=window,t=Nn();t instanceof e.HTMLIFrameElement;){try{e=t.contentDocument.defaultView}catch(e){break}t=Nn(e.document)}return t}function Ln(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function Un(e){var t=zn(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(n.ownerDocument.documentElement,n)){if(null!==r&&Ln(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var o=n.textContent.length,a=Math.min(r.start,o);r=void 0===r.end?a:Math.min(r.end,o),!e.extend&&a>r&&(o=r,r=a,a=o),o=Mn(n,a);var i=Mn(n,r);o&&i&&(1!==e.rangeCount||e.anchorNode!==o.node||e.anchorOffset!==o.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(o.node,o.offset),e.removeAllRanges(),a>r?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var Fn=V&&"documentMode"in document&&11>=document.documentMode,Dn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},$n=null,Wn=null,Bn=null,Hn=!1;function Vn(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Hn||null==$n||$n!==Nn(n)?null:("selectionStart"in(n=$n)&&Ln(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Bn&&en(Bn,n)?null:(Bn=n,(e=ue.getPooled(Dn.select,Wn,e,t)).type="select",e.target=$n,H(e),e))}var qn={eventTypes:Dn,extractEvents:function(e,t,n,r){var o,a=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!a)){e:{a=An(a),o=w.onSelect;for(var i=0;i<o.length;i++){var l=o[i];if(!a.hasOwnProperty(l)||!a[l]){a=!1;break e}}a=!0}o=!a}if(o)return null;switch(a=t?L(t):window,e){case"focus":(Ue(a)||"true"===a.contentEditable)&&($n=a,Wn=t,Bn=null);break;case"blur":Bn=Wn=$n=null;break;case"mousedown":Hn=!0;break;case"contextmenu":case"mouseup":case"dragend":return Hn=!1,Vn(n,r);case"selectionchange":if(Fn)break;case"keydown":case"keyup":return Vn(n,r)}return null}};function Qn(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,function(e){null!=e&&(t+=e)}),t}(t.children))&&(e.children=t),e}function Yn(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+gt(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Kn(e,t){return null!=t.dangerouslySetInnerHTML&&i("91"),o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Xn(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&i("92"),Array.isArray(t)&&(1>=t.length||i("93"),t=t[0]),n=t),null==n&&(n="")),e._wrapperState={initialValue:gt(n)}}function Gn(e,t){var n=gt(t.value),r=gt(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Jn(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}P.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),k=U,x=z,T=L,P.injectEventPluginsByName({SimpleEventPlugin:wn,EnterLeaveEventPlugin:Gt,ChangeEventPlugin:Ft,SelectEventPlugin:qn,BeforeInputEventPlugin:Se});var Zn={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function er(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function tr(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?er(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var nr,rr=void 0,or=(nr=function(e,t){if(e.namespaceURI!==Zn.svg||"innerHTML"in e)e.innerHTML=t;else{for((rr=rr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=rr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction(function(){return nr(e,t)})}:nr);function ar(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ir={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},lr=["Webkit","ms","Moz","O"];function ur(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ir.hasOwnProperty(e)&&ir[e]?(""+t).trim():t+"px"}function cr(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=ur(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ir).forEach(function(e){lr.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ir[t]=ir[e]})});var sr=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function fr(e,t){t&&(sr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&i("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&i("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||i("61")),null!=t.style&&"object"!=typeof t.style&&i("62",""))}function pr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function dr(e,t){var n=An(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=w[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":En("scroll",e);break;case"focus":case"blur":En("focus",e),En("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":De(o)&&En(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===te.indexOf(o)&&Sn(o,e)}n[o]=!0}}}function hr(){}var mr=null,yr=null;function vr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function gr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var br="function"==typeof setTimeout?setTimeout:void 0,wr="function"==typeof clearTimeout?clearTimeout:void 0,kr=a.unstable_scheduleCallback,xr=a.unstable_cancelCallback;function Tr(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function Cr(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var Sr=[],Er=-1;function _r(e){0>Er||(e.current=Sr[Er],Sr[Er]=null,Er--)}function Or(e,t){Sr[++Er]=e.current,e.current=t}var Pr={},jr={current:Pr},Rr={current:!1},Ar=Pr;function Nr(e,t){var n=e.type.contextTypes;if(!n)return Pr;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in n)a[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function Ir(e){return null!=(e=e.childContextTypes)}function Mr(e){_r(Rr),_r(jr)}function zr(e){_r(Rr),_r(jr)}function Lr(e,t,n){jr.current!==Pr&&i("168"),Or(jr,t),Or(Rr,n)}function Ur(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())a in e||i("108",lt(t)||"Unknown",a);return o({},n,r)}function Fr(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Pr,Ar=jr.current,Or(jr,t),Or(Rr,Rr.current),!0}function Dr(e,t,n){var r=e.stateNode;r||i("169"),n?(t=Ur(e,t,Ar),r.__reactInternalMemoizedMergedChildContext=t,_r(Rr),_r(jr),Or(jr,t)):_r(Rr),Or(Rr,n)}var $r=null,Wr=null;function Br(e){return function(t){try{return e(t)}catch(e){}}}function Hr(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Vr(e,t,n,r){return new Hr(e,t,n,r)}function qr(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Qr(e,t){var n=e.alternate;return null===n?((n=Vr(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.contextDependencies=e.contextDependencies,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Yr(e,t,n,r,o,a){var l=2;if(r=e,"function"==typeof e)qr(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case Ke:return Kr(n.children,o,a,t);case et:return Xr(n,3|o,a,t);case Xe:return Xr(n,2|o,a,t);case Ge:return(e=Vr(12,n,t,4|o)).elementType=Ge,e.type=Ge,e.expirationTime=a,e;case nt:return(e=Vr(13,n,t,o)).elementType=nt,e.type=nt,e.expirationTime=a,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case Je:l=10;break e;case Ze:l=9;break e;case tt:l=11;break e;case rt:l=14;break e;case ot:l=16,r=null;break e}i("130",null==e?e:typeof e,"")}return(t=Vr(l,n,t,o)).elementType=e,t.type=r,t.expirationTime=a,t}function Kr(e,t,n,r){return(e=Vr(7,e,r,t)).expirationTime=n,e}function Xr(e,t,n,r){return e=Vr(8,e,r,t),t=0==(1&t)?Xe:et,e.elementType=t,e.type=t,e.expirationTime=n,e}function Gr(e,t,n){return(e=Vr(6,e,null,t)).expirationTime=n,e}function Jr(e,t,n){return(t=Vr(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Zr(e,t){e.didError=!1;var n=e.earliestPendingTime;0===n?e.earliestPendingTime=e.latestPendingTime=t:n<t?e.earliestPendingTime=t:e.latestPendingTime>t&&(e.latestPendingTime=t),no(t,e)}function eo(e,t){e.didError=!1,e.latestPingedTime>=t&&(e.latestPingedTime=0);var n=e.earliestPendingTime,r=e.latestPendingTime;n===t?e.earliestPendingTime=r===t?e.latestPendingTime=0:r:r===t&&(e.latestPendingTime=n),n=e.earliestSuspendedTime,r=e.latestSuspendedTime,0===n?e.earliestSuspendedTime=e.latestSuspendedTime=t:n<t?e.earliestSuspendedTime=t:r>t&&(e.latestSuspendedTime=t),no(t,e)}function to(e,t){var n=e.earliestPendingTime;return n>t&&(t=n),(e=e.earliestSuspendedTime)>t&&(t=e),t}function no(e,t){var n=t.earliestSuspendedTime,r=t.latestSuspendedTime,o=t.earliestPendingTime,a=t.latestPingedTime;0===(o=0!==o?o:a)&&(0===e||r<e)&&(o=r),0!==(e=o)&&n>e&&(e=n),t.nextExpirationTimeToWorkOn=o,t.expirationTime=e}function ro(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var oo=(new r.Component).refs;function ao(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var io={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===tn(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=xl(),o=Xa(r=Ki(r,e));o.payload=t,null!=n&&(o.callback=n),Bi(),Ja(e,o),Ji(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=xl(),o=Xa(r=Ki(r,e));o.tag=Ha,o.payload=t,null!=n&&(o.callback=n),Bi(),Ja(e,o),Ji(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=xl(),r=Xa(n=Ki(n,e));r.tag=Va,null!=t&&(r.callback=t),Bi(),Ja(e,r),Ji(e,n)}};function lo(e,t,n,r,o,a,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,i):!t.prototype||!t.prototype.isPureReactComponent||(!en(n,r)||!en(o,a))}function uo(e,t,n){var r=!1,o=Pr,a=t.contextType;return"object"==typeof a&&null!==a?a=Wa(a):(o=Ir(t)?Ar:jr.current,a=(r=null!=(r=t.contextTypes))?Nr(e,o):Pr),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=io,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),t}function co(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&io.enqueueReplaceState(t,t.state,null)}function so(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=oo;var a=t.contextType;"object"==typeof a&&null!==a?o.context=Wa(a):(a=Ir(t)?Ar:jr.current,o.context=Nr(e,a)),null!==(a=e.updateQueue)&&(ni(e,a,n,o,r),o.state=e.memoizedState),"function"==typeof(a=t.getDerivedStateFromProps)&&(ao(e,t,a,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&io.enqueueReplaceState(o,o.state,null),null!==(a=e.updateQueue)&&(ni(e,a,n,o,r),o.state=e.memoizedState)),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var fo=Array.isArray;function po(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){n=n._owner;var r=void 0;n&&(1!==n.tag&&i("309"),r=n.stateNode),r||i("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===oo&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&i("284"),n._owner||i("290",e)}return e}function ho(e,t){"textarea"!==e.type&&i("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function mo(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=Qr(e,t)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Gr(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=po(e,t,n),r.return=e,r):((r=Yr(n.type,n.key,n.props,null,e.mode,r)).ref=po(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Jr(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,a){return null===t||7!==t.tag?((t=Kr(n,e.mode,r,a)).return=e,t):((t=o(t,n)).return=e,t)}function p(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Gr(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case Qe:return(n=Yr(t.type,t.key,t.props,null,e.mode,n)).ref=po(e,null,t),n.return=e,n;case Ye:return(t=Jr(t,e.mode,n)).return=e,t}if(fo(t)||it(t))return(t=Kr(t,e.mode,n,null)).return=e,t;ho(e,t)}return null}function d(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case Qe:return n.key===o?n.type===Ke?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case Ye:return n.key===o?s(e,t,n,r):null}if(fo(n)||it(n))return null!==o?null:f(e,t,n,r,null);ho(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case Qe:return e=e.get(null===r.key?n:r.key)||null,r.type===Ke?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case Ye:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(fo(r)||it(r))return f(t,e=e.get(n)||null,r,o,null);ho(t,r)}return null}function m(o,i,l,u){for(var c=null,s=null,f=i,m=i=0,y=null;null!==f&&m<l.length;m++){f.index>m?(y=f,f=null):y=f.sibling;var v=d(o,f,l[m],u);if(null===v){null===f&&(f=y);break}e&&f&&null===v.alternate&&t(o,f),i=a(v,i,m),null===s?c=v:s.sibling=v,s=v,f=y}if(m===l.length)return n(o,f),c;if(null===f){for(;m<l.length;m++)(f=p(o,l[m],u))&&(i=a(f,i,m),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);m<l.length;m++)(y=h(f,o,m,l[m],u))&&(e&&null!==y.alternate&&f.delete(null===y.key?m:y.key),i=a(y,i,m),null===s?c=y:s.sibling=y,s=y);return e&&f.forEach(function(e){return t(o,e)}),c}function y(o,l,u,c){var s=it(u);"function"!=typeof s&&i("150"),null==(u=s.call(u))&&i("151");for(var f=s=null,m=l,y=l=0,v=null,g=u.next();null!==m&&!g.done;y++,g=u.next()){m.index>y?(v=m,m=null):v=m.sibling;var b=d(o,m,g.value,c);if(null===b){m||(m=v);break}e&&m&&null===b.alternate&&t(o,m),l=a(b,l,y),null===f?s=b:f.sibling=b,f=b,m=v}if(g.done)return n(o,m),s;if(null===m){for(;!g.done;y++,g=u.next())null!==(g=p(o,g.value,c))&&(l=a(g,l,y),null===f?s=g:f.sibling=g,f=g);return s}for(m=r(o,m);!g.done;y++,g=u.next())null!==(g=h(m,o,y,g.value,c))&&(e&&null!==g.alternate&&m.delete(null===g.key?y:g.key),l=a(g,l,y),null===f?s=g:f.sibling=g,f=g);return e&&m.forEach(function(e){return t(o,e)}),s}return function(e,r,a,u){var c="object"==typeof a&&null!==a&&a.type===Ke&&null===a.key;c&&(a=a.props.children);var s="object"==typeof a&&null!==a;if(s)switch(a.$$typeof){case Qe:e:{for(s=a.key,c=r;null!==c;){if(c.key===s){if(7===c.tag?a.type===Ke:c.elementType===a.type){n(e,c.sibling),(r=o(c,a.type===Ke?a.props.children:a.props)).ref=po(e,c,a),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}a.type===Ke?((r=Kr(a.props.children,e.mode,u,a.key)).return=e,e=r):((u=Yr(a.type,a.key,a.props,null,e.mode,u)).ref=po(e,r,a),u.return=e,e=u)}return l(e);case Ye:e:{for(c=a.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),(r=o(r,a.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Jr(a,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,a)).return=e,e=r):(n(e,r),(r=Gr(a,e.mode,u)).return=e,e=r),l(e);if(fo(a))return m(e,r,a,u);if(it(a))return y(e,r,a,u);if(s&&ho(e,a),void 0===a&&!c)switch(e.tag){case 1:case 0:i("152",(u=e.type).displayName||u.name||"Component")}return n(e,r)}}var yo=mo(!0),vo=mo(!1),go={},bo={current:go},wo={current:go},ko={current:go};function xo(e){return e===go&&i("174"),e}function To(e,t){Or(ko,t),Or(wo,e),Or(bo,go);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:tr(null,"");break;default:t=tr(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}_r(bo),Or(bo,t)}function Co(e){_r(bo),_r(wo),_r(ko)}function So(e){xo(ko.current);var t=xo(bo.current),n=tr(t,e.type);t!==n&&(Or(wo,e),Or(bo,n))}function Eo(e){wo.current===e&&(_r(bo),_r(wo))}var _o=0,Oo=2,Po=4,jo=8,Ro=16,Ao=32,No=64,Io=128,Mo=He.ReactCurrentDispatcher,zo=0,Lo=null,Uo=null,Fo=null,Do=null,$o=null,Wo=null,Bo=0,Ho=null,Vo=0,qo=!1,Qo=null,Yo=0;function Ko(){i("307")}function Xo(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Jt(e[n],t[n]))return!1;return!0}function Go(e,t,n,r,o,a){if(zo=a,Lo=t,Fo=null!==e?e.memoizedState:null,Mo.current=null===Fo?sa:fa,t=n(r,o),qo){do{qo=!1,Yo+=1,Fo=null!==e?e.memoizedState:null,Wo=Do,Ho=$o=Uo=null,Mo.current=fa,t=n(r,o)}while(qo);Qo=null,Yo=0}return Mo.current=ca,(e=Lo).memoizedState=Do,e.expirationTime=Bo,e.updateQueue=Ho,e.effectTag|=Vo,e=null!==Uo&&null!==Uo.next,zo=0,Wo=$o=Do=Fo=Uo=Lo=null,Bo=0,Ho=null,Vo=0,e&&i("300"),t}function Jo(){Mo.current=ca,zo=0,Wo=$o=Do=Fo=Uo=Lo=null,Bo=0,Ho=null,Vo=0,qo=!1,Qo=null,Yo=0}function Zo(){var e={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return null===$o?Do=$o=e:$o=$o.next=e,$o}function ea(){if(null!==Wo)Wo=($o=Wo).next,Fo=null!==(Uo=Fo)?Uo.next:null;else{null===Fo&&i("310");var e={memoizedState:(Uo=Fo).memoizedState,baseState:Uo.baseState,queue:Uo.queue,baseUpdate:Uo.baseUpdate,next:null};$o=null===$o?Do=e:$o.next=e,Fo=Uo.next}return $o}function ta(e,t){return"function"==typeof t?t(e):t}function na(e){var t=ea(),n=t.queue;if(null===n&&i("311"),0<Yo){var r=n.dispatch;if(null!==Qo){var o=Qo.get(n);if(void 0!==o){Qo.delete(n);var a=t.memoizedState;do{a=e(a,o.action),o=o.next}while(null!==o);return Jt(a,t.memoizedState)||(xa=!0),t.memoizedState=a,t.baseUpdate===n.last&&(t.baseState=a),n.eagerReducer=e,n.eagerState=a,[a,r]}}return[t.memoizedState,r]}r=n.last;var l=t.baseUpdate;if(a=t.baseState,null!==l?(null!==r&&(r.next=null),r=l.next):r=null!==r?r.next:null,null!==r){var u=o=null,c=r,s=!1;do{var f=c.expirationTime;f<zo?(s||(s=!0,u=l,o=a),f>Bo&&(Bo=f)):a=c.eagerReducer===e?c.eagerState:e(a,c.action),l=c,c=c.next}while(null!==c&&c!==r);s||(u=l,o=a),Jt(a,t.memoizedState)||(xa=!0),t.memoizedState=a,t.baseUpdate=u,t.baseState=o,n.eagerReducer=e,n.eagerState=a}return[t.memoizedState,n.dispatch]}function ra(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===Ho?(Ho={lastEffect:null}).lastEffect=e.next=e:null===(t=Ho.lastEffect)?Ho.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,Ho.lastEffect=e),e}function oa(e,t,n,r){var o=Zo();Vo|=e,o.memoizedState=ra(t,n,void 0,void 0===r?null:r)}function aa(e,t,n,r){var o=ea();r=void 0===r?null:r;var a=void 0;if(null!==Uo){var i=Uo.memoizedState;if(a=i.destroy,null!==r&&Xo(r,i.deps))return void ra(_o,n,a,r)}Vo|=e,o.memoizedState=ra(t,n,a,r)}function ia(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function la(){}function ua(e,t,n){25>Yo||i("301");var r=e.alternate;if(e===Lo||null!==r&&r===Lo)if(qo=!0,e={expirationTime:zo,action:n,eagerReducer:null,eagerState:null,next:null},null===Qo&&(Qo=new Map),void 0===(n=Qo.get(t)))Qo.set(t,e);else{for(t=n;null!==t.next;)t=t.next;t.next=e}else{Bi();var o=xl(),a={expirationTime:o=Ki(o,e),action:n,eagerReducer:null,eagerState:null,next:null},l=t.last;if(null===l)a.next=a;else{var u=l.next;null!==u&&(a.next=u),l.next=a}if(t.last=a,0===e.expirationTime&&(null===r||0===r.expirationTime)&&null!==(r=t.eagerReducer))try{var c=t.eagerState,s=r(c,n);if(a.eagerReducer=r,a.eagerState=s,Jt(s,c))return}catch(e){}Ji(e,o)}}var ca={readContext:Wa,useCallback:Ko,useContext:Ko,useEffect:Ko,useImperativeHandle:Ko,useLayoutEffect:Ko,useMemo:Ko,useReducer:Ko,useRef:Ko,useState:Ko,useDebugValue:Ko},sa={readContext:Wa,useCallback:function(e,t){return Zo().memoizedState=[e,void 0===t?null:t],e},useContext:Wa,useEffect:function(e,t){return oa(516,Io|No,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,oa(4,Po|Ao,ia.bind(null,t,e),n)},useLayoutEffect:function(e,t){return oa(4,Po|Ao,e,t)},useMemo:function(e,t){var n=Zo();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Zo();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={last:null,dispatch:null,eagerReducer:e,eagerState:t}).dispatch=ua.bind(null,Lo,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Zo().memoizedState=e},useState:function(e){var t=Zo();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={last:null,dispatch:null,eagerReducer:ta,eagerState:e}).dispatch=ua.bind(null,Lo,e),[t.memoizedState,e]},useDebugValue:la},fa={readContext:Wa,useCallback:function(e,t){var n=ea();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Xo(t,r[1])?r[0]:(n.memoizedState=[e,t],e)},useContext:Wa,useEffect:function(e,t){return aa(516,Io|No,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,aa(4,Po|Ao,ia.bind(null,t,e),n)},useLayoutEffect:function(e,t){return aa(4,Po|Ao,e,t)},useMemo:function(e,t){var n=ea();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Xo(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)},useReducer:na,useRef:function(){return ea().memoizedState},useState:function(e){return na(ta)},useDebugValue:la},pa=null,da=null,ha=!1;function ma(e,t){var n=Vr(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function ya(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function va(e){if(ha){var t=da;if(t){var n=t;if(!ya(e,t)){if(!(t=Tr(n))||!ya(e,t))return e.effectTag|=2,ha=!1,void(pa=e);ma(pa,n)}pa=e,da=Cr(t)}else e.effectTag|=2,ha=!1,pa=e}}function ga(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&18!==e.tag;)e=e.return;pa=e}function ba(e){if(e!==pa)return!1;if(!ha)return ga(e),ha=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!gr(t,e.memoizedProps))for(t=da;t;)ma(e,t),t=Tr(t);return ga(e),da=pa?Tr(e.stateNode):null,!0}function wa(){da=pa=null,ha=!1}var ka=He.ReactCurrentOwner,xa=!1;function Ta(e,t,n,r){t.child=null===e?vo(t,null,n,r):yo(t,e.child,n,r)}function Ca(e,t,n,r,o){n=n.render;var a=t.ref;return $a(t,o),r=Go(e,t,n,r,a,o),null===e||xa?(t.effectTag|=1,Ta(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Na(e,t,o))}function Sa(e,t,n,r,o,a){if(null===e){var i=n.type;return"function"!=typeof i||qr(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Yr(n.type,null,r,null,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Ea(e,t,i,r,o,a))}return i=e.child,o<a&&(o=i.memoizedProps,(n=null!==(n=n.compare)?n:en)(o,r)&&e.ref===t.ref)?Na(e,t,a):(t.effectTag|=1,(e=Qr(i,r)).ref=t.ref,e.return=t,t.child=e)}function Ea(e,t,n,r,o,a){return null!==e&&en(e.memoizedProps,r)&&e.ref===t.ref&&(xa=!1,o<a)?Na(e,t,a):Oa(e,t,n,r,a)}function _a(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Oa(e,t,n,r,o){var a=Ir(n)?Ar:jr.current;return a=Nr(t,a),$a(t,o),n=Go(e,t,n,r,a,o),null===e||xa?(t.effectTag|=1,Ta(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Na(e,t,o))}function Pa(e,t,n,r,o){if(Ir(n)){var a=!0;Fr(t)}else a=!1;if($a(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),uo(t,n,r),so(t,n,r,o),r=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var u=i.context,c=n.contextType;"object"==typeof c&&null!==c?c=Wa(c):c=Nr(t,c=Ir(n)?Ar:jr.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof i.getSnapshotBeforeUpdate;f||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==c)&&co(t,i,r,c),Qa=!1;var p=t.memoizedState;u=i.state=p;var d=t.updateQueue;null!==d&&(ni(t,d,r,i,o),u=t.memoizedState),l!==r||p!==u||Rr.current||Qa?("function"==typeof s&&(ao(t,n,s,r),u=t.memoizedState),(l=Qa||lo(t,n,l,r,p,u,c))?(f||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.effectTag|=4)):("function"==typeof i.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),i.props=r,i.state=u,i.context=c,r=l):("function"==typeof i.componentDidMount&&(t.effectTag|=4),r=!1)}else i=t.stateNode,l=t.memoizedProps,i.props=t.type===t.elementType?l:ro(t.type,l),u=i.context,"object"==typeof(c=n.contextType)&&null!==c?c=Wa(c):c=Nr(t,c=Ir(n)?Ar:jr.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==c)&&co(t,i,r,c),Qa=!1,u=t.memoizedState,p=i.state=u,null!==(d=t.updateQueue)&&(ni(t,d,r,i,o),p=t.memoizedState),l!==r||u!==p||Rr.current||Qa?("function"==typeof s&&(ao(t,n,s,r),p=t.memoizedState),(s=Qa||lo(t,n,l,r,u,p,c))?(f||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,p,c),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,p,c)),"function"==typeof i.componentDidUpdate&&(t.effectTag|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=p),i.props=r,i.state=p,i.context=c,r=s):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return ja(e,t,n,r,a,o)}function ja(e,t,n,r,o,a){_a(e,t);var i=0!=(64&t.effectTag);if(!r&&!i)return o&&Dr(t,n,!1),Na(e,t,a);r=t.stateNode,ka.current=t;var l=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&i?(t.child=yo(t,e.child,null,a),t.child=yo(t,null,l,a)):Ta(e,t,l,a),t.memoizedState=r.state,o&&Dr(t,n,!0),t.child}function Ra(e){var t=e.stateNode;t.pendingContext?Lr(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Lr(0,t.context,!1),To(e,t.containerInfo)}function Aa(e,t,n){var r=t.mode,o=t.pendingProps,a=t.memoizedState;if(0==(64&t.effectTag)){a=null;var i=!1}else a={timedOutAt:null!==a?a.timedOutAt:0},i=!0,t.effectTag&=-65;if(null===e)if(i){var l=o.fallback;e=Kr(null,r,0,null),0==(1&t.mode)&&(e.child=null!==t.memoizedState?t.child.child:t.child),r=Kr(l,r,n,null),e.sibling=r,(n=e).return=r.return=t}else n=r=vo(t,null,o.children,n);else null!==e.memoizedState?(l=(r=e.child).sibling,i?(n=o.fallback,o=Qr(r,r.pendingProps),0==(1&t.mode)&&((i=null!==t.memoizedState?t.child.child:t.child)!==r.child&&(o.child=i)),r=o.sibling=Qr(l,n,l.expirationTime),n=o,o.childExpirationTime=0,n.return=r.return=t):n=r=yo(t,r.child,o.children,n)):(l=e.child,i?(i=o.fallback,(o=Kr(null,r,0,null)).child=l,0==(1&t.mode)&&(o.child=null!==t.memoizedState?t.child.child:t.child),(r=o.sibling=Kr(i,r,n,null)).effectTag|=2,n=o,o.childExpirationTime=0,n.return=r.return=t):r=n=yo(t,l,o.children,n)),t.stateNode=e.stateNode;return t.memoizedState=a,t.child=n,r}function Na(e,t,n){if(null!==e&&(t.contextDependencies=e.contextDependencies),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child&&i("153"),null!==t.child){for(n=Qr(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Qr(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function Ia(e,t,n){var r=t.expirationTime;if(null!==e){if(e.memoizedProps!==t.pendingProps||Rr.current)xa=!0;else if(r<n){switch(xa=!1,t.tag){case 3:Ra(t),wa();break;case 5:So(t);break;case 1:Ir(t.type)&&Fr(t);break;case 4:To(t,t.stateNode.containerInfo);break;case 10:Fa(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Aa(e,t,n):null!==(t=Na(e,t,n))?t.sibling:null}return Na(e,t,n)}}else xa=!1;switch(t.expirationTime=0,t.tag){case 2:r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps;var o=Nr(t,jr.current);if($a(t,n),o=Go(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,Jo(),Ir(r)){var a=!0;Fr(t)}else a=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null;var l=r.getDerivedStateFromProps;"function"==typeof l&&ao(t,r,l,e),o.updater=io,t.stateNode=o,o._reactInternalFiber=t,so(t,r,e,n),t=ja(null,t,r,!0,a,n)}else t.tag=0,Ta(null,t,o,n),t=t.child;return t;case 16:switch(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),a=t.pendingProps,e=function(e){var t=e._result;switch(e._status){case 1:return t;case 2:case 0:throw t;default:switch(e._status=0,(t=(t=e._ctor)()).then(function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)},function(t){0===e._status&&(e._status=2,e._result=t)}),e._status){case 1:return e._result;case 2:throw e._result}throw e._result=t,t}}(o),t.type=e,o=t.tag=function(e){if("function"==typeof e)return qr(e)?1:0;if(null!=e){if((e=e.$$typeof)===tt)return 11;if(e===rt)return 14}return 2}(e),a=ro(e,a),l=void 0,o){case 0:l=Oa(null,t,e,a,n);break;case 1:l=Pa(null,t,e,a,n);break;case 11:l=Ca(null,t,e,a,n);break;case 14:l=Sa(null,t,e,ro(e.type,a),r,n);break;default:i("306",e,"")}return l;case 0:return r=t.type,o=t.pendingProps,Oa(e,t,r,o=t.elementType===r?o:ro(r,o),n);case 1:return r=t.type,o=t.pendingProps,Pa(e,t,r,o=t.elementType===r?o:ro(r,o),n);case 3:return Ra(t),null===(r=t.updateQueue)&&i("282"),o=null!==(o=t.memoizedState)?o.element:null,ni(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===o?(wa(),t=Na(e,t,n)):(o=t.stateNode,(o=(null===e||null===e.child)&&o.hydrate)&&(da=Cr(t.stateNode.containerInfo),pa=t,o=ha=!0),o?(t.effectTag|=2,t.child=vo(t,null,r,n)):(Ta(e,t,r,n),wa()),t=t.child),t;case 5:return So(t),null===e&&va(t),r=t.type,o=t.pendingProps,a=null!==e?e.memoizedProps:null,l=o.children,gr(r,o)?l=null:null!==a&&gr(r,a)&&(t.effectTag|=16),_a(e,t),1!==n&&1&t.mode&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Ta(e,t,l,n),t=t.child),t;case 6:return null===e&&va(t),null;case 13:return Aa(e,t,n);case 4:return To(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=yo(t,null,r,n):Ta(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,Ca(e,t,r,o=t.elementType===r?o:ro(r,o),n);case 7:return Ta(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ta(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,o=t.pendingProps,l=t.memoizedProps,Fa(t,a=o.value),null!==l){var u=l.value;if(0===(a=Jt(u,a)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,a):1073741823))){if(l.children===o.children&&!Rr.current){t=Na(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.contextDependencies;if(null!==c){l=u.child;for(var s=c.first;null!==s;){if(s.context===r&&0!=(s.observedBits&a)){1===u.tag&&((s=Xa(n)).tag=Va,Ja(u,s)),u.expirationTime<n&&(u.expirationTime=n),null!==(s=u.alternate)&&s.expirationTime<n&&(s.expirationTime=n),s=n;for(var f=u.return;null!==f;){var p=f.alternate;if(f.childExpirationTime<s)f.childExpirationTime=s,null!==p&&p.childExpirationTime<s&&(p.childExpirationTime=s);else{if(!(null!==p&&p.childExpirationTime<s))break;p.childExpirationTime=s}f=f.return}c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}}Ta(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(a=t.pendingProps).children,$a(t,n),r=r(o=Wa(o,a.unstable_observedBits)),t.effectTag|=1,Ta(e,t,r,n),t.child;case 14:return a=ro(o=t.type,t.pendingProps),Sa(e,t,o,a=ro(o.type,a),r,n);case 15:return Ea(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:ro(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,Ir(r)?(e=!0,Fr(t)):e=!1,$a(t,n),uo(t,r,o),so(t,r,o,n),ja(null,t,r,!0,e,n)}i("156")}var Ma={current:null},za=null,La=null,Ua=null;function Fa(e,t){var n=e.type._context;Or(Ma,n._currentValue),n._currentValue=t}function Da(e){var t=Ma.current;_r(Ma),e.type._context._currentValue=t}function $a(e,t){za=e,Ua=La=null;var n=e.contextDependencies;null!==n&&n.expirationTime>=t&&(xa=!0),e.contextDependencies=null}function Wa(e,t){return Ua!==e&&!1!==t&&0!==t&&("number"==typeof t&&1073741823!==t||(Ua=e,t=1073741823),t={context:e,observedBits:t,next:null},null===La?(null===za&&i("308"),La=t,za.contextDependencies={first:t,expirationTime:0}):La=La.next=t),e._currentValue}var Ba=0,Ha=1,Va=2,qa=3,Qa=!1;function Ya(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Ka(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Xa(e){return{expirationTime:e,tag:Ba,payload:null,callback:null,next:null,nextEffect:null}}function Ga(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function Ja(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=Ya(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=Ya(e.memoizedState),o=n.updateQueue=Ya(n.memoizedState)):r=e.updateQueue=Ka(o):null===o&&(o=n.updateQueue=Ka(r));null===o||r===o?Ga(r,t):null===r.lastUpdate||null===o.lastUpdate?(Ga(r,t),Ga(o,t)):(Ga(r,t),o.lastUpdate=t)}function Za(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=Ya(e.memoizedState):ei(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function ei(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=Ka(t)),t}function ti(e,t,n,r,a,i){switch(n.tag){case Ha:return"function"==typeof(e=n.payload)?e.call(i,r,a):e;case qa:e.effectTag=-2049&e.effectTag|64;case Ba:if(null==(a="function"==typeof(e=n.payload)?e.call(i,r,a):e))break;return o({},r,a);case Va:Qa=!0}return r}function ni(e,t,n,r,o){Qa=!1;for(var a=(t=ei(e,t)).baseState,i=null,l=0,u=t.firstUpdate,c=a;null!==u;){var s=u.expirationTime;s<o?(null===i&&(i=u,a=c),l<s&&(l=s)):(c=ti(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=u:(t.lastEffect.nextEffect=u,t.lastEffect=u))),u=u.next}for(s=null,u=t.firstCapturedUpdate;null!==u;){var f=u.expirationTime;f<o?(null===s&&(s=u,null===i&&(a=c)),l<f&&(l=f)):(c=ti(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===i&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===i&&null===s&&(a=c),t.baseState=a,t.firstUpdate=i,t.firstCapturedUpdate=s,e.expirationTime=l,e.memoizedState=c}function ri(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),oi(t.firstEffect,n),t.firstEffect=t.lastEffect=null,oi(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function oi(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;"function"!=typeof n&&i("191",n),n.call(r)}e=e.nextEffect}}function ai(e,t){return{value:e,source:t,stack:ut(t)}}function ii(e){e.effectTag|=4}var li=void 0,ui=void 0,ci=void 0,si=void 0;li=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},ui=function(){},ci=function(e,t,n,r,a){var i=e.memoizedProps;if(i!==r){var l=t.stateNode;switch(xo(bo.current),e=null,n){case"input":i=bt(l,i),r=bt(l,r),e=[];break;case"option":i=Qn(l,i),r=Qn(l,r),e=[];break;case"select":i=o({},i,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":i=Kn(l,i),r=Kn(l,r),e=[];break;default:"function"!=typeof i.onClick&&"function"==typeof r.onClick&&(l.onclick=hr)}fr(n,r),l=n=void 0;var u=null;for(n in i)if(!r.hasOwnProperty(n)&&i.hasOwnProperty(n)&&null!=i[n])if("style"===n){var c=i[n];for(l in c)c.hasOwnProperty(l)&&(u||(u={}),u[l]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(b.hasOwnProperty(n)?e||(e=[]):(e=e||[]).push(n,null));for(n in r){var s=r[n];if(c=null!=i?i[n]:void 0,r.hasOwnProperty(n)&&s!==c&&(null!=s||null!=c))if("style"===n)if(c){for(l in c)!c.hasOwnProperty(l)||s&&s.hasOwnProperty(l)||(u||(u={}),u[l]="");for(l in s)s.hasOwnProperty(l)&&c[l]!==s[l]&&(u||(u={}),u[l]=s[l])}else u||(e||(e=[]),e.push(n,u)),u=s;else"dangerouslySetInnerHTML"===n?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(n,""+s)):"children"===n?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(n,""+s):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(b.hasOwnProperty(n)?(null!=s&&dr(a,n),e||c===s||(e=[])):(e=e||[]).push(n,s))}u&&(e=e||[]).push("style",u),a=e,(t.updateQueue=a)&&ii(t)}},si=function(e,t,n,r){n!==r&&ii(t)};var fi="function"==typeof WeakSet?WeakSet:Set;function pi(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ut(n)),null!==n&&lt(n.type),t=t.value,null!==e&&1===e.tag&&lt(e.type);try{console.error(t)}catch(e){setTimeout(function(){throw e})}}function di(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Yi(e,t)}else t.current=null}function hi(e,t,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if((r.tag&e)!==_o){var o=r.destroy;r.destroy=void 0,void 0!==o&&o()}(r.tag&t)!==_o&&(o=r.create,r.destroy=o()),r=r.next}while(r!==n)}}function mi(e){switch("function"==typeof Wr&&Wr(e),e.tag){case 0:case 11:case 14:case 15:var t=e.updateQueue;if(null!==t&&null!==(t=t.lastEffect)){var n=t=t.next;do{var r=n.destroy;if(void 0!==r){var o=e;try{r()}catch(e){Yi(o,e)}}n=n.next}while(n!==t)}break;case 1:if(di(e),"function"==typeof(t=e.stateNode).componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Yi(e,t)}break;case 5:di(e);break;case 4:gi(e)}}function yi(e){return 5===e.tag||3===e.tag||4===e.tag}function vi(e){e:{for(var t=e.return;null!==t;){if(yi(t)){var n=t;break e}t=t.return}i("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:i("161")}16&n.effectTag&&(ar(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||yi(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var a=t,l=o.stateNode,u=n;8===a.nodeType?a.parentNode.insertBefore(l,u):a.insertBefore(l,u)}else t.insertBefore(o.stateNode,n);else r?(l=t,u=o.stateNode,8===l.nodeType?(a=l.parentNode).insertBefore(u,l):(a=l).appendChild(u),null!=(l=l._reactRootContainer)||null!==a.onclick||(a.onclick=hr)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function gi(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&i("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var a=t,l=a;;)if(mi(l),null!==l.child&&4!==l.tag)l.child.return=l,l=l.child;else{if(l===a)break;for(;null===l.sibling;){if(null===l.return||l.return===a)break e;l=l.return}l.sibling.return=l.return,l=l.sibling}o?(a=r,l=t.stateNode,8===a.nodeType?a.parentNode.removeChild(l):a.removeChild(l)):r.removeChild(t.stateNode)}else if(4===t.tag){if(null!==t.child){r=t.stateNode.containerInfo,o=!0,t.child.return=t,t=t.child;continue}}else if(mi(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function bi(e,t){switch(t.tag){case 0:case 11:case 14:case 15:hi(Po,jo,t);break;case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,a=t.updateQueue;t.updateQueue=null,null!==a&&function(e,t,n,r,o){e[I]=o,"input"===n&&"radio"===o.type&&null!=o.name&&kt(e,o),pr(n,r),r=pr(n,o);for(var a=0;a<t.length;a+=2){var i=t[a],l=t[a+1];"style"===i?cr(e,l):"dangerouslySetInnerHTML"===i?or(e,l):"children"===i?ar(e,l):vt(e,i,l,r)}switch(n){case"input":xt(e,o);break;case"textarea":Gn(e,o);break;case"select":t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?Yn(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?Yn(e,!!o.multiple,o.defaultValue,!0):Yn(e,!!o.multiple,o.multiple?[]:"",!1))}}(n,a,o,e,r)}break;case 6:null===t.stateNode&&i("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 12:break;case 13:if(n=t.memoizedState,r=void 0,e=t,null===n?r=!1:(r=!0,e=t.child,0===n.timedOutAt&&(n.timedOutAt=xl())),null!==e&&function(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)r.style.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=ur("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else{if(13===n.tag&&null!==n.memoizedState){(r=n.child.sibling).return=n,n=r;continue}if(null!==n.child){n.child.return=n,n=n.child;continue}}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}(e,r),null!==(n=t.updateQueue)){t.updateQueue=null;var l=t.stateNode;null===l&&(l=t.stateNode=new fi),n.forEach(function(e){var n=function(e,t){var n=e.stateNode;null!==n&&n.delete(t),t=Ki(t=xl(),e),null!==(e=Gi(e,t))&&(Zr(e,t),0!==(t=e.expirationTime)&&Tl(e,t))}.bind(null,t,e);l.has(e)||(l.add(e),e.then(n,n))})}break;case 17:break;default:i("163")}}var wi="function"==typeof WeakMap?WeakMap:Map;function ki(e,t,n){(n=Xa(n)).tag=qa,n.payload={element:null};var r=t.value;return n.callback=function(){Al(r),pi(e,t)},n}function xi(e,t,n){(n=Xa(n)).tag=qa;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return r(o)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Ui?Ui=new Set([this]):Ui.add(this));var n=t.value,o=t.stack;pi(e,t),this.componentDidCatch(n,{componentStack:null!==o?o:""})}),n}function Ti(e){switch(e.tag){case 1:Ir(e.type)&&Mr();var t=e.effectTag;return 2048&t?(e.effectTag=-2049&t|64,e):null;case 3:return Co(),zr(),0!=(64&(t=e.effectTag))&&i("285"),e.effectTag=-2049&t|64,e;case 5:return Eo(e),null;case 13:return 2048&(t=e.effectTag)?(e.effectTag=-2049&t|64,e):null;case 18:return null;case 4:return Co(),null;case 10:return Da(e),null;default:return null}}var Ci=He.ReactCurrentDispatcher,Si=He.ReactCurrentOwner,Ei=1073741822,_i=!1,Oi=null,Pi=null,ji=0,Ri=-1,Ai=!1,Ni=null,Ii=!1,Mi=null,zi=null,Li=null,Ui=null;function Fi(){if(null!==Oi)for(var e=Oi.return;null!==e;){var t=e;switch(t.tag){case 1:var n=t.type.childContextTypes;null!=n&&Mr();break;case 3:Co(),zr();break;case 5:Eo(t);break;case 4:Co();break;case 10:Da(t)}e=e.return}Pi=null,ji=0,Ri=-1,Ai=!1,Oi=null}function Di(){for(;null!==Ni;){var e=Ni.effectTag;if(16&e&&ar(Ni.stateNode,""),128&e){var t=Ni.alternate;null!==t&&(null!==(t=t.ref)&&("function"==typeof t?t(null):t.current=null))}switch(14&e){case 2:vi(Ni),Ni.effectTag&=-3;break;case 6:vi(Ni),Ni.effectTag&=-3,bi(Ni.alternate,Ni);break;case 4:bi(Ni.alternate,Ni);break;case 8:gi(e=Ni),e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,null!==(e=e.alternate)&&(e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null)}Ni=Ni.nextEffect}}function $i(){for(;null!==Ni;){if(256&Ni.effectTag)e:{var e=Ni.alternate,t=Ni;switch(t.tag){case 0:case 11:case 15:hi(Oo,_o,t);break e;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:ro(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}break e;case 3:case 5:case 6:case 4:case 17:break e;default:i("163")}}Ni=Ni.nextEffect}}function Wi(e,t){for(;null!==Ni;){var n=Ni.effectTag;if(36&n){var r=Ni.alternate,o=Ni,a=t;switch(o.tag){case 0:case 11:case 15:hi(Ro,Ao,o);break;case 1:var l=o.stateNode;if(4&o.effectTag)if(null===r)l.componentDidMount();else{var u=o.elementType===o.type?r.memoizedProps:ro(o.type,r.memoizedProps);l.componentDidUpdate(u,r.memoizedState,l.__reactInternalSnapshotBeforeUpdate)}null!==(r=o.updateQueue)&&ri(0,r,l);break;case 3:if(null!==(r=o.updateQueue)){if(l=null,null!==o.child)switch(o.child.tag){case 5:l=o.child.stateNode;break;case 1:l=o.child.stateNode}ri(0,r,l)}break;case 5:a=o.stateNode,null===r&&4&o.effectTag&&vr(o.type,o.memoizedProps)&&a.focus();break;case 6:case 4:case 12:case 13:case 17:break;default:i("163")}}128&n&&(null!==(o=Ni.ref)&&(a=Ni.stateNode,"function"==typeof o?o(a):o.current=a)),512&n&&(Mi=e),Ni=Ni.nextEffect}}function Bi(){null!==zi&&xr(zi),null!==Li&&Li()}function Hi(e,t){Ii=_i=!0,e.current===t&&i("177");var n=e.pendingCommitExpirationTime;0===n&&i("261"),e.pendingCommitExpirationTime=0;var r=t.expirationTime,o=t.childExpirationTime;for(function(e,t){if(e.didError=!1,0===t)e.earliestPendingTime=0,e.latestPendingTime=0,e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0;else{t<e.latestPingedTime&&(e.latestPingedTime=0);var n=e.latestPendingTime;0!==n&&(n>t?e.earliestPendingTime=e.latestPendingTime=0:e.earliestPendingTime>t&&(e.earliestPendingTime=e.latestPendingTime)),0===(n=e.earliestSuspendedTime)?Zr(e,t):t<e.latestSuspendedTime?(e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0,Zr(e,t)):t>n&&Zr(e,t)}no(0,e)}(e,o>r?o:r),Si.current=null,r=void 0,1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,mr=Cn,yr=function(){var e=zn();if(Ln(e)){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var n=(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(n&&0!==n.rangeCount){t=n.anchorNode;var r=n.anchorOffset,o=n.focusNode;n=n.focusOffset;try{t.nodeType,o.nodeType}catch(e){t=null;break e}var a=0,i=-1,l=-1,u=0,c=0,s=e,f=null;t:for(;;){for(var p;s!==t||0!==r&&3!==s.nodeType||(i=a+r),s!==o||0!==n&&3!==s.nodeType||(l=a+n),3===s.nodeType&&(a+=s.nodeValue.length),null!==(p=s.firstChild);)f=s,s=p;for(;;){if(s===e)break t;if(f===t&&++u===r&&(i=a),f===o&&++c===n&&(l=a),null!==(p=s.nextSibling))break;f=(s=f).parentNode}s=p}t=-1===i||-1===l?null:{start:i,end:l}}else t=null}t=t||{start:0,end:0}}else t=null;return{focusedElem:e,selectionRange:t}}(),Cn=!1,Ni=r;null!==Ni;){o=!1;var l=void 0;try{$i()}catch(e){o=!0,l=e}o&&(null===Ni&&i("178"),Yi(Ni,l),null!==Ni&&(Ni=Ni.nextEffect))}for(Ni=r;null!==Ni;){o=!1,l=void 0;try{Di()}catch(e){o=!0,l=e}o&&(null===Ni&&i("178"),Yi(Ni,l),null!==Ni&&(Ni=Ni.nextEffect))}for(Un(yr),yr=null,Cn=!!mr,mr=null,e.current=t,Ni=r;null!==Ni;){o=!1,l=void 0;try{Wi(e,n)}catch(e){o=!0,l=e}o&&(null===Ni&&i("178"),Yi(Ni,l),null!==Ni&&(Ni=Ni.nextEffect))}if(null!==r&&null!==Mi){var u=function(e,t){Li=zi=Mi=null;var n=ol;ol=!0;do{if(512&t.effectTag){var r=!1,o=void 0;try{var a=t;hi(Io,_o,a),hi(_o,No,a)}catch(e){r=!0,o=e}r&&Yi(t,o)}t=t.nextEffect}while(null!==t);ol=n,0!==(n=e.expirationTime)&&Tl(e,n),sl||ol||Ol(1073741823,!1)}.bind(null,e,r);zi=a.unstable_runWithPriority(a.unstable_NormalPriority,function(){return kr(u)}),Li=u}_i=Ii=!1,"function"==typeof $r&&$r(t.stateNode),n=t.expirationTime,0===(t=(t=t.childExpirationTime)>n?t:n)&&(Ui=null),function(e,t){e.expirationTime=t,e.finishedWork=null}(e,t)}function Vi(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(1024&e.effectTag)){Oi=e;e:{var a=t,l=ji,u=(t=e).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:Ir(t.type)&&Mr();break;case 3:Co(),zr(),(u=t.stateNode).pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),null!==a&&null!==a.child||(ba(t),t.effectTag&=-3),ui(t);break;case 5:Eo(t);var c=xo(ko.current);if(l=t.type,null!==a&&null!=t.stateNode)ci(a,t,l,u,c),a.ref!==t.ref&&(t.effectTag|=128);else if(u){var s=xo(bo.current);if(ba(t)){a=(u=t).stateNode;var f=u.type,p=u.memoizedProps,d=c;switch(a[N]=u,a[I]=p,l=void 0,c=f){case"iframe":case"object":Sn("load",a);break;case"video":case"audio":for(f=0;f<te.length;f++)Sn(te[f],a);break;case"source":Sn("error",a);break;case"img":case"image":case"link":Sn("error",a),Sn("load",a);break;case"form":Sn("reset",a),Sn("submit",a);break;case"details":Sn("toggle",a);break;case"input":wt(a,p),Sn("invalid",a),dr(d,"onChange");break;case"select":a._wrapperState={wasMultiple:!!p.multiple},Sn("invalid",a),dr(d,"onChange");break;case"textarea":Xn(a,p),Sn("invalid",a),dr(d,"onChange")}for(l in fr(c,p),f=null,p)p.hasOwnProperty(l)&&(s=p[l],"children"===l?"string"==typeof s?a.textContent!==s&&(f=["children",s]):"number"==typeof s&&a.textContent!==""+s&&(f=["children",""+s]):b.hasOwnProperty(l)&&null!=s&&dr(d,l));switch(c){case"input":We(a),Tt(a,p,!0);break;case"textarea":We(a),Jn(a);break;case"select":case"option":break;default:"function"==typeof p.onClick&&(a.onclick=hr)}l=f,u.updateQueue=l,(u=null!==l)&&ii(t)}else{p=t,a=l,d=u,f=9===c.nodeType?c:c.ownerDocument,s===Zn.html&&(s=er(a)),s===Zn.html?"script"===a?((a=f.createElement("div")).innerHTML="<script><\/script>",f=a.removeChild(a.firstChild)):"string"==typeof d.is?f=f.createElement(a,{is:d.is}):(f=f.createElement(a),"select"===a&&d.multiple&&(f.multiple=!0)):f=f.createElementNS(s,a),(a=f)[N]=p,a[I]=u,li(a,t,!1,!1),d=a;var h=c,m=pr(f=l,p=u);switch(f){case"iframe":case"object":Sn("load",d),c=p;break;case"video":case"audio":for(c=0;c<te.length;c++)Sn(te[c],d);c=p;break;case"source":Sn("error",d),c=p;break;case"img":case"image":case"link":Sn("error",d),Sn("load",d),c=p;break;case"form":Sn("reset",d),Sn("submit",d),c=p;break;case"details":Sn("toggle",d),c=p;break;case"input":wt(d,p),c=bt(d,p),Sn("invalid",d),dr(h,"onChange");break;case"option":c=Qn(d,p);break;case"select":d._wrapperState={wasMultiple:!!p.multiple},c=o({},p,{value:void 0}),Sn("invalid",d),dr(h,"onChange");break;case"textarea":Xn(d,p),c=Kn(d,p),Sn("invalid",d),dr(h,"onChange");break;default:c=p}fr(f,c),s=void 0;var y=f,v=d,g=c;for(s in g)if(g.hasOwnProperty(s)){var w=g[s];"style"===s?cr(v,w):"dangerouslySetInnerHTML"===s?null!=(w=w?w.__html:void 0)&&or(v,w):"children"===s?"string"==typeof w?("textarea"!==y||""!==w)&&ar(v,w):"number"==typeof w&&ar(v,""+w):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(b.hasOwnProperty(s)?null!=w&&dr(h,s):null!=w&&vt(v,s,w,m))}switch(f){case"input":We(d),Tt(d,p,!1);break;case"textarea":We(d),Jn(d);break;case"option":null!=p.value&&d.setAttribute("value",""+gt(p.value));break;case"select":(c=d).multiple=!!p.multiple,null!=(d=p.value)?Yn(c,!!p.multiple,d,!1):null!=p.defaultValue&&Yn(c,!!p.multiple,p.defaultValue,!0);break;default:"function"==typeof c.onClick&&(d.onclick=hr)}(u=vr(l,u))&&ii(t),t.stateNode=a}null!==t.ref&&(t.effectTag|=128)}else null===t.stateNode&&i("166");break;case 6:a&&null!=t.stateNode?si(a,t,a.memoizedProps,u):("string"!=typeof u&&(null===t.stateNode&&i("166")),a=xo(ko.current),xo(bo.current),ba(t)?(l=(u=t).stateNode,a=u.memoizedProps,l[N]=u,(u=l.nodeValue!==a)&&ii(t)):(l=t,(u=(9===a.nodeType?a:a.ownerDocument).createTextNode(u))[N]=t,l.stateNode=u));break;case 11:break;case 13:if(u=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=l,Oi=t;break e}u=null!==u,l=null!==a&&null!==a.memoizedState,null!==a&&!u&&l&&(null!==(a=a.child.sibling)&&(null!==(c=t.firstEffect)?(t.firstEffect=a,a.nextEffect=c):(t.firstEffect=t.lastEffect=a,a.nextEffect=null),a.effectTag=8)),(u||l)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:Co(),ui(t);break;case 10:Da(t);break;case 9:case 14:break;case 17:Ir(t.type)&&Mr();break;case 18:break;default:i("156")}Oi=null}if(t=e,1===ji||1!==t.childExpirationTime){for(u=0,l=t.child;null!==l;)(a=l.expirationTime)>u&&(u=a),(c=l.childExpirationTime)>u&&(u=c),l=l.sibling;t.childExpirationTime=u}if(null!==Oi)return Oi;null!==n&&0==(1024&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e))}else{if(null!==(e=Ti(e)))return e.effectTag&=1023,e;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=1024)}if(null!==r)return r;if(null===n)break;e=n}return null}function qi(e){var t=Ia(e.alternate,e,ji);return e.memoizedProps=e.pendingProps,null===t&&(t=Vi(e)),Si.current=null,t}function Qi(e,t){_i&&i("243"),Bi(),_i=!0;var n=Ci.current;Ci.current=ca;var r=e.nextExpirationTimeToWorkOn;r===ji&&e===Pi&&null!==Oi||(Fi(),ji=r,Oi=Qr((Pi=e).current,null),e.pendingCommitExpirationTime=0);for(var o=!1;;){try{if(t)for(;null!==Oi&&!El();)Oi=qi(Oi);else for(;null!==Oi;)Oi=qi(Oi)}catch(t){if(Ua=La=za=null,Jo(),null===Oi)o=!0,Al(t);else{null===Oi&&i("271");var a=Oi,l=a.return;if(null!==l){e:{var u=e,c=l,s=a,f=t;if(l=ji,s.effectTag|=1024,s.firstEffect=s.lastEffect=null,null!==f&&"object"==typeof f&&"function"==typeof f.then){var p=f;f=c;var d=-1,h=-1;do{if(13===f.tag){var m=f.alternate;if(null!==m&&null!==(m=m.memoizedState)){h=10*(1073741822-m.timedOutAt);break}"number"==typeof(m=f.pendingProps.maxDuration)&&(0>=m?d=0:(-1===d||m<d)&&(d=m))}f=f.return}while(null!==f);f=c;do{if((m=13===f.tag)&&(m=void 0!==f.memoizedProps.fallback&&null===f.memoizedState),m){if(null===(c=f.updateQueue)?((c=new Set).add(p),f.updateQueue=c):c.add(p),0==(1&f.mode)){f.effectTag|=64,s.effectTag&=-1957,1===s.tag&&(null===s.alternate?s.tag=17:((l=Xa(1073741823)).tag=Va,Ja(s,l))),s.expirationTime=1073741823;break e}c=l;var y=(s=u).pingCache;null===y?(y=s.pingCache=new wi,m=new Set,y.set(p,m)):void 0===(m=y.get(p))&&(m=new Set,y.set(p,m)),m.has(c)||(m.add(c),s=Xi.bind(null,s,p,c),p.then(s,s)),-1===d?u=1073741823:(-1===h&&(h=10*(1073741822-to(u,l))-5e3),u=h+d),0<=u&&Ri<u&&(Ri=u),f.effectTag|=2048,f.expirationTime=l;break e}f=f.return}while(null!==f);f=Error((lt(s.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ut(s))}Ai=!0,f=ai(f,s),u=c;do{switch(u.tag){case 3:u.effectTag|=2048,u.expirationTime=l,Za(u,l=ki(u,f,l));break e;case 1:if(d=f,h=u.type,s=u.stateNode,0==(64&u.effectTag)&&("function"==typeof h.getDerivedStateFromError||null!==s&&"function"==typeof s.componentDidCatch&&(null===Ui||!Ui.has(s)))){u.effectTag|=2048,u.expirationTime=l,Za(u,l=xi(u,d,l));break e}}u=u.return}while(null!==u)}Oi=Vi(a);continue}o=!0,Al(t)}}break}if(_i=!1,Ci.current=n,Ua=La=za=null,Jo(),o)Pi=null,e.finishedWork=null;else if(null!==Oi)e.finishedWork=null;else{if(null===(n=e.current.alternate)&&i("281"),Pi=null,Ai){if(o=e.latestPendingTime,a=e.latestSuspendedTime,l=e.latestPingedTime,0!==o&&o<r||0!==a&&a<r||0!==l&&l<r)return eo(e,r),void kl(e,n,r,e.expirationTime,-1);if(!e.didError&&t)return e.didError=!0,r=e.nextExpirationTimeToWorkOn=r,t=e.expirationTime=1073741823,void kl(e,n,r,t,-1)}t&&-1!==Ri?(eo(e,r),(t=10*(1073741822-to(e,r)))<Ri&&(Ri=t),t=10*(1073741822-xl()),t=Ri-t,kl(e,n,r,e.expirationTime,0>t?0:t)):(e.pendingCommitExpirationTime=r,e.finishedWork=n)}}function Yi(e,t){for(var n=e.return;null!==n;){switch(n.tag){case 1:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Ui||!Ui.has(r)))return Ja(n,e=xi(n,e=ai(t,e),1073741823)),void Ji(n,1073741823);break;case 3:return Ja(n,e=ki(n,e=ai(t,e),1073741823)),void Ji(n,1073741823)}n=n.return}3===e.tag&&(Ja(e,n=ki(e,n=ai(t,e),1073741823)),Ji(e,1073741823))}function Ki(e,t){var n=a.unstable_getCurrentPriorityLevel(),r=void 0;if(0==(1&t.mode))r=1073741823;else if(_i&&!Ii)r=ji;else{switch(n){case a.unstable_ImmediatePriority:r=1073741823;break;case a.unstable_UserBlockingPriority:r=1073741822-10*(1+((1073741822-e+15)/10|0));break;case a.unstable_NormalPriority:r=1073741822-25*(1+((1073741822-e+500)/25|0));break;case a.unstable_LowPriority:case a.unstable_IdlePriority:r=1;break;default:i("313")}null!==Pi&&r===ji&&--r}return n===a.unstable_UserBlockingPriority&&(0===ll||r<ll)&&(ll=r),r}function Xi(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),null!==Pi&&ji===n?Pi=null:(t=e.earliestSuspendedTime,r=e.latestSuspendedTime,0!==t&&n<=t&&n>=r&&(e.didError=!1,(0===(t=e.latestPingedTime)||t>n)&&(e.latestPingedTime=n),no(n,e),0!==(n=e.expirationTime)&&Tl(e,n)))}function Gi(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return o}function Ji(e,t){null!==(e=Gi(e,t))&&(!_i&&0!==ji&&t>ji&&Fi(),Zr(e,t),_i&&!Ii&&Pi===e||Tl(e,e.expirationTime),vl>yl&&(vl=0,i("185")))}function Zi(e,t,n,r,o){return a.unstable_runWithPriority(a.unstable_ImmediatePriority,function(){return e(t,n,r,o)})}var el=null,tl=null,nl=0,rl=void 0,ol=!1,al=null,il=0,ll=0,ul=!1,cl=null,sl=!1,fl=!1,pl=null,dl=a.unstable_now(),hl=1073741822-(dl/10|0),ml=hl,yl=50,vl=0,gl=null;function bl(){hl=1073741822-((a.unstable_now()-dl)/10|0)}function wl(e,t){if(0!==nl){if(t<nl)return;null!==rl&&a.unstable_cancelCallback(rl)}nl=t,e=a.unstable_now()-dl,rl=a.unstable_scheduleCallback(_l,{timeout:10*(1073741822-t)-e})}function kl(e,t,n,r,o){e.expirationTime=r,0!==o||El()?0<o&&(e.timeoutHandle=br(function(e,t,n){e.pendingCommitExpirationTime=n,e.finishedWork=t,bl(),ml=hl,Pl(e,n)}.bind(null,e,t,n),o)):(e.pendingCommitExpirationTime=n,e.finishedWork=t)}function xl(){return ol?ml:(Cl(),0!==il&&1!==il||(bl(),ml=hl),ml)}function Tl(e,t){null===e.nextScheduledRoot?(e.expirationTime=t,null===tl?(el=tl=e,e.nextScheduledRoot=e):(tl=tl.nextScheduledRoot=e).nextScheduledRoot=el):t>e.expirationTime&&(e.expirationTime=t),ol||(sl?fl&&(al=e,il=1073741823,jl(e,1073741823,!1)):1073741823===t?Ol(1073741823,!1):wl(e,t))}function Cl(){var e=0,t=null;if(null!==tl)for(var n=tl,r=el;null!==r;){var o=r.expirationTime;if(0===o){if((null===n||null===tl)&&i("244"),r===r.nextScheduledRoot){el=tl=r.nextScheduledRoot=null;break}if(r===el)el=o=r.nextScheduledRoot,tl.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===tl){(tl=n).nextScheduledRoot=el,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if(o>e&&(e=o,t=r),r===tl)break;if(1073741823===e)break;n=r,r=r.nextScheduledRoot}}al=t,il=e}var Sl=!1;function El(){return!!Sl||!!a.unstable_shouldYield()&&(Sl=!0)}function _l(){try{if(!El()&&null!==el){bl();var e=el;do{var t=e.expirationTime;0!==t&&hl<=t&&(e.nextExpirationTimeToWorkOn=hl),e=e.nextScheduledRoot}while(e!==el)}Ol(0,!0)}finally{Sl=!1}}function Ol(e,t){if(Cl(),t)for(bl(),ml=hl;null!==al&&0!==il&&e<=il&&!(Sl&&hl>il);)jl(al,il,hl>il),Cl(),bl(),ml=hl;else for(;null!==al&&0!==il&&e<=il;)jl(al,il,!1),Cl();if(t&&(nl=0,rl=null),0!==il&&wl(al,il),vl=0,gl=null,null!==pl)for(e=pl,pl=null,t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){ul||(ul=!0,cl=e)}}if(ul)throw e=cl,cl=null,ul=!1,e}function Pl(e,t){ol&&i("253"),al=e,il=t,jl(e,t,!1),Ol(1073741823,!1)}function jl(e,t,n){if(ol&&i("245"),ol=!0,n){var r=e.finishedWork;null!==r?Rl(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,wr(r)),Qi(e,n),null!==(r=e.finishedWork)&&(El()?e.finishedWork=r:Rl(e,r,t)))}else null!==(r=e.finishedWork)?Rl(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,wr(r)),Qi(e,n),null!==(r=e.finishedWork)&&Rl(e,r,t));ol=!1}function Rl(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime>=n&&(null===pl?pl=[r]:pl.push(r),r._defer))return e.finishedWork=t,void(e.expirationTime=0);e.finishedWork=null,e===gl?vl++:(gl=e,vl=0),a.unstable_runWithPriority(a.unstable_ImmediatePriority,function(){Hi(e,t)})}function Al(e){null===al&&i("246"),al.expirationTime=0,ul||(ul=!0,cl=e)}function Nl(e,t){var n=sl;sl=!0;try{return e(t)}finally{(sl=n)||ol||Ol(1073741823,!1)}}function Il(e,t){if(sl&&!fl){fl=!0;try{return e(t)}finally{fl=!1}}return e(t)}function Ml(e,t,n){sl||ol||0===ll||(Ol(ll,!1),ll=0);var r=sl;sl=!0;try{return a.unstable_runWithPriority(a.unstable_UserBlockingPriority,function(){return e(t,n)})}finally{(sl=r)||ol||Ol(1073741823,!1)}}function zl(e,t,n,r,o){var a=t.current;e:if(n){t:{2===tn(n=n._reactInternalFiber)&&1===n.tag||i("170");var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(Ir(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);i("171"),l=void 0}if(1===n.tag){var u=n.type;if(Ir(u)){n=Ur(n,u,l);break e}}n=l}else n=Pr;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=Xa(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),Bi(),Ja(a,o),Ji(a,r),r}function Ll(e,t,n,r){var o=t.current;return zl(e,t,n,o=Ki(xl(),o),r)}function Ul(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Fl(e){var t=1073741822-25*(1+((1073741822-xl()+500)/25|0));t>=Ei&&(t=Ei-1),this._expirationTime=Ei=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function Dl(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function $l(e,t,n){e={current:t=Vr(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=t.stateNode=e}function Wl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Bl(e,t,n,r,o){var a=n._reactRootContainer;if(a){if("function"==typeof o){var i=o;o=function(){var e=Ul(a._internalRoot);i.call(e)}}null!=e?a.legacy_renderSubtreeIntoContainer(e,t,o):a.render(t,o)}else{if(a=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new $l(e,!1,t)}(n,r),"function"==typeof o){var l=o;o=function(){var e=Ul(a._internalRoot);l.call(e)}}Il(function(){null!=e?a.legacy_renderSubtreeIntoContainer(e,t,o):a.render(t,o)})}return Ul(a._internalRoot)}function Hl(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return Wl(t)||i("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ye,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}Ee=function(e,t,n){switch(t){case"input":if(xt(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=U(r);o||i("90"),Be(r),xt(r,o)}}}break;case"textarea":Gn(e,n);break;case"select":null!=(t=n.value)&&Yn(e,!!n.multiple,t,!1)}},Fl.prototype.render=function(e){this._defer||i("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new Dl;return zl(e,t,null,n,r._onCommit),r},Fl.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Fl.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||i("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&i("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,Pl(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},Fl.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},Dl.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Dl.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&i("191",n),n()}}},$l.prototype.render=function(e,t){var n=this._internalRoot,r=new Dl;return null!==(t=void 0===t?null:t)&&r.then(t),Ll(e,n,null,r._onCommit),r},$l.prototype.unmount=function(e){var t=this._internalRoot,n=new Dl;return null!==(e=void 0===e?null:e)&&n.then(e),Ll(null,t,null,n._onCommit),n},$l.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new Dl;return null!==(n=void 0===n?null:n)&&o.then(n),Ll(t,r,e,o._onCommit),o},$l.prototype.createBatch=function(){var e=new Fl(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime>=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Ae=Nl,Ne=Ml,Ie=function(){ol||0===ll||(Ol(ll,!1),ll=0)};var Vl={createPortal:Hl,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?i("188"):i("268",Object.keys(e))),e=null===(e=rn(t))?null:e.stateNode},hydrate:function(e,t,n){return Wl(t)||i("200"),Bl(null,e,t,!0,n)},render:function(e,t,n){return Wl(t)||i("200"),Bl(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return Wl(n)||i("200"),(null==e||void 0===e._reactInternalFiber)&&i("38"),Bl(e,t,n,!1,r)},unmountComponentAtNode:function(e){return Wl(e)||i("40"),!!e._reactRootContainer&&(Il(function(){Bl(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return Hl.apply(void 0,arguments)},unstable_batchedUpdates:Nl,unstable_interactiveUpdates:Ml,flushSync:function(e,t){ol&&i("187");var n=sl;sl=!0;try{return Zi(e,t)}finally{sl=n,Ol(1073741823,!1)}},unstable_createRoot:function(e,t){return Wl(e)||i("299","unstable_createRoot"),new $l(e,!0,null!=t&&!0===t.hydrate)},unstable_flushControlled:function(e){var t=sl;sl=!0;try{Zi(e)}finally{(sl=t)||ol||Ol(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[z,L,U,P.injectEventPluginsByName,g,H,function(e){E(e,B)},je,Re,On,R]}};!function(e){var t=e.findFiberByHostInstance;(function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);$r=Br(function(e){return t.onCommitFiberRoot(n,e)}),Wr=Br(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}})(o({},e,{overrideProps:null,currentDispatcherRef:He.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=rn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}({findFiberByHostInstance:M,bundleType:0,version:"16.8.4",rendererPackageName:"react-dom"});var ql={default:Vl},Ql=ql&&Vl||ql;e.exports=Ql.default||Ql},function(e,t,n){"use strict";e.exports=n(20)},function(e,t,n){"use strict";(function(e){
/** @license React v0.13.4
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(t,"__esModule",{value:!0});var n=null,r=!1,o=3,a=-1,i=-1,l=!1,u=!1;function c(){if(!l){var e=n.expirationTime;u?T():u=!0,x(p,e)}}function s(){var e=n,t=n.next;if(n===t)n=null;else{var r=n.previous;n=r.next=t,t.previous=r}e.next=e.previous=null,r=e.callback,t=e.expirationTime,e=e.priorityLevel;var a=o,l=i;o=e,i=t;try{var u=r()}finally{o=a,i=l}if("function"==typeof u)if(u={callback:u,priorityLevel:e,expirationTime:t,next:null,previous:null},null===n)n=u.next=u.previous=u;else{r=null,e=n;do{if(e.expirationTime>=t){r=e;break}e=e.next}while(e!==n);null===r?r=n:r===n&&(n=u,c()),(t=r.previous).next=r.previous=u,u.next=r,u.previous=t}}function f(){if(-1===a&&null!==n&&1===n.priorityLevel){l=!0;try{do{s()}while(null!==n&&1===n.priorityLevel)}finally{l=!1,null!==n?c():u=!1}}}function p(e){l=!0;var o=r;r=e;try{if(e)for(;null!==n;){var a=t.unstable_now();if(!(n.expirationTime<=a))break;do{s()}while(null!==n&&n.expirationTime<=a)}else if(null!==n)do{s()}while(null!==n&&!C())}finally{l=!1,r=o,null!==n?c():u=!1,f()}}var d,h,m=Date,y="function"==typeof setTimeout?setTimeout:void 0,v="function"==typeof clearTimeout?clearTimeout:void 0,g="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,b="function"==typeof cancelAnimationFrame?cancelAnimationFrame:void 0;function w(e){d=g(function(t){v(h),e(t)}),h=y(function(){b(d),e(t.unstable_now())},100)}if("object"==typeof performance&&"function"==typeof performance.now){var k=performance;t.unstable_now=function(){return k.now()}}else t.unstable_now=function(){return m.now()};var x,T,C,S=null;if("undefined"!=typeof window?S=window:void 0!==e&&(S=e),S&&S._schedMock){var E=S._schedMock;x=E[0],T=E[1],C=E[2],t.unstable_now=E[3]}else if("undefined"==typeof window||"function"!=typeof MessageChannel){var _=null,O=function(e){if(null!==_)try{_(e)}finally{_=null}};x=function(e){null!==_?setTimeout(x,0,e):(_=e,setTimeout(O,0,!1))},T=function(){_=null},C=function(){return!1}}else{"undefined"!=typeof console&&("function"!=typeof g&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof b&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var P=null,j=!1,R=-1,A=!1,N=!1,I=0,M=33,z=33;C=function(){return I<=t.unstable_now()};var L=new MessageChannel,U=L.port2;L.port1.onmessage=function(){j=!1;var e=P,n=R;P=null,R=-1;var r=t.unstable_now(),o=!1;if(0>=I-r){if(!(-1!==n&&n<=r))return A||(A=!0,w(F)),P=e,void(R=n);o=!0}if(null!==e){N=!0;try{e(o)}finally{N=!1}}};var F=function(e){if(null!==P){w(F);var t=e-I+z;t<z&&M<z?(8>t&&(t=8),z=t<M?M:t):M=t,I=e+z,j||(j=!0,U.postMessage(void 0))}else A=!1};x=function(e,t){P=e,R=t,N||0>t?U.postMessage(void 0):A||(A=!0,w(F))},T=function(){P=null,j=!1,R=-1}}t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=o,i=a;o=e,a=t.unstable_now();try{return n()}finally{o=r,a=i,f()}},t.unstable_next=function(e){switch(o){case 1:case 2:case 3:var n=3;break;default:n=o}var r=o,i=a;o=n,a=t.unstable_now();try{return e()}finally{o=r,a=i,f()}},t.unstable_scheduleCallback=function(e,r){var i=-1!==a?a:t.unstable_now();if("object"==typeof r&&null!==r&&"number"==typeof r.timeout)r=i+r.timeout;else switch(o){case 1:r=i+-1;break;case 2:r=i+250;break;case 5:r=i+1073741823;break;case 4:r=i+1e4;break;default:r=i+5e3}if(e={callback:e,priorityLevel:o,expirationTime:r,next:null,previous:null},null===n)n=e.next=e.previous=e,c();else{i=null;var l=n;do{if(l.expirationTime>r){i=l;break}l=l.next}while(l!==n);null===i?i=n:i===n&&(n=e,c()),(r=i.previous).next=i.previous=e,e.next=i,e.previous=r}return e},t.unstable_cancelCallback=function(e){var t=e.next;if(null!==t){if(t===e)n=null;else{e===n&&(n=t);var r=e.previous;r.next=t,t.previous=r}e.next=e.previous=null}},t.unstable_wrapCallback=function(e){var n=o;return function(){var r=o,i=a;o=n,a=t.unstable_now();try{return e.apply(this,arguments)}finally{o=r,a=i,f()}}},t.unstable_getCurrentPriorityLevel=function(){return o},t.unstable_shouldYield=function(){return!r&&(null!==n&&n.expirationTime<i||C())},t.unstable_continueExecution=function(){null!==n&&c()},t.unstable_pauseExecution=function(){},t.unstable_getFirstCallbackNode=function(){return n}}).call(this,n(21))},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";var r=n(23);function o(){}function a(){}a.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,a,i){if(i!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:a,resetWarningCache:o};return n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t){var n,r,o=e.exports={};function a(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function l(e){if(n===setTimeout)return setTimeout(e,0);if((n===a||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:a}catch(e){n=a}try{r="function"==typeof clearTimeout?clearTimeout:i}catch(e){r=i}}();var u,c=[],s=!1,f=-1;function p(){s&&u&&(s=!1,u.length?c=u.concat(c):f=-1,c.length&&d())}function d(){if(!s){var e=l(p);s=!0;for(var t=c.length;t;){for(u=c,c=[];++f<t;)u&&u[f].run();f=-1,t=c.length}u=null,s=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===i||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function h(e,t){this.fun=e,this.array=t}function m(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];c.push(new h(e,t)),1!==c.length||s||l(d)},h.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=m,o.addListener=m,o.once=m,o.off=m,o.removeListener=m,o.removeAllListeners=m,o.emit=m,o.prependListener=m,o.prependOnceListener=m,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(e,t,n){"use strict";
/** @license React v16.8.4
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,a=r?Symbol.for("react.portal"):60106,i=r?Symbol.for("react.fragment"):60107,l=r?Symbol.for("react.strict_mode"):60108,u=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,s=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,p=r?Symbol.for("react.concurrent_mode"):60111,d=r?Symbol.for("react.forward_ref"):60112,h=r?Symbol.for("react.suspense"):60113,m=r?Symbol.for("react.memo"):60115,y=r?Symbol.for("react.lazy"):60116;function v(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case o:switch(e=e.type){case f:case p:case i:case u:case l:case h:return e;default:switch(e=e&&e.$$typeof){case s:case d:case c:return e;default:return t}}case y:case m:case a:return t}}}function g(e){return v(e)===p}t.typeOf=v,t.AsyncMode=f,t.ConcurrentMode=p,t.ContextConsumer=s,t.ContextProvider=c,t.Element=o,t.ForwardRef=d,t.Fragment=i,t.Lazy=y,t.Memo=m,t.Portal=a,t.Profiler=u,t.StrictMode=l,t.Suspense=h,t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===i||e===p||e===u||e===l||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===y||e.$$typeof===m||e.$$typeof===c||e.$$typeof===s||e.$$typeof===d)},t.isAsyncMode=function(e){return g(e)||v(e)===f},t.isConcurrentMode=g,t.isContextConsumer=function(e){return v(e)===s},t.isContextProvider=function(e){return v(e)===c},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},t.isForwardRef=function(e){return v(e)===d},t.isFragment=function(e){return v(e)===i},t.isLazy=function(e){return v(e)===y},t.isMemo=function(e){return v(e)===m},t.isPortal=function(e){return v(e)===a},t.isProfiler=function(e){return v(e)===u},t.isStrictMode=function(e){return v(e)===l},t.isSuspense=function(e){return v(e)===h}},function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},function(e,t,n){"use strict";n.r(t);var r=n(0),o=n.n(r),a=n(6),i=n(3),l=n(5),u=n.n(l),c=n(1),s=n.n(c),f=n(2),p=n.n(f),d=n(4),h=n.n(d);function m(e){return"/"===e.charAt(0)}function y(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}var v=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=e&&e.split("/")||[],r=t&&t.split("/")||[],o=e&&m(e),a=t&&m(t),i=o||a;if(e&&m(e)?r=n:n.length&&(r.pop(),r=r.concat(n)),!r.length)return"/";var l=void 0;if(r.length){var u=r[r.length-1];l="."===u||".."===u||""===u}else l=!1;for(var c=0,s=r.length;s>=0;s--){var f=r[s];"."===f?y(r,s):".."===f?(y(r,s),c++):c&&(y(r,s),c--)}if(!i)for(;c--;c)r.unshift("..");!i||""===r[0]||r[0]&&m(r[0])||r.unshift("");var p=r.join("/");return l&&"/"!==p.substr(-1)&&(p+="/"),p};"function"==typeof Symbol&&Symbol.iterator;var g=function(e){return"/"===e.charAt(0)?e:"/"+e},b=function(e,t){return new RegExp("^"+t+"(\\/|\\?|#|$)","i").test(e)},w=function(e,t){return b(e,t)?e.substr(t.length):e},k=function(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e},x=function(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o},T=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},C=function(e,t,n,r){var o=void 0;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var a=t.indexOf("?");return-1!==a&&(n=t.substr(a),t=t.substr(0,a)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(o=T({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=v(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o},S=function(){var e=null,t=[];return{setPrompt:function(t){return p()(null==e,"A history supports only one prompt at a time"),e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var a="function"==typeof e?e(t,n):e;"string"==typeof a?"function"==typeof r?r(a,o):(p()(!1,"A history needs a getUserConfirmation function in order to use a prompt message"),o(!0)):o(!1!==a)}else o(!0)},appendListener:function(e){var n=!0,r=function(){n&&e.apply(void 0,arguments)};return t.push(r),function(){n=!1,t=t.filter(function(e){return e!==r})}},notifyListeners:function(){for(var e=arguments.length,n=Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach(function(e){return e.apply(void 0,n)})}}},E=!("undefined"==typeof window||!window.document||!window.document.createElement),_=function(e,t,n){return e.addEventListener?e.addEventListener(t,n,!1):e.attachEvent("on"+t,n)},O=function(e,t,n){return e.removeEventListener?e.removeEventListener(t,n,!1):e.detachEvent("on"+t,n)},P=function(e,t){return t(window.confirm(e))},j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},R=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},A=function(){try{return window.history.state||{}}catch(e){return{}}},N=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};h()(E,"Browser history needs a DOM");var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),a=e.forceRefresh,i=void 0!==a&&a,l=e.getUserConfirmation,u=void 0===l?P:l,c=e.keyLength,s=void 0===c?6:c,f=e.basename?k(g(e.basename)):"",d=function(e){var t=e||{},n=t.key,r=t.state,o=window.location,a=o.pathname+o.search+o.hash;return p()(!f||b(a,f),'You are attempting to use a basename on a page whose URL path does not begin with the basename. Expected path "'+a+'" to begin with "'+f+'".'),f&&(a=w(a,f)),C(a,r,n)},m=function(){return Math.random().toString(36).substr(2,s)},y=S(),v=function(e){R(H,e),H.length=n.length,y.notifyListeners(H.location,H.action)},T=function(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||M(d(e.state))},N=function(){M(d(A()))},I=!1,M=function(e){I?(I=!1,v()):y.confirmTransitionTo(e,"POP",u,function(t){t?v({action:"POP",location:e}):z(e)})},z=function(e){var t=H.location,n=U.indexOf(t.key);-1===n&&(n=0);var r=U.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(I=!0,D(o))},L=d(A()),U=[L.key],F=function(e){return f+x(e)},D=function(e){n.go(e)},$=0,W=function(e){1===($+=e)?(_(window,"popstate",T),o&&_(window,"hashchange",N)):0===$&&(O(window,"popstate",T),o&&O(window,"hashchange",N))},B=!1,H={length:n.length,action:"POP",location:L,createHref:F,push:function(e,t){p()(!("object"===(void 0===e?"undefined":j(e))&&void 0!==e.state&&void 0!==t),"You should avoid providing a 2nd state argument to push when the 1st argument is a location-like object that already has state; it is ignored");var o=C(e,t,m(),H.location);y.confirmTransitionTo(o,"PUSH",u,function(e){if(e){var t=F(o),a=o.key,l=o.state;if(r)if(n.pushState({key:a,state:l},null,t),i)window.location.href=t;else{var u=U.indexOf(H.location.key),c=U.slice(0,-1===u?0:u+1);c.push(o.key),U=c,v({action:"PUSH",location:o})}else p()(void 0===l,"Browser history cannot push state in browsers that do not support HTML5 history"),window.location.href=t}})},replace:function(e,t){p()(!("object"===(void 0===e?"undefined":j(e))&&void 0!==e.state&&void 0!==t),"You should avoid providing a 2nd state argument to replace when the 1st argument is a location-like object that already has state; it is ignored");var o=C(e,t,m(),H.location);y.confirmTransitionTo(o,"REPLACE",u,function(e){if(e){var t=F(o),a=o.key,l=o.state;if(r)if(n.replaceState({key:a,state:l},null,t),i)window.location.replace(t);else{var u=U.indexOf(H.location.key);-1!==u&&(U[u]=o.key),v({action:"REPLACE",location:o})}else p()(void 0===l,"Browser history cannot replace state in browsers that do not support HTML5 history"),window.location.replace(t)}})},go:D,goBack:function(){return D(-1)},goForward:function(){return D(1)},block:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=y.setPrompt(e);return B||(W(1),B=!0),function(){return B&&(B=!1,W(-1)),t()}},listen:function(e){var t=y.appendListener(e);return W(1),function(){W(-1),t()}}};return H},I=(Object.assign,"function"==typeof Symbol&&Symbol.iterator,Object.assign,Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e});function M(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var z=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,a=Array(o),i=0;i<o;i++)a[i]=arguments[i];return n=r=M(this,e.call.apply(e,[this].concat(a))),r.state={match:r.computeMatch(r.props.history.location.pathname)},M(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.getChildContext=function(){return{router:I({},this.context.router,{history:this.props.history,route:{location:this.props.history.location,match:this.state.match}})}},t.prototype.computeMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}},t.prototype.componentWillMount=function(){var e=this,t=this.props,n=t.children,r=t.history;h()(null==n||1===o.a.Children.count(n),"A <Router> may have only one child element"),this.unlisten=r.listen(function(){e.setState({match:e.computeMatch(r.location.pathname)})})},t.prototype.componentWillReceiveProps=function(e){u()(this.props.history===e.history,"You cannot change <Router history>")},t.prototype.componentWillUnmount=function(){this.unlisten()},t.prototype.render=function(){var e=this.props.children;return e?o.a.Children.only(e):null},t}(o.a.Component);z.propTypes={history:s.a.object.isRequired,children:s.a.node},z.contextTypes={router:s.a.object},z.childContextTypes={router:s.a.object.isRequired};var L=z;function U(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var F=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,a=Array(o),i=0;i<o;i++)a[i]=arguments[i];return n=r=U(this,e.call.apply(e,[this].concat(a))),r.history=N(r.props),U(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){u()(!this.props.history,"<BrowserRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { BrowserRouter as Router }`.")},t.prototype.render=function(){return o.a.createElement(L,{history:this.history,children:this.props.children})},t}(o.a.Component);F.propTypes={basename:s.a.string,forceRefresh:s.a.bool,getUserConfirmation:s.a.func,keyLength:s.a.number,children:s.a.node};var D=F,$=n(14),W=n.n($),B={},H=0,V=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments[2];"string"==typeof t&&(t={path:t});var r=t,o=r.path,a=r.exact,i=void 0!==a&&a,l=r.strict,u=void 0!==l&&l,c=r.sensitive;if(null==o)return n;var s=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=B[n]||(B[n]={});if(r[e])return r[e];var o=[],a={re:W()(e,o,t),keys:o};return H<1e4&&(r[e]=a,H++),a}(o,{end:i,strict:u,sensitive:void 0!==c&&c}),f=s.re,p=s.keys,d=f.exec(e);if(!d)return null;var h=d[0],m=d.slice(1),y=e===h;return i&&!y?null:{path:o,url:"/"===o&&""===h?"/":h,isExact:y,params:p.reduce(function(e,t,n){return e[t.name]=m[n],e},{})}},q=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function Q(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var Y=function(e){return 0===o.a.Children.count(e)},K=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,a=Array(o),i=0;i<o;i++)a[i]=arguments[i];return n=r=Q(this,e.call.apply(e,[this].concat(a))),r.state={match:r.computeMatch(r.props,r.context.router)},Q(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.getChildContext=function(){return{router:q({},this.context.router,{route:{location:this.props.location||this.context.router.route.location,match:this.state.match}})}},t.prototype.computeMatch=function(e,t){var n=e.computedMatch,r=e.location,o=e.path,a=e.strict,i=e.exact,l=e.sensitive;if(n)return n;h()(t,"You should not use <Route> or withRouter() outside a <Router>");var u=t.route,c=(r||u.location).pathname;return V(c,{path:o,strict:a,exact:i,sensitive:l},u.match)},t.prototype.componentWillMount=function(){u()(!(this.props.component&&this.props.render),"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored"),u()(!(this.props.component&&this.props.children&&!Y(this.props.children)),"You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored"),u()(!(this.props.render&&this.props.children&&!Y(this.props.children)),"You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored")},t.prototype.componentWillReceiveProps=function(e,t){u()(!(e.location&&!this.props.location),'<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),u()(!(!e.location&&this.props.location),'<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.'),this.setState({match:this.computeMatch(e,t.router)})},t.prototype.render=function(){var e=this.state.match,t=this.props,n=t.children,r=t.component,a=t.render,i=this.context.router,l=i.history,u=i.route,c=i.staticContext,s={match:e,location:this.props.location||u.location,history:l,staticContext:c};return r?e?o.a.createElement(r,s):null:a?e?a(s):null:"function"==typeof n?n(s):n&&!Y(n)?o.a.Children.only(n):null},t}(o.a.Component);K.propTypes={computedMatch:s.a.object,path:s.a.string,exact:s.a.bool,strict:s.a.bool,sensitive:s.a.bool,component:s.a.func,render:s.a.func,children:s.a.oneOfType([s.a.func,s.a.node]),location:s.a.object},K.contextTypes={router:s.a.shape({history:s.a.object.isRequired,route:s.a.object.isRequired,staticContext:s.a.object})},K.childContextTypes={router:s.a.object.isRequired};var X=K,G=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function J(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var Z=function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)},ee=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,a=Array(o),i=0;i<o;i++)a[i]=arguments[i];return n=r=J(this,e.call.apply(e,[this].concat(a))),r.handleClick=function(e){if(r.props.onClick&&r.props.onClick(e),!e.defaultPrevented&&0===e.button&&!r.props.target&&!Z(e)){e.preventDefault();var t=r.context.router.history,n=r.props,o=n.replace,a=n.to;o?t.replace(a):t.push(a)}},J(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.render=function(){var e=this.props,t=(e.replace,e.to),n=e.innerRef,r=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["replace","to","innerRef"]);h()(this.context.router,"You should not use <Link> outside a <Router>"),h()(void 0!==t,'You must specify the "to" property');var a=this.context.router.history,i="string"==typeof t?C(t,null,null,a.location):t,l=a.createHref(i);return o.a.createElement("a",G({},r,{onClick:this.handleClick,href:l,ref:n}))},t}(o.a.Component);ee.propTypes={onClick:s.a.func,target:s.a.string,replace:s.a.bool,to:s.a.oneOfType([s.a.string,s.a.object]).isRequired,innerRef:s.a.oneOfType([s.a.string,s.a.func])},ee.defaultProps={replace:!1},ee.contextTypes={router:s.a.shape({history:s.a.shape({push:s.a.func.isRequired,replace:s.a.func.isRequired,createHref:s.a.func.isRequired}).isRequired}).isRequired};var te=ee;function ne(){var e=oe(["\n  display: flex;\n\n  nav {\n    display: flex;\n    a {\n      display: block;\n      margin-right: 20px;\n      color: black;\n      text-decoration: none;\n    }\n  }\n"]);return ne=function(){return e},e}function re(){var e=oe(["\n  display: flex;\n"]);return re=function(){return e},e}function oe(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}function ae(e){return(ae="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ie(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function le(e,t){return!t||"object"!==ae(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function ue(e){return(ue=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function ce(e,t){return(ce=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var se=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),le(this,ue(t).apply(this,arguments))}var n,a,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&ce(e,t)}(t,r["Component"]),n=t,(a=[{key:"render",value:function(){return o.a.createElement(fe,null,o.a.createElement(pe,null,o.a.createElement("nav",null,o.a.createElement(te,{to:"/"},"Home"),o.a.createElement(te,{to:"/teams"},"Teams"))))}}])&&ie(n.prototype,a),i&&ie(n,i),t}(),fe=i.a.div(re()),pe=i.a.div(ne());function de(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}([""]);return de=function(){return e},e}function he(e){return(he="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function me(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function ye(e,t){return!t||"object"!==he(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function ve(e){return(ve=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function ge(e,t){return(ge=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var be=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),ye(this,ve(t).apply(this,arguments))}var n,a,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&ge(e,t)}(t,r["Component"]),n=t,(a=[{key:"render",value:function(){return o.a.createElement(we,null,o.a.createElement("h2",null,"Welcome home"))}}])&&me(n.prototype,a),i&&me(n,i),t}(),we=i.a.div(de());function ke(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n  h3 {\n    font-size: 200%;\n    margin: 20px 0;\n  }\n  p {\n    font-size: 100%;\n    margin: 10px 0;\n  }\n"]);return ke=function(){return e},e}function xe(e){return(xe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Te(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Ce(e,t){return!t||"object"!==xe(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Se(e){return(Se=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Ee(e,t){return(Ee=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var _e=[{id:0,title:"Phoenix Suns",sport:"Basketball",emoji:"🏀"},{id:1,title:"Juventus",sport:"Soccer",emoji:"⚽️"},{id:2,title:"Kolkata Knight Riders",sport:"Cricket",emoji:"🏏"}],Oe=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),Ce(this,Se(t).apply(this,arguments))}var n,a,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Ee(e,t)}(t,r["Component"]),n=t,(a=[{key:"render",value:function(){var e=this.props.match,t=_e.find(function(t){return t.title===e.params.title});return o.a.createElement(Pe,null,o.a.createElement("h3",null,t.title),o.a.createElement("p",null,t.sport),o.a.createElement("p",null,t.emoji))}}])&&Te(n.prototype,a),i&&Te(n,i),t}(),Pe=i.a.div(ke());function je(){var e=Ae(["\n  display: flex;\n\n  nav {\n    display: flex;\n\n    a {\n      display: block;\n      margin-right: 20px;\n      color: black;\n      text-decoration: none;\n    }\n  }\n"]);return je=function(){return e},e}function Re(){var e=Ae([""]);return Re=function(){return e},e}function Ae(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}function Ne(e){return(Ne="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ie(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Me(e,t){return!t||"object"!==Ne(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function ze(e){return(ze=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Le(e,t){return(Le=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Ue=[{id:0,title:"Phoenix Suns",sport:"Basketball",emoji:"🏀"},{id:1,title:"Juventus",sport:"Soccer",emoji:"⚽️"},{id:2,title:"Kolkata Knight Riders",sport:"Cricket",emoji:"🏏"}],Fe=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),Me(this,ze(t).apply(this,arguments))}var n,a,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Le(e,t)}(t,r["Component"]),n=t,(a=[{key:"render",value:function(){var e=this.props.match;return o.a.createElement(De,null,o.a.createElement("h2",null,"Teams"),o.a.createElement($e,null,o.a.createElement("nav",null,Ue.map(function(t,n){return o.a.createElement(te,{key:n,to:"".concat(e.url,"/").concat(t.title)},t.title)}))),o.a.createElement(X,{path:"".concat(e.path,"/:title"),component:Oe}),o.a.createElement(X,{exact:!0,path:e.path,render:function(){return o.a.createElement("h3",null,"Please select a team.")}}))}}])&&Ie(n.prototype,a),i&&Ie(n,i),t}(),De=i.a.div(Re()),$e=i.a.div(je());function We(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  font-size: 20px;\n  padding: 20px 40px;\n  background: linear-gradient(20deg, rgb(219, 112, 147), #daa357);\n"]);return We=function(){return e},e}var Be=i.a.div(We()),He=function(){return o.a.createElement(Be,null,o.a.createElement(D,null,o.a.createElement("div",null,o.a.createElement(se,null),o.a.createElement(X,{exact:!0,path:"/",component:be}),o.a.createElement(X,{path:"/teams",component:Fe}))))};Object(a.render)(o.a.createElement(He,null),document.getElementById("root"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L25vZGVfbW9kdWxlcy93YXJuaW5nL2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlZC1jb21wb25lbnRzL2Rpc3Qvc3R5bGVkLWNvbXBvbmVudHMuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ludmFyaWFudC9icm93c2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy93YXJuaW5nL3dhcm5pbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxpcy9zdHlsaXMubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tZW1vaXplLW9uZS9kaXN0L21lbW9pemUtb25lLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGlzLXJ1bGUtc2hlZXQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL3VuaXRsZXNzL2Rpc3QvdW5pdGxlc3MuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9ub2RlX21vZHVsZXMvcGF0aC10by1yZWdleHAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL21lbW9pemUvZGlzdC9tZW1vaXplLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9pcy1wcm9wLXZhbGlkL2Rpc3QvaXMtcHJvcC12YWxpZC5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb2Nlc3MvYnJvd3Nlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvbm9kZV9tb2R1bGVzL2lzYXJyYXkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUtcGF0aG5hbWUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3ZhbHVlLWVxdWFsL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL1BhdGhVdGlscy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9lcy9Mb2NhdGlvblV0aWxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL2NyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL0RPTVV0aWxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL2NyZWF0ZUJyb3dzZXJIaXN0b3J5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvUm91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL2NyZWF0ZUhhc2hIaXN0b3J5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL2NyZWF0ZU1lbW9yeUhpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvUm91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL0Jyb3dzZXJSb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lcy9tYXRjaFBhdGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lcy9Sb3V0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy9Sb3V0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy9MaW5rLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0hlYWRlci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Ib21lLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1RlYW0uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvVGVhbXMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJwcm9jZXNzIiwic3R5bGlzX3N0eWxpc19taW5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsInN0eWxpc19zdHlsaXNfbWluX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdCIsInN0eWxpc19ydWxlX3NoZWV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18iLCJzdHlsaXNfcnVsZV9zaGVldF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fX2RlZmF1bHQiLCJyZWFjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fIiwicmVhY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX19kZWZhdWx0IiwiX2Vtb3Rpb25fdW5pdGxlc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyIsInJlYWN0X2lzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X18iLCJtZW1vaXplX29uZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fIiwiX2Vtb3Rpb25faXNfcHJvcF92YWxpZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fIiwiaW50ZXJsZWF2ZSIsInN0cmluZ3MiLCJpbnRlcnBvbGF0aW9ucyIsInJlc3VsdCIsImxlbiIsImxlbmd0aCIsInB1c2giLCJfdHlwZW9mIiwiaXRlcmF0b3IiLCJvYmoiLCJjb25zdHJ1Y3RvciIsImNsYXNzQ2FsbENoZWNrIiwiaW5zdGFuY2UiLCJDb25zdHJ1Y3RvciIsIlR5cGVFcnJvciIsImNyZWF0ZUNsYXNzIiwiZGVmaW5lUHJvcGVydGllcyIsInRhcmdldCIsInByb3BzIiwiZGVzY3JpcHRvciIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwicHJvdG9Qcm9wcyIsInN0YXRpY1Byb3BzIiwiX2V4dGVuZHMiLCJhc3NpZ24iLCJhcmd1bWVudHMiLCJzb3VyY2UiLCJpbmhlcml0cyIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwib2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJrZXlzIiwiaW5kZXhPZiIsInBvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJzZWxmIiwiUmVmZXJlbmNlRXJyb3IiLCJpc1BsYWluT2JqZWN0IiwieCIsIkVNUFRZX0FSUkFZIiwiZnJlZXplIiwiRU1QVFlfT0JKRUNUIiwiaXNGdW5jdGlvbiIsInRlc3QiLCJnZXRDb21wb25lbnROYW1lIiwiZGlzcGxheU5hbWUiLCJpc1N0eWxlZENvbXBvbmVudCIsInN0eWxlZENvbXBvbmVudElkIiwiU0NfQVRUUiIsImVudiIsIklTX0JST1dTRVIiLCJ3aW5kb3ciLCJESVNBQkxFX1NQRUVEWSIsIlNDX0RJU0FCTEVfU1BFRURZIiwiU3R5bGVkQ29tcG9uZW50c0Vycm9yIiwiX0Vycm9yIiwiY29kZSIsInRoaXMiLCJfbGVuIiwiQXJyYXkiLCJfa2V5IiwiX3RoaXMiLCJqb2luIiwiRXJyb3IiLCJTQ19DT01QT05FTlRfSUQiLCJleHRyYWN0Q29tcHMiLCJtYXliZUNTUyIsImNzcyIsImV4aXN0aW5nQ29tcG9uZW50cyIsInJlcGxhY2UiLCJtYXRjaCIsImNvbXBvbmVudElkIiwibWF0Y2hJbmRleCIsIm1hcCIsIl9yZWYiLCJuZXh0Q29tcCIsImNzc0Zyb21ET00iLCJzbGljZSIsIkNPTU1FTlRfUkVHRVgiLCJzdHlsaXNTcGxpdHRlciIsImEiLCJnbG9iYWwiLCJjYXNjYWRlIiwia2V5ZnJhbWUiLCJwcmVmaXgiLCJjb21wcmVzcyIsInNlbWljb2xvbiIsInN0eWxpcyIsInBhcnNpbmdSdWxlcyIsInJldHVyblJ1bGVzUGx1Z2luIiwiY29udGV4dCIsInBhcnNlZFJ1bGVzIiwicGFyc2VSdWxlc1BsdWdpbiIsInJ1bGUiLCJfY29tcG9uZW50SWQiLCJfc2VsZWN0b3IiLCJfc2VsZWN0b3JSZWdleHAiLCJzZWxmUmVmZXJlbmNlUmVwbGFjZXIiLCJvZmZzZXQiLCJzdHJpbmciLCJ1c2UiLCJfIiwic2VsZWN0b3JzIiwibGFzdEluZGV4T2YiLCJzdHJpbmdpZnlSdWxlcyIsInJ1bGVzIiwic2VsZWN0b3IiLCJ1bmRlZmluZWQiLCJmbGF0Q1NTIiwiY3NzU3RyIiwiUmVnRXhwIiwiZ2V0Tm9uY2UiLCJuYyIsImFkZE5hbWVGb3JJZCIsIm5hbWVzIiwiaWQiLCJyZXNldElkTmFtZXMiLCJoYXNOYW1lRm9ySWQiLCJzdHJpbmdpZnlOYW1lcyIsInN0ciIsInRyaW0iLCJzaGVldEZvclRhZyIsInRhZyIsInNoZWV0Iiwic2l6ZSIsImRvY3VtZW50Iiwic3R5bGVTaGVldHMiLCJvd25lck5vZGUiLCJzYWZlSW5zZXJ0UnVsZSIsImNzc1J1bGUiLCJpbmRleCIsIm1heEluZGV4IiwiY3NzUnVsZXMiLCJpbnNlcnRSdWxlIiwiZXJyIiwibWFrZVRleHRNYXJrZXIiLCJhZGRVcFVudGlsSW5kZXgiLCJzaXplcyIsInRvdGFsVXBUb0luZGV4Iiwid3JhcEFzSHRtbFRhZyIsImFkZGl0aW9uYWxBdHRycyIsIm5vbmNlIiwiU0NfVkVSU0lPTl9BVFRSIiwiZmlsdGVyIiwiQm9vbGVhbiIsIndyYXBBc0VsZW1lbnQiLCJfcHJvcHMiLCJjcmVhdGVFbGVtZW50IiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJfX2h0bWwiLCJnZXRJZHNGcm9tTWFya2Vyc0ZhY3RvcnkiLCJtYXJrZXJzIiwibWFrZVRleHROb2RlIiwiY3JlYXRlVGV4dE5vZGUiLCJtYWtlU2VydmVyVGFnIiwibmFtZXNBcmciLCJtYXJrZXJzQXJnIiwiaW5zZXJ0TWFya2VyIiwicHJldiIsImNzc0ZvcklkIiwiY2xvbmUiLCJuYW1lc0Nsb25lIiwiY2xvbmVOYW1lcyIsIm1hcmtlcnNDbG9uZSIsImdldElkcyIsImluc2VydFJ1bGVzIiwicmVtb3ZlUnVsZXMiLCJtYXJrZXIiLCJzZWFsZWQiLCJzdHlsZVRhZyIsInRvRWxlbWVudCIsInRvSFRNTCIsIm1ha2VUYWciLCJ0YWdFbCIsImZvcmNlU2VydmVyIiwiaW5zZXJ0QmVmb3JlIiwiZ2V0SW1wb3J0UnVsZVRhZyIsImVsIiwic2V0QXR0cmlidXRlIiwiYXBwZW5kQ2hpbGQiLCJwYXJlbnROb2RlIiwibmV4dFNpYmxpbmciLCJtYWtlU3R5bGVUYWciLCJleHRyYWN0SW1wb3J0IiwidXNlZEltcG9ydFJ1bGVUYWciLCJkYXRhIiwiaW1wb3J0UnVsZXMiLCJjc3NSdWxlc1NpemUiLCJtYXlIYXZlSW1wb3J0Iiwic2VwYXJhdG9yIiwiYXBwZW5kRGF0YSIsIm5ld01hcmtlciIsInJlcGxhY2VDaGlsZCIsIm1ha2VCcm93c2VyVGFnIiwiZW5kIiwiY3NzVGV4dCIsImluc2VydEluZGV4IiwiaW5qZWN0ZWRSdWxlcyIsInJlbW92YWxJbmRleCIsImxvd2VyQm91bmQiLCJkZWxldGVSdWxlIiwiZGVsZXRlUnVsZXMiLCJtYWtlU3BlZWR5VGFnIiwiU1BMSVRfUkVHRVgiLCJNQVhfU0laRSIsInNoZWV0UnVubmluZ0lkIiwibWFzdGVyIiwiU3R5bGVTaGVldCIsImhlYWQiLCJpbXBvcnRSdWxlVGFnIiwiZmlyc3RUYWciLCJ0YWdzIiwidGFnTWFwIiwiZGVmZXJyZWQiLCJyZWh5ZHJhdGVkTmFtZXMiLCJpZ25vcmVSZWh5ZHJhdGVkTmFtZXMiLCJjYXBhY2l0eSIsImNsb25lcyIsInJlaHlkcmF0ZSIsImVscyIsImV4dHJhY3RlZCIsImlzU3RyZWFtZWQiLCJub2RlcyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJub2Rlc1NpemUiLCJnZXRBdHRyaWJ1dGUiLCJlbE5hbWVzIiwic3BsaXQiLCJlbE5hbWVzU2l6ZSIsImoiLCJhcHBseSIsInRleHRDb250ZW50IiwiZXh0cmFjdGVkU2l6ZSIsIl9leHRyYWN0ZWQkaSIsIl9pIiwicmVtb3ZlQ2hpbGQiLCJNYXRoIiwibWF4IiwiX2oiLCJyZXNldCIsImlkcyIsIm5ld1RhZyIsInNlYWxBbGxUYWdzIiwiZm9yRWFjaCIsImxhc3RFbCIsImdldFRhZ0ZvcklkIiwiaGFzSWQiLCJkZWZlcnJlZEluamVjdCIsImluamVjdCIsImNvbmNhdCIsInJlbW92ZSIsInRvUmVhY3RFbGVtZW50cyIsIktleWZyYW1lcyIsInN0eWxlU2hlZXQiLCJ0b1N0cmluZyIsIlN0cmluZyIsImdldE5hbWUiLCJ1cHBlcmNhc2VQYXR0ZXJuIiwibXNQYXR0ZXJuIiwiaXNGYWxzaXNoIiwiY2h1bmsiLCJvYmpUb0NzcyIsInByZXZLZXkiLCJ0b0xvd2VyQ2FzZSIsImZsYXR0ZW4iLCJleGVjdXRpb25Db250ZXh0IiwiaXNBcnJheSIsInJ1bGVTZXQiLCJzaG91bGRUaHJvdyIsImUiLCJzdHlsZXMiLCJtdXJtdXJoYXNoIiwiYiIsImNoYXJDb2RlQXQiLCJjaGFyc0xlbmd0aCIsImdldEFscGhhYmV0aWNDaGFyIiwiZnJvbUNoYXJDb2RlIiwiZ2VuZXJhdGVBbHBoYWJldGljTmFtZSIsImZsb29yIiwiaXNTdGF0aWNSdWxlcyIsImF0dHJzIiwic29tZSIsImhhc0Z1bmN0aW9uT2JqZWN0S2V5IiwiX1RZUEVfU1RBVElDUyIsImlzSE1SRW5hYmxlZCIsImhhc2hlciIsIkNvbXBvbmVudFN0eWxlIiwiaXNTdGF0aWMiLCJnZW5lcmF0ZUFuZEluamVjdFN0eWxlcyIsImxhc3RDbGFzc05hbWUiLCJnZW5lcmF0ZU5hbWUiLCJkZXRlcm1pbmVUaGVtZSIsImZhbGxiYWNrVGhlbWUiLCJkZWZhdWx0UHJvcHMiLCJpc0RlZmF1bHRUaGVtZSIsInRoZW1lIiwiZXNjYXBlUmVnZXgiLCJkYXNoZXNBdEVuZHMiLCJlc2NhcGUiLCJpc1RhZyIsIlJFQUNUX1NUQVRJQ1MiLCJjaGlsZENvbnRleHRUeXBlcyIsImNvbnRleHRUeXBlcyIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsInByb3BUeXBlcyIsInR5cGUiLCJLTk9XTl9TVEFUSUNTIiwiY2FsbGVyIiwiY2FsbGVlIiwiYXJpdHkiLCJUWVBFX1NUQVRJQ1MiLCIkJHR5cGVvZiIsInJlbmRlciIsImRlZmluZVByb3BlcnR5JDEiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiX09iamVjdCRnZXRPd25Qcm9wZXJ0IiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZ2V0UHJvdG90eXBlT2YiLCJvYmplY3RQcm90b3R5cGUiLCJhcnJheVByb3RvdHlwZSIsImhvaXN0Tm9uUmVhY3RTdGF0aWNzIiwidGFyZ2V0Q29tcG9uZW50Iiwic291cmNlQ29tcG9uZW50IiwiYmxhY2tsaXN0IiwiaW5oZXJpdGVkQ29tcG9uZW50IiwidGFyZ2V0U3RhdGljcyIsInNvdXJjZVN0YXRpY3MiLCJUaGVtZUNvbnRleHQiLCJUaGVtZUNvbnN1bWVyIiwiQ29uc3VtZXIiLCJTdHlsZVNoZWV0Q29udGV4dCIsIl9Db21wb25lbnQiLCJUaGVtZVByb3ZpZGVyIiwiZ2V0Q29udGV4dCIsInJlbmRlcklubmVyIiwiY2hpbGRyZW4iLCJvdXRlclRoZW1lIiwiUHJvdmlkZXIiLCJDaGlsZHJlbiIsIm9ubHkiLCJnZXRUaGVtZSIsIlNlcnZlclN0eWxlU2hlZXQiLCJtYXN0ZXJTaGVldCIsInNlYWwiLCJzcGxpY2UiLCJjb2xsZWN0U3R5bGVzIiwiU3R5bGVTaGVldE1hbmFnZXIiLCJnZXRTdHlsZVRhZ3MiLCJnZXRTdHlsZUVsZW1lbnQiLCJpbnRlcmxlYXZlV2l0aE5vZGVTdHJlYW0iLCJyZWFkYWJsZVN0cmVhbSIsIlN0eWxlU2hlZXRDb25zdW1lciIsImlkZW50aWZpZXJzIiwiU2V0IiwiU3R5bGVkQ29tcG9uZW50IiwicmVuZGVyT3V0ZXIiLCJmb3J3YXJkZWRDb21wb25lbnQiLCJjb21wb25lbnRTdHlsZSIsIl9wcm9wcyRmb3J3YXJkZWRDb21wbyIsImZvbGRlZENvbXBvbmVudElkcyIsImdlbmVyYXRlZENsYXNzTmFtZSIsImVsZW1lbnRUb0JlQ3JlYXRlZCIsImFzIiwiaXNUYXJnZXRUYWciLCJwcm9wc0ZvckVsZW1lbnQiLCJjb21wdXRlZFByb3BzIiwicmVmIiwic3R5bGUiLCJjbGFzc05hbWUiLCJidWlsZEV4ZWN1dGlvbkNvbnRleHQiLCJfdGhpczIiLCJhdHRyRGVmIiwiZm4iLCJyZXNvbHZlZEF0dHJEZWYiLCJhdHRyRGVmV2FzRm4iLCJhdHRyIiwiaXNSZWFjdENvbXBvbmVudCIsIl9wcm9wcyRmb3J3YXJkZWRDb21wbzIiLCJ3YXJuVG9vTWFueUNsYXNzZXMiLCJjcmVhdGVTdHlsZWRDb21wb25lbnQiLCJvcHRpb25zIiwiaXNUYXJnZXRTdHlsZWRDb21wIiwiaXNDbGFzcyIsIl9vcHRpb25zJGRpc3BsYXlOYW1lIiwiZ2VuZXJhdGVEaXNwbGF5TmFtZSIsIl9vcHRpb25zJGNvbXBvbmVudElkIiwiX0NvbXBvbmVudFN0eWxlIiwiX2Rpc3BsYXlOYW1lIiwicGFyZW50Q29tcG9uZW50SWQiLCJuciIsImdlbmVyYXRlSWQiLCJfb3B0aW9ucyRQYXJlbnRDb21wb24iLCJQYXJlbnRDb21wb25lbnQiLCJfb3B0aW9ucyRhdHRycyIsImZpbmFsQXR0cnMiLCJXcmFwcGVkU3R5bGVkQ29tcG9uZW50IiwiZm9yd2FyZFJlZiIsImZvcndhcmRlZFJlZiIsIndpdGhDb21wb25lbnQiLCJwcmV2aW91c0NvbXBvbmVudElkIiwib3B0aW9uc1RvQ29weSIsIm5ld0NvbXBvbmVudElkIiwic3R5bGVkIiwiY29uc3RydWN0V2l0aE9wdGlvbnMiLCJjb21wb25lbnRDb25zdHJ1Y3RvciIsInRlbXBsYXRlRnVuY3Rpb24iLCJ3aXRoQ29uZmlnIiwiY29uZmlnIiwiZG9tRWxlbWVudCIsIkdsb2JhbFN0eWxlIiwiY3JlYXRlU3R5bGVzIiwicmVtb3ZlU3R5bGVzIiwicmVuZGVyU3R5bGVzIiwic2NDR1NITVJDYWNoZSIsIl9fd2VicGFja19leHBvcnRzX18iLCJjb25kaXRpb24iLCJmb3JtYXQiLCJmIiwiZXJyb3IiLCJhcmdzIiwiYXJnSW5kZXgiLCJmcmFtZXNUb1BvcCIsIndhcm5pbmciLCJjaGVja0RDRSIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsImNvbnNvbGUiLCJoIiwidSIsImsiLCJnIiwiQSIsIkMiLCJ3IiwidiIsIiQiLCJ5IiwiTyIsInoiLCJOIiwiUyIsIkYiLCJXIiwicSIsIkIiLCJEIiwiRSIsIkciLCJIIiwiSSIsIkoiLCJLIiwiTCIsIk0iLCJQIiwiUSIsIlIiLCJUIiwiVSIsIlYiLCJYIiwiWSIsIloiLCJlZSIsImFlIiwicmUiLCJjZSIsInNlIiwidGUiLCJpZSIsImZlIiwibmUiLCJsZSIsIm9lIiwiaGUiLCJ1ZSIsImRlIiwiYmUiLCJwZSIsImtlIiwiZ2UiLCJBZSIsIkNlIiwid2UiLCJ2ZSIsIm1lIiwieGUiLCIkZSIsInllIiwiT2UiLCJqZSIsInplIiwiTmUiLCJTZSIsIkZlIiwiV2UiLCJxZSIsIkJlIiwiRGUiLCJFZSIsIkdlIiwiSGUiLCJKZSIsIlJlIiwiVGUiLCJVZSIsIlZlIiwiWGUiLCJZZSIsImNoYXJBdCIsIlFlIiwic3Vic3RyaW5nIiwiSWUiLCJQZSIsIk1lIiwiTGUiLCJLZSIsImlzTmFOIiwicGFyc2VGbG9hdCIsInNldCIsInNpbXBsZUlzRXF1YWwiLCJyZXN1bHRGbiIsImlzRXF1YWwiLCJsYXN0VGhpcyIsImxhc3RSZXN1bHQiLCJsYXN0QXJncyIsImNhbGxlZE9uY2UiLCJpc05ld0FyZ0VxdWFsVG9MYXN0IiwibmV3QXJnIiwibmV3QXJncyIsImV2ZXJ5IiwicHJvcElzRW51bWVyYWJsZSIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwidGVzdDEiLCJ0ZXN0MiIsInRlc3QzIiwibGV0dGVyIiwic2hvdWxkVXNlTmF0aXZlIiwiZnJvbSIsInN5bWJvbHMiLCJ0byIsInZhbCIsInRvT2JqZWN0IiwidG9TaGVldCIsImJsb2NrIiwiY29udGVudCIsInBhcmVudHMiLCJsaW5lIiwiY29sdW1uIiwiZGVwdGgiLCJhdCIsImRlbGltaXRlciIsImZhY3RvcnkiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwibXNHcmlkUm93IiwibXNHcmlkUm93U3BhbiIsIm1zR3JpZENvbHVtbiIsIm1zR3JpZENvbHVtblNwYW4iLCJmb250V2VpZ2h0IiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsIldlYmtpdExpbmVDbGFtcCIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsImlzYXJyYXkiLCJwYXRoVG9SZWdleHAiLCJwYXJzZSIsImNvbXBpbGUiLCJ0b2tlbnNUb0Z1bmN0aW9uIiwidG9rZW5zVG9SZWdFeHAiLCJQQVRIX1JFR0VYUCIsInJlcyIsInRva2VucyIsInBhdGgiLCJkZWZhdWx0RGVsaW1pdGVyIiwiZXhlYyIsImVzY2FwZWQiLCJuZXh0IiwiY2FwdHVyZSIsImdyb3VwIiwibW9kaWZpZXIiLCJhc3RlcmlzayIsInBhcnRpYWwiLCJyZXBlYXQiLCJvcHRpb25hbCIsInBhdHRlcm4iLCJlc2NhcGVHcm91cCIsImVzY2FwZVN0cmluZyIsInN1YnN0ciIsImVuY29kZVVSSUNvbXBvbmVudFByZXR0eSIsImVuY29kZVVSSSIsInRvVXBwZXJDYXNlIiwibWF0Y2hlcyIsIm9wdHMiLCJlbmNvZGUiLCJwcmV0dHkiLCJlbmNvZGVVUklDb21wb25lbnQiLCJ0b2tlbiIsInNlZ21lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiYXR0YWNoS2V5cyIsImZsYWdzIiwic2Vuc2l0aXZlIiwic3RyaWN0Iiwicm91dGUiLCJlbmRzV2l0aERlbGltaXRlciIsImdyb3VwcyIsInJlZ2V4cFRvUmVnZXhwIiwicGFydHMiLCJhcnJheVRvUmVnZXhwIiwic3RyaW5nVG9SZWdleHAiLCJyZWFjdFByb3BzUmVnZXgiLCJjYWNoZSIsImFyZyIsIm1lbW9pemVfYnJvd3Nlcl9lc20iLCJwcm9wIiwiZm9yIiwiYWEiLCJiYSIsImNhIiwiaXNNb3VudGVkIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVTZXRTdGF0ZSIsInJlZnMiLCJ1cGRhdGVyIiwic2V0U3RhdGUiLCJmb3JjZVVwZGF0ZSIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiY3VycmVudCIsIl9fc2VsZiIsIl9fc291cmNlIiwiX293bmVyIiwicG9wIiwia2V5UHJlZml4IiwiZnVuYyIsImNvdW50IiwiZG9uZSIsIj0iLCI6IiwiZWEiLCJmYSIsImRhIiwidG9BcnJheSIsImNyZWF0ZVJlZiIsIkNvbXBvbmVudCIsIlB1cmVDb21wb25lbnQiLCJjcmVhdGVDb250ZXh0IiwiX2NhbGN1bGF0ZUNoYW5nZWRCaXRzIiwiX2N1cnJlbnRWYWx1ZSIsIl9jdXJyZW50VmFsdWUyIiwiX3RocmVhZENvdW50IiwiX2NvbnRleHQiLCJsYXp5IiwiX2N0b3IiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsIm1lbW8iLCJjb21wYXJlIiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlRWZmZWN0IiwidXNlSW1wZXJhdGl2ZUhhbmRsZSIsInVzZURlYnVnVmFsdWUiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VNZW1vIiwidXNlUmVkdWNlciIsInVzZVJlZiIsInVzZVN0YXRlIiwiRnJhZ21lbnQiLCJTdHJpY3RNb2RlIiwiU3VzcGVuc2UiLCJjbG9uZUVsZW1lbnQiLCJjcmVhdGVGYWN0b3J5IiwiaXNWYWxpZEVsZW1lbnQiLCJ2ZXJzaW9uIiwidW5zdGFibGVfQ29uY3VycmVudE1vZGUiLCJ1bnN0YWJsZV9Qcm9maWxlciIsIl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEIiwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlciIsIlJlYWN0Q3VycmVudE93bmVyIiwiZGVmYXVsdCIsImhhIiwiaWEiLCJvbkVycm9yIiwiamEiLCJsYSIsIm1hIiwibmEiLCJvYSIsImV4dHJhY3RFdmVudHMiLCJldmVudFR5cGVzIiwicGEiLCJwaGFzZWRSZWdpc3RyYXRpb25OYW1lcyIsInFhIiwicmVnaXN0cmF0aW9uTmFtZSIsInJhIiwic2EiLCJkZXBlbmRlbmNpZXMiLCJ0YSIsInVhIiwidmEiLCJ3YSIsImN1cnJlbnRUYXJnZXQiLCJrYSIsInhhIiwieWEiLCJ6YSIsIkFhIiwiX2Rpc3BhdGNoTGlzdGVuZXJzIiwiX2Rpc3BhdGNoSW5zdGFuY2VzIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJpc1BlcnNpc3RlbnQiLCJyZWxlYXNlIiwiQmEiLCJpbmplY3RFdmVudFBsdWdpbk9yZGVyIiwiaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lIiwiQ2EiLCJzdGF0ZU5vZGUiLCJkaXNhYmxlZCIsIkRhIiwiRWEiLCJyYW5kb20iLCJGYSIsIkdhIiwiSGEiLCJJYSIsIkphIiwiS2EiLCJMYSIsInJldHVybiIsIk1hIiwiZGlzcGF0Y2hDb25maWciLCJOYSIsIl90YXJnZXRJbnN0IiwiT2EiLCJQYSIsIlFhIiwiUmEiLCJTYSIsIlRhIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiVWEiLCJWYSIsIldhIiwiYW5pbWF0aW9uIiwidHJhbnNpdGlvbiIsIlhhIiwiWWEiLCJaYSIsIiRhIiwiYWIiLCJiYiIsImNiIiwiZGIiLCJlYiIsImZiIiwiZ2IiLCJuYXRpdmVFdmVudCIsIkludGVyZmFjZSIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsImliIiwiZXZlbnRQb29sIiwiamIiLCJkZXN0cnVjdG9yIiwiaGIiLCJnZXRQb29sZWQiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJEYXRlIiwibm93IiwiaXNUcnVzdGVkIiwiZXh0ZW5kIiwia2IiLCJsYiIsIm1iIiwibmIiLCJvYiIsImRvY3VtZW50TW9kZSIsInBiIiwicWIiLCJyYiIsInNiIiwiYmVmb3JlSW5wdXQiLCJidWJibGVkIiwiY2FwdHVyZWQiLCJjb21wb3NpdGlvbkVuZCIsImNvbXBvc2l0aW9uU3RhcnQiLCJjb21wb3NpdGlvblVwZGF0ZSIsInRiIiwidWIiLCJrZXlDb2RlIiwidmIiLCJkZXRhaWwiLCJ3YiIsInpiIiwibG9jYWxlIiwid2hpY2giLCJ4YiIsImN0cmxLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwiY2hhciIsInliIiwiQWIiLCJCYiIsIkNiIiwiRGIiLCJFYiIsIkZiIiwiR2IiLCJIYiIsIkliIiwiSmIiLCJLYiIsIkxiIiwiY29sb3IiLCJkYXRlIiwiZGF0ZXRpbWUiLCJkYXRldGltZS1sb2NhbCIsImVtYWlsIiwibW9udGgiLCJudW1iZXIiLCJwYXNzd29yZCIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidGV4dCIsInRpbWUiLCJ1cmwiLCJ3ZWVrIiwiTWIiLCJub2RlTmFtZSIsIk5iIiwic3JjRWxlbWVudCIsImNvcnJlc3BvbmRpbmdVc2VFbGVtZW50Iiwibm9kZVR5cGUiLCJPYiIsIlBiIiwiUmIiLCJfdmFsdWVUcmFja2VyIiwiZ2V0VmFsdWUiLCJzZXRWYWx1ZSIsInN0b3BUcmFja2luZyIsIlFiIiwiU2IiLCJjaGVja2VkIiwiVGIiLCJVYiIsIlZiIiwiV2IiLCJYYiIsIlliIiwiWmIiLCIkYiIsImFjIiwiYmMiLCJjYyIsImRjIiwiZWMiLCJmYyIsImdjIiwiaGMiLCJpYyIsImpjIiwiX2RlYnVnT3duZXIiLCJfZGVidWdTb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJrYyIsImxjIiwibWMiLCJhY2NlcHRzQm9vbGVhbnMiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwicmMiLCJzYyIsInRjIiwicGMiLCJxYyIsIm9jIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlTlMiLCJ1YyIsInZjIiwiZGVmYXVsdENoZWNrZWQiLCJkZWZhdWx0VmFsdWUiLCJfd3JhcHBlclN0YXRlIiwiaW5pdGlhbENoZWNrZWQiLCJ3YyIsImluaXRpYWxWYWx1ZSIsImNvbnRyb2xsZWQiLCJ4YyIsInljIiwiemMiLCJBYyIsIm93bmVyRG9jdW1lbnQiLCJhY3RpdmVFbGVtZW50IiwiQmMiLCJjaGFuZ2UiLCJDYyIsIkRjIiwiRWMiLCJGYyIsIkdjIiwiSGMiLCJJYyIsIkpjIiwiZGV0YWNoRXZlbnQiLCJLYyIsIkxjIiwiYXR0YWNoRXZlbnQiLCJNYyIsIk5jIiwiT2MiLCJQYyIsIl9pc0lucHV0RXZlbnRTdXBwb3J0ZWQiLCJRYyIsInZpZXciLCJSYyIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJTYyIsImdldE1vZGlmaWVyU3RhdGUiLCJUYyIsIlVjIiwiVmMiLCJXYyIsIlhjIiwiWWMiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsInNoaWZ0S2V5IiwiYnV0dG9uIiwiYnV0dG9ucyIsInJlbGF0ZWRUYXJnZXQiLCJmcm9tRWxlbWVudCIsIm1vdmVtZW50WCIsIm1vdmVtZW50WSIsIlpjIiwicG9pbnRlcklkIiwid2lkdGgiLCJoZWlnaHQiLCJwcmVzc3VyZSIsInRhbmdlbnRpYWxQcmVzc3VyZSIsInRpbHRYIiwidGlsdFkiLCJ0d2lzdCIsInBvaW50ZXJUeXBlIiwiaXNQcmltYXJ5IiwiJGMiLCJtb3VzZUVudGVyIiwibW91c2VMZWF2ZSIsInBvaW50ZXJFbnRlciIsInBvaW50ZXJMZWF2ZSIsImFkIiwiZGVmYXVsdFZpZXciLCJwYXJlbnRXaW5kb3ciLCJhbHRlcm5hdGUiLCJiZCIsImNkIiwiZGQiLCJlZCIsImVmZmVjdFRhZyIsImZkIiwiaGQiLCJjaGlsZCIsInNpYmxpbmciLCJnZCIsImFuaW1hdGlvbk5hbWUiLCJlbGFwc2VkVGltZSIsInBzZXVkb0VsZW1lbnQiLCJqZCIsImNsaXBib2FyZERhdGEiLCJrZCIsImxkIiwiY2hhckNvZGUiLCJtZCIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJuZCIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJvZCIsImxvY2F0aW9uIiwicGQiLCJkYXRhVHJhbnNmZXIiLCJxZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJyZCIsInNkIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCJ0ZCIsInVkIiwidmQiLCJ3ZCIsImlzSW50ZXJhY3RpdmUiLCJ4ZCIsImlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZSIsInlkIiwiemQiLCJBZCIsInRhcmdldEluc3QiLCJhbmNlc3RvcnMiLCJjb250YWluZXJJbmZvIiwidG9wTGV2ZWxUeXBlIiwiQmQiLCJDZCIsIkRkIiwiYWRkRXZlbnRMaXN0ZW5lciIsIkVkIiwiRmQiLCJHZCIsIkhkIiwiSWQiLCJKZCIsImJvZHkiLCJLZCIsImZpcnN0Q2hpbGQiLCJMZCIsIm5vZGUiLCJOZCIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiT2QiLCJjb250ZW50RWRpdGFibGUiLCJRZCIsImZvY3VzZWRFbGVtIiwic2VsZWN0aW9uUmFuZ2UiLCJNZCIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJkb2N1bWVudEVsZW1lbnQiLCJzdGFydCIsInNlbGVjdGlvblN0YXJ0Iiwic2VsZWN0aW9uRW5kIiwibWluIiwiZ2V0U2VsZWN0aW9uIiwicmFuZ2VDb3VudCIsImFuY2hvck5vZGUiLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsInNldEVuZCIsImVsZW1lbnQiLCJsZWZ0Iiwic2Nyb2xsTGVmdCIsInRvcCIsInNjcm9sbFRvcCIsImZvY3VzIiwiUmQiLCJTZCIsInNlbGVjdCIsIlRkIiwiVWQiLCJWZCIsIldkIiwiWGQiLCJZZCIsIm9uU2VsZWN0IiwiJGQiLCJaZCIsInNlbGVjdGVkIiwiZGVmYXVsdFNlbGVjdGVkIiwiU2ltcGxlRXZlbnRQbHVnaW4iLCJFbnRlckxlYXZlRXZlbnRQbHVnaW4iLCJDaGFuZ2VFdmVudFBsdWdpbiIsIlNlbGVjdEV2ZW50UGx1Z2luIiwiQmVmb3JlSW5wdXRFdmVudFBsdWdpbiIsImh0bWwiLCJtYXRobWwiLCJzdmciLCJuYW1lc3BhY2VVUkkiLCJpbm5lckhUTUwiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwibGFzdENoaWxkIiwibm9kZVZhbHVlIiwiZ3JpZEFyZWEiLCJsaW5lQ2xhbXAiLCJzZXRQcm9wZXJ0eSIsIm1lbnVpdGVtIiwiYXJlYSIsImJhc2UiLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJpbnB1dCIsImtleWdlbiIsImxpbmsiLCJtZXRhIiwicGFyYW0iLCJ0cmFjayIsIndiciIsImlzIiwiYmx1ciIsImF1dG9Gb2N1cyIsInNldFRpbWVvdXQiLCJjbGVhclRpbWVvdXQiLCJ1bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrIiwidW5zdGFibGVfY2FuY2VsQ2FsbGJhY2siLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJnZXRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dCIsImVsZW1lbnRUeXBlIiwicGVuZGluZ1Byb3BzIiwiY29udGV4dERlcGVuZGVuY2llcyIsIm1lbW9pemVkU3RhdGUiLCJ1cGRhdGVRdWV1ZSIsIm1lbW9pemVkUHJvcHMiLCJsYXN0RWZmZWN0IiwiZmlyc3RFZmZlY3QiLCJuZXh0RWZmZWN0IiwiY2hpbGRFeHBpcmF0aW9uVGltZSIsImV4cGlyYXRpb25UaW1lIiwiWmUiLCJhZiIsImJmIiwicGVuZGluZ0NoaWxkcmVuIiwiaW1wbGVtZW50YXRpb24iLCJjZiIsImRpZEVycm9yIiwiZWFybGllc3RQZW5kaW5nVGltZSIsImxhdGVzdFBlbmRpbmdUaW1lIiwiZGYiLCJmZiIsImxhdGVzdFBpbmdlZFRpbWUiLCJlYXJsaWVzdFN1c3BlbmRlZFRpbWUiLCJsYXRlc3RTdXNwZW5kZWRUaW1lIiwiZ2YiLCJuZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbiIsImpmIiwia2YiLCJiYXNlU3RhdGUiLCJ0ZiIsIl9yZWFjdEludGVybmFsRmliZXIiLCJsZiIsIm5mIiwibWYiLCJwYXlsb2FkIiwiY2FsbGJhY2siLCJvZiIsInBmIiwicWYiLCJyZiIsInNmIiwidWYiLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJ2ZiIsImNvbnRleHRUeXBlIiwic3RhdGUiLCJ3ZiIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsInhmIiwieWYiLCJnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnREaWRNb3VudCIsInpmIiwiQWYiLCJfc3RyaW5nUmVmIiwiQmYiLCJDZiIsIk1hcCIsImRlbGV0ZSIsIkRmIiwiRWYiLCJGZiIsIkdmIiwiSGYiLCJJZiIsIkpmIiwidGFnTmFtZSIsIktmIiwiTGYiLCJNZiIsIk5mIiwiT2YiLCJQZiIsIlFmIiwiUmYiLCJTZiIsIlRmIiwiVWYiLCJWZiIsIldmIiwiWGYiLCJZZiIsIlpmIiwiJGYiLCJhZyIsImJnIiwiY2ciLCJkZyIsImVnIiwiZmciLCJnZyIsImhnIiwiaWciLCJqZyIsImtnIiwibGciLCJtZyIsInF1ZXVlIiwiYmFzZVVwZGF0ZSIsIm5nIiwib2ciLCJwZyIsImRpc3BhdGNoIiwiYWN0aW9uIiwicWciLCJsYXN0IiwiZWFnZXJSZWR1Y2VyIiwiZWFnZXJTdGF0ZSIsInJnIiwiZGVzdHJveSIsImRlcHMiLCJzZyIsInRnIiwidWciLCJ2ZyIsIndnIiwicmVhZENvbnRleHQiLCJ4ZyIsInlnIiwiemciLCJBZyIsIkJnIiwiQ2ciLCJEZyIsIkVnIiwiRmciLCJHZyIsIkhnIiwiSWciLCJKZyIsIktnIiwiTGciLCJNZyIsIk5nIiwiT2ciLCJQZyIsIlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudERpZFVwZGF0ZSIsIlFnIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwiUmciLCJwZW5kaW5nQ29udGV4dCIsIlNnIiwidGltZWRPdXRBdCIsImZhbGxiYWNrIiwiVGciLCJVZyIsInRoZW4iLCJoZiIsImh5ZHJhdGUiLCJoaWRkZW4iLCJmaXJzdCIsIm9ic2VydmVkQml0cyIsInVuc3RhYmxlX29ic2VydmVkQml0cyIsIlZnIiwiV2ciLCJYZyIsIllnIiwiWmciLCIkZyIsImFoIiwiYmgiLCJmaXJzdFVwZGF0ZSIsImxhc3RVcGRhdGUiLCJmaXJzdENhcHR1cmVkVXBkYXRlIiwibGFzdENhcHR1cmVkVXBkYXRlIiwiZmlyc3RDYXB0dXJlZEVmZmVjdCIsImxhc3RDYXB0dXJlZEVmZmVjdCIsImNoIiwiZGgiLCJlaCIsImZoIiwiZ2giLCJoaCIsImloIiwiamgiLCJzdGFjayIsImtoIiwibGgiLCJtaCIsIm5oIiwib2giLCJvbkNsaWNrIiwib25jbGljayIsInBoIiwiV2Vha1NldCIsInFoIiwicmgiLCJzaCIsInRoIiwidmgiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsIndoIiwieGgiLCJ5aCIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJ6aCIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJkaXNwbGF5IiwidWgiLCJoaSIsIlhoIiwiaGFzIiwiYWRkIiwiQmgiLCJXZWFrTWFwIiwiQ2giLCJEaCIsIkVoIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJGaCIsImNvbXBvbmVudFN0YWNrIiwiR2giLCJIaCIsIkloIiwiSmgiLCJLaCIsIkxoIiwiTWgiLCJOaCIsIk9oIiwiUGgiLCJRaCIsIlJoIiwiU2giLCJUaCIsIlVoIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJWaCIsIlpoIiwicGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lIiwiZWYiLCJQZCIsIlloIiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJmaW5pc2hlZFdvcmsiLCIkaCIsImFpIiwiY3JlYXRlRWxlbWVudE5TIiwiYmkiLCJjaSIsImRpIiwibWF4RHVyYXRpb24iLCJwaW5nQ2FjaGUiLCJlaSIsImZpIiwidW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwidW5zdGFibGVfTG93UHJpb3JpdHkiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJnaSIsImlpIiwiamkiLCJraSIsImxpIiwibWkiLCJuaSIsIm9pIiwicGkiLCJxaSIsInJpIiwic2kiLCJ0aSIsInVuc3RhYmxlX25vdyIsInVpIiwidmkiLCJ3aSIsInhpIiwieWkiLCJ6aSIsInRpbWVvdXQiLCJ0aW1lb3V0SGFuZGxlIiwiQmkiLCJDaSIsIm5leHRTY2hlZHVsZWRSb290IiwiRGkiLCJFaSIsInVuc3RhYmxlX3Nob3VsZFlpZWxkIiwiX29uQ29tcGxldGUiLCJGaSIsImZpcnN0QmF0Y2giLCJfZXhwaXJhdGlvblRpbWUiLCJfZGVmZXIiLCJHaSIsIkhpIiwiSWkiLCJKaSIsIktpIiwiTGkiLCJOaSIsIl9yb290IiwiX2NhbGxiYWNrcyIsIl9uZXh0IiwiX2hhc0NoaWxkcmVuIiwiX2RpZENvbXBsZXRlIiwiX2NoaWxkcmVuIiwiT2kiLCJfZGlkQ29tbWl0IiwiX29uQ29tbWl0IiwiUGkiLCJfaW50ZXJuYWxSb290IiwiUWkiLCJTaSIsImxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsImhhc0F0dHJpYnV0ZSIsIlJpIiwiVGkiLCJNaSIsImZvcm0iLCJjb21taXQiLCJ1bm1vdW50IiwiY3JlYXRlQmF0Y2giLCJWaSIsImNyZWF0ZVBvcnRhbCIsImZpbmRET01Ob2RlIiwidW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfY3JlYXRlUG9ydGFsIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9pbnRlcmFjdGl2ZVVwZGF0ZXMiLCJmbHVzaFN5bmMiLCJ1bnN0YWJsZV9jcmVhdGVSb290IiwidW5zdGFibGVfZmx1c2hDb250cm9sbGVkIiwiRXZlbnRzIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsIm9uQ29tbWl0RmliZXJSb290Iiwib25Db21taXRGaWJlclVubW91bnQiLCJvdmVycmlkZVByb3BzIiwiY3VycmVudERpc3BhdGNoZXJSZWYiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsImJ1bmRsZVR5cGUiLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwiV2kiLCJYaSIsInByZXZpb3VzIiwicHJpb3JpdHlMZXZlbCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwicGVyZm9ybWFuY2UiLCJfc2NoZWRNb2NrIiwiTWVzc2FnZUNoYW5uZWwiLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJ1bnN0YWJsZV9uZXh0IiwidW5zdGFibGVfd3JhcENhbGxiYWNrIiwidW5zdGFibGVfY29udGludWVFeGVjdXRpb24iLCJ1bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlIiwiRnVuY3Rpb24iLCJSZWFjdFByb3BUeXBlc1NlY3JldCIsImVtcHR5RnVuY3Rpb24iLCJlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0IiwicmVzZXRXYXJuaW5nQ2FjaGUiLCJzaGltIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwicHJvcEZ1bGxOYW1lIiwic2VjcmV0IiwiZ2V0U2hpbSIsImlzUmVxdWlyZWQiLCJSZWFjdFByb3BUeXBlcyIsImFycmF5IiwiYm9vbCIsInN5bWJvbCIsImFueSIsImFycmF5T2YiLCJpbnN0YW5jZU9mIiwib2JqZWN0T2YiLCJvbmVPZiIsIm9uZU9mVHlwZSIsInNoYXBlIiwiZXhhY3QiLCJjaGVja1Byb3BUeXBlcyIsIlByb3BUeXBlcyIsImNhY2hlZFNldFRpbWVvdXQiLCJjYWNoZWRDbGVhclRpbWVvdXQiLCJkZWZhdWx0U2V0VGltb3V0IiwiZGVmYXVsdENsZWFyVGltZW91dCIsInJ1blRpbWVvdXQiLCJmdW4iLCJjdXJyZW50UXVldWUiLCJkcmFpbmluZyIsInF1ZXVlSW5kZXgiLCJjbGVhblVwTmV4dFRpY2siLCJkcmFpblF1ZXVlIiwicnVuIiwicnVuQ2xlYXJUaW1lb3V0IiwiSXRlbSIsIm5vb3AiLCJuZXh0VGljayIsInRpdGxlIiwiYnJvd3NlciIsImFyZ3YiLCJ2ZXJzaW9ucyIsIm9uIiwiYWRkTGlzdGVuZXIiLCJvbmNlIiwib2ZmIiwicmVtb3ZlTGlzdGVuZXIiLCJyZW1vdmVBbGxMaXN0ZW5lcnMiLCJlbWl0IiwicHJlcGVuZExpc3RlbmVyIiwicHJlcGVuZE9uY2VMaXN0ZW5lciIsImxpc3RlbmVycyIsImJpbmRpbmciLCJjd2QiLCJjaGRpciIsImRpciIsInVtYXNrIiwidHlwZU9mIiwiQXN5bmNNb2RlIiwiQ29uY3VycmVudE1vZGUiLCJDb250ZXh0Q29uc3VtZXIiLCJDb250ZXh0UHJvdmlkZXIiLCJFbGVtZW50IiwiRm9yd2FyZFJlZiIsIkxhenkiLCJNZW1vIiwiUG9ydGFsIiwiUHJvZmlsZXIiLCJpc1ZhbGlkRWxlbWVudFR5cGUiLCJpc0FzeW5jTW9kZSIsImlzQ29uY3VycmVudE1vZGUiLCJpc0NvbnRleHRDb25zdW1lciIsImlzQ29udGV4dFByb3ZpZGVyIiwiaXNFbGVtZW50IiwiaXNGb3J3YXJkUmVmIiwiaXNGcmFnbWVudCIsImlzTGF6eSIsImlzTWVtbyIsImlzUG9ydGFsIiwiaXNQcm9maWxlciIsImlzU3RyaWN0TW9kZSIsImlzU3VzcGVuc2UiLCJhcnIiLCJpc0Fic29sdXRlIiwicGF0aG5hbWUiLCJzcGxpY2VPbmUiLCJsaXN0IiwicmVzb2x2ZV9wYXRobmFtZSIsInRvUGFydHMiLCJmcm9tUGFydHMiLCJpc1RvQWJzIiwiaXNGcm9tQWJzIiwibXVzdEVuZEFicyIsImhhc1RyYWlsaW5nU2xhc2giLCJ1cCIsInBhcnQiLCJ1bnNoaWZ0IiwiYWRkTGVhZGluZ1NsYXNoIiwiaGFzQmFzZW5hbWUiLCJzdHJpcEJhc2VuYW1lIiwic3RyaXBUcmFpbGluZ1NsYXNoIiwiY3JlYXRlUGF0aCIsImhhc2giLCJMb2NhdGlvblV0aWxzX2NyZWF0ZUxvY2F0aW9uIiwiY3VycmVudExvY2F0aW9uIiwiaGFzaEluZGV4Iiwic2VhcmNoSW5kZXgiLCJwYXJzZVBhdGgiLCJkZWNvZGVVUkkiLCJVUklFcnJvciIsImVzX2NyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyIiwicHJvbXB0Iiwic2V0UHJvbXB0IiwibmV4dFByb21wdCIsImJyb3dzZXJfZGVmYXVsdCIsImNvbmZpcm1UcmFuc2l0aW9uVG8iLCJnZXRVc2VyQ29uZmlybWF0aW9uIiwiYXBwZW5kTGlzdGVuZXIiLCJpc0FjdGl2ZSIsImxpc3RlbmVyIiwiaXRlbSIsIm5vdGlmeUxpc3RlbmVycyIsImNhblVzZURPTSIsImV2ZW50IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImdldENvbmZpcm1hdGlvbiIsIm1lc3NhZ2UiLCJjb25maXJtIiwiY3JlYXRlQnJvd3Nlckhpc3RvcnlfdHlwZW9mIiwiY3JlYXRlQnJvd3Nlckhpc3RvcnlfZXh0ZW5kcyIsImdldEhpc3RvcnlTdGF0ZSIsImhpc3RvcnkiLCJlc19jcmVhdGVCcm93c2VySGlzdG9yeSIsImludmFyaWFudF9icm93c2VyX2RlZmF1bHQiLCJnbG9iYWxIaXN0b3J5IiwiY2FuVXNlSGlzdG9yeSIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsIm5lZWRzSGFzaENoYW5nZUxpc3RlbmVyIiwiX3Byb3BzJGZvcmNlUmVmcmVzaCIsImZvcmNlUmVmcmVzaCIsIl9wcm9wcyRnZXRVc2VyQ29uZmlybSIsIl9wcm9wcyRrZXlMZW5ndGgiLCJrZXlMZW5ndGgiLCJiYXNlbmFtZSIsImdldERPTUxvY2F0aW9uIiwiaGlzdG9yeVN0YXRlIiwiX3dpbmRvdyRsb2NhdGlvbiIsImNyZWF0ZUtleSIsInRyYW5zaXRpb25NYW5hZ2VyIiwibmV4dFN0YXRlIiwiaGFuZGxlUG9wU3RhdGUiLCJpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50IiwiaGFuZGxlUG9wIiwiaGFuZGxlSGFzaENoYW5nZSIsImZvcmNlTmV4dFBvcCIsIm9rIiwicmV2ZXJ0UG9wIiwiZnJvbUxvY2F0aW9uIiwidG9Mb2NhdGlvbiIsInRvSW5kZXgiLCJhbGxLZXlzIiwiZnJvbUluZGV4IiwiZGVsdGEiLCJnbyIsImluaXRpYWxMb2NhdGlvbiIsImNyZWF0ZUhyZWYiLCJsaXN0ZW5lckNvdW50IiwiY2hlY2tET01MaXN0ZW5lcnMiLCJpc0Jsb2NrZWQiLCJocmVmIiwicHVzaFN0YXRlIiwicHJldkluZGV4IiwibmV4dEtleXMiLCJyZXBsYWNlU3RhdGUiLCJnb0JhY2siLCJnb0ZvcndhcmQiLCJ1bmJsb2NrIiwibGlzdGVuIiwidW5saXN0ZW4iLCJSb3V0ZXJfZXh0ZW5kcyIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiUm91dGVyX1JvdXRlciIsIl9SZWFjdCRDb21wb25lbnQiLCJSb3V0ZXIiLCJfdGVtcCIsIl9jbGFzc0NhbGxDaGVjayIsImNvbXB1dGVNYXRjaCIsIl9pbmhlcml0cyIsInJvdXRlciIsInBhcmFtcyIsImlzRXhhY3QiLCJyZWFjdF9kZWZhdWx0IiwibmV4dFByb3BzIiwid2FybmluZ19kZWZhdWx0IiwicHJvcF90eXBlc19kZWZhdWx0IiwicmVhY3Rfcm91dGVyX2RvbV9lc19Sb3V0ZXIiLCJCcm93c2VyUm91dGVyX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJCcm93c2VyUm91dGVyX0Jyb3dzZXJSb3V0ZXIiLCJCcm93c2VyUm91dGVyIiwiQnJvd3NlclJvdXRlcl9jbGFzc0NhbGxDaGVjayIsIkJyb3dzZXJSb3V0ZXJfaW5oZXJpdHMiLCJlc19Ccm93c2VyUm91dGVyIiwicGF0dGVybkNhY2hlIiwiY2FjaGVDb3VudCIsImVzX21hdGNoUGF0aCIsInBhcmVudCIsIl9vcHRpb25zIiwiX29wdGlvbnMkZXhhY3QiLCJfb3B0aW9ucyRzdHJpY3QiLCJfb3B0aW9ucyRzZW5zaXRpdmUiLCJfY29tcGlsZVBhdGgiLCJjYWNoZUtleSIsImNvbXBpbGVkUGF0dGVybiIsInBhdGhfdG9fcmVnZXhwX2RlZmF1bHQiLCJtYXRjaFBhdGhfY29tcGlsZVBhdGgiLCJ2YWx1ZXMiLCJyZWR1Y2UiLCJSb3V0ZV9leHRlbmRzIiwiUm91dGVfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIlJvdXRlX2lzRW1wdHlDaGlsZHJlbiIsIlJvdXRlX1JvdXRlIiwiUm91dGUiLCJSb3V0ZV9jbGFzc0NhbGxDaGVjayIsIlJvdXRlX2luaGVyaXRzIiwiY29tcHV0ZWRNYXRjaCIsImNvbXBvbmVudCIsIm5leHRDb250ZXh0IiwiX2NvbnRleHQkcm91dGVyIiwic3RhdGljQ29udGV4dCIsInJlYWN0X3JvdXRlcl9kb21fZXNfUm91dGUiLCJMaW5rX2V4dGVuZHMiLCJMaW5rX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJpc01vZGlmaWVkRXZlbnQiLCJMaW5rX0xpbmsiLCJMaW5rIiwiTGlua19jbGFzc0NhbGxDaGVjayIsImhhbmRsZUNsaWNrIiwiX3RoaXMkcHJvcHMiLCJMaW5rX2luaGVyaXRzIiwiaW5uZXJSZWYiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJlc19MaW5rIiwiSGVhZGVyIiwiSGVhZGVyV3JhcHBlciIsIkhlYWRlck5hdiIsImRpdiIsIl90ZW1wbGF0ZU9iamVjdCIsIl90ZW1wbGF0ZU9iamVjdDIiLCJIb21lIiwiSG9tZVdyYXBwZXIiLCJIb21lX3RlbXBsYXRlT2JqZWN0IiwiVEVBTVMiLCJzcG9ydCIsImVtb2ppIiwiVGVhbSIsInRlYW0iLCJmaW5kIiwiVGVhbVdyYXBwZXIiLCJUZWFtX3RlbXBsYXRlT2JqZWN0IiwiVGVhbXMiLCJUZWFtc1dyYXBwZXIiLCJUZWFtc05hdiIsIlRlYW1zX3RlbXBsYXRlT2JqZWN0IiwiVGVhbXNfdGVtcGxhdGVPYmplY3QyIiwiQXBwQ29udGFpbmVyIiwiQXBwX3RlbXBsYXRlT2JqZWN0IiwiQXBwIiwiSGVhZGVyX0hlYWRlciIsInNyY19BcHAiLCJnZXRFbGVtZW50QnlJZCJdLCJtYXBwaW5ncyI6ImFBQ0EsSUFBQUEsRUFBQSxHQUdBLFNBQUFDLEVBQUFDLEdBR0EsR0FBQUYsRUFBQUUsR0FDQSxPQUFBRixFQUFBRSxHQUFBQyxRQUdBLElBQUFDLEVBQUFKLEVBQUFFLEdBQUEsQ0FDQUcsRUFBQUgsRUFDQUksR0FBQSxFQUNBSCxRQUFBLElBVUEsT0FOQUksRUFBQUwsR0FBQU0sS0FBQUosRUFBQUQsUUFBQUMsSUFBQUQsUUFBQUYsR0FHQUcsRUFBQUUsR0FBQSxFQUdBRixFQUFBRCxRQUtBRixFQUFBUSxFQUFBRixFQUdBTixFQUFBUyxFQUFBVixFQUdBQyxFQUFBVSxFQUFBLFNBQUFSLEVBQUFTLEVBQUFDLEdBQ0FaLEVBQUFhLEVBQUFYLEVBQUFTLElBQ0FHLE9BQUFDLGVBQUFiLEVBQUFTLEVBQUEsQ0FBMENLLFlBQUEsRUFBQUMsSUFBQUwsS0FLMUNaLEVBQUFrQixFQUFBLFNBQUFoQixHQUNBLG9CQUFBaUIsZUFBQUMsYUFDQU4sT0FBQUMsZUFBQWIsRUFBQWlCLE9BQUFDLFlBQUEsQ0FBd0RDLE1BQUEsV0FFeERQLE9BQUFDLGVBQUFiLEVBQUEsY0FBaURtQixPQUFBLEtBUWpEckIsRUFBQXNCLEVBQUEsU0FBQUQsRUFBQUUsR0FFQSxHQURBLEVBQUFBLElBQUFGLEVBQUFyQixFQUFBcUIsSUFDQSxFQUFBRSxFQUFBLE9BQUFGLEVBQ0EsS0FBQUUsR0FBQSxpQkFBQUYsUUFBQUcsV0FBQSxPQUFBSCxFQUNBLElBQUFJLEVBQUFYLE9BQUFZLE9BQUEsTUFHQSxHQUZBMUIsRUFBQWtCLEVBQUFPLEdBQ0FYLE9BQUFDLGVBQUFVLEVBQUEsV0FBeUNULFlBQUEsRUFBQUssVUFDekMsRUFBQUUsR0FBQSxpQkFB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QyxJQUFWaUIsTUFFWkQsR0FBV2g2QyxJQUFPZzVDLElBQVZrQiwyVkNyQ2QsSUFZTUMsR0FBZW42QyxJQUFPZzVDLElBQVZvQixNQVNIQyxHQXJCSCxrQkFDVjNFLEVBQUE3cEQsRUFBQW1FLGNBQUNtcUQsR0FBRCxLQUNFekUsRUFBQTdwRCxFQUFBbUUsY0FBQ29tRCxFQUFELEtBQ0VWLEVBQUE3cEQsRUFBQW1FLGNBQUEsV0FDRTBsRCxFQUFBN3BELEVBQUFtRSxjQUFDc3FELEdBQUQsTUFDQTVFLEVBQUE3cEQsRUFBQW1FLGNBQUNnb0QsRUFBRCxDQUFPbk4sT0FBSyxFQUFDaitCLEtBQUssSUFBSWdyQyxVQUFXdUIsS0FDakN6RCxFQUFBN3BELEVBQUFtRSxjQUFDZ29ELEVBQUQsQ0FBT3ByQyxLQUFLLFNBQVNnckMsVUFBV2tDLFNDVHhDei9DLGlCQUFPcTdDLEVBQUE3cEQsRUFBQW1FLGNBQUN1cUQsR0FBRCxNQUFTN3JELFNBQVM4ckQsZUFBZSIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMTYpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKFJlYWN0SXMuaXNFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAyMDE0LTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU2ltaWxhciB0byBpbnZhcmlhbnQgYnV0IG9ubHkgbG9ncyBhIHdhcm5pbmcgaWYgdGhlIGNvbmRpdGlvbiBpcyBub3QgbWV0LlxuICogVGhpcyBjYW4gYmUgdXNlZCB0byBsb2cgaXNzdWVzIGluIGRldmVsb3BtZW50IGVudmlyb25tZW50cyBpbiBjcml0aWNhbFxuICogcGF0aHMuIFJlbW92aW5nIHRoZSBsb2dnaW5nIGNvZGUgZm9yIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzIHdpbGwga2VlcCB0aGVcbiAqIHNhbWUgbG9naWMgYW5kIGZvbGxvdyB0aGUgc2FtZSBjb2RlIHBhdGhzLlxuICovXG5cbnZhciB3YXJuaW5nID0gZnVuY3Rpb24oKSB7fTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgd2FybmluZyA9IGZ1bmN0aW9uKGNvbmRpdGlvbiwgZm9ybWF0LCBhcmdzKSB7XG4gICAgdmFyIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgYXJncyA9IG5ldyBBcnJheShsZW4gPiAyID8gbGVuIC0gMiA6IDApO1xuICAgIGZvciAodmFyIGtleSA9IDI7IGtleSA8IGxlbjsga2V5KyspIHtcbiAgICAgIGFyZ3Nba2V5IC0gMl0gPSBhcmd1bWVudHNba2V5XTtcbiAgICB9XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdgd2FybmluZyhjb25kaXRpb24sIGZvcm1hdCwgLi4uYXJncylgIHJlcXVpcmVzIGEgd2FybmluZyAnICtcbiAgICAgICAgJ21lc3NhZ2UgYXJndW1lbnQnXG4gICAgICApO1xuICAgIH1cblxuICAgIGlmIChmb3JtYXQubGVuZ3RoIDwgMTAgfHwgKC9eW3NcXFddKiQvKS50ZXN0KGZvcm1hdCkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ1RoZSB3YXJuaW5nIGZvcm1hdCBzaG91bGQgYmUgYWJsZSB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzICcgK1xuICAgICAgICAnd2FybmluZy4gUGxlYXNlLCB1c2UgYSBtb3JlIGRlc2NyaXB0aXZlIGZvcm1hdCB0aGFuOiAnICsgZm9ybWF0XG4gICAgICApO1xuICAgIH1cblxuICAgIGlmICghY29uZGl0aW9uKSB7XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgdmFyIG1lc3NhZ2UgPSAnV2FybmluZzogJyArXG4gICAgICAgIGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gYXJnc1thcmdJbmRleCsrXTtcbiAgICAgICAgfSk7XG4gICAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgICB9XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IHlvdSBjYW4gdXNlIHRoaXMgc3RhY2tcbiAgICAgICAgLy8gdG8gZmluZCB0aGUgY2FsbHNpdGUgdGhhdCBjYXVzZWQgdGhpcyB3YXJuaW5nIHRvIGZpcmUuXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICAgIH0gY2F0Y2goeCkge31cbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gd2FybmluZztcbiIsImltcG9ydCBTdHlsaXMgZnJvbSAnc3R5bGlzL3N0eWxpcy5taW4nO1xuaW1wb3J0IF9pbnNlcnRSdWxlUGx1Z2luIGZyb20gJ3N0eWxpcy1ydWxlLXNoZWV0JztcbmltcG9ydCBSZWFjdCwgeyBjbG9uZUVsZW1lbnQsIGNyZWF0ZUNvbnRleHQsIENvbXBvbmVudCwgY3JlYXRlRWxlbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1bml0bGVzcyBmcm9tICdAZW1vdGlvbi91bml0bGVzcyc7XG5pbXBvcnQgeyBpc0VsZW1lbnQsIGlzVmFsaWRFbGVtZW50VHlwZSwgRm9yd2FyZFJlZiB9IGZyb20gJ3JlYWN0LWlzJztcbmltcG9ydCBtZW1vaXplIGZyb20gJ21lbW9pemUtb25lJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCB2YWxpZEF0dHIgZnJvbSAnQGVtb3Rpb24vaXMtcHJvcC12YWxpZCc7XG5cbi8vIFxuXG52YXIgaW50ZXJsZWF2ZSA9IChmdW5jdGlvbiAoc3RyaW5ncywgaW50ZXJwb2xhdGlvbnMpIHtcbiAgdmFyIHJlc3VsdCA9IFtzdHJpbmdzWzBdXTtcblxuICBmb3IgKHZhciBpID0gMCwgbGVuID0gaW50ZXJwb2xhdGlvbnMubGVuZ3RoOyBpIDwgbGVuOyBpICs9IDEpIHtcbiAgICByZXN1bHQucHVzaChpbnRlcnBvbGF0aW9uc1tpXSwgc3RyaW5nc1tpICsgMV0pO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn0pO1xuXG52YXIgX3R5cGVvZiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikge1xuICByZXR1cm4gdHlwZW9mIG9iajtcbn0gOiBmdW5jdGlvbiAob2JqKSB7XG4gIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqO1xufTtcblxudmFyIGNsYXNzQ2FsbENoZWNrID0gZnVuY3Rpb24gKGluc3RhbmNlLCBDb25zdHJ1Y3Rvcikge1xuICBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7XG4gIH1cbn07XG5cbnZhciBjcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTtcbiAgICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICAgIGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTtcbiAgICAgIGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7XG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHtcbiAgICBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpO1xuICAgIGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICAgIHJldHVybiBDb25zdHJ1Y3RvcjtcbiAgfTtcbn0oKTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcblxuICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn07XG5cbnZhciBpbmhlcml0cyA9IGZ1bmN0aW9uIChzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7XG4gIH1cblxuICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHtcbiAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgdmFsdWU6IHN1YkNsYXNzLFxuICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH1cbiAgfSk7XG4gIGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzcztcbn07XG5cbnZhciBvYmplY3RXaXRob3V0UHJvcGVydGllcyA9IGZ1bmN0aW9uIChvYmosIGtleXMpIHtcbiAgdmFyIHRhcmdldCA9IHt9O1xuXG4gIGZvciAodmFyIGkgaW4gb2JqKSB7XG4gICAgaWYgKGtleXMuaW5kZXhPZihpKSA+PSAwKSBjb250aW51ZTtcbiAgICBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGkpKSBjb250aW51ZTtcbiAgICB0YXJnZXRbaV0gPSBvYmpbaV07XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufTtcblxudmFyIHBvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gPSBmdW5jdGlvbiAoc2VsZiwgY2FsbCkge1xuICBpZiAoIXNlbGYpIHtcbiAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7XG4gIH1cblxuICByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjtcbn07XG5cbi8vIFxudmFyIGlzUGxhaW5PYmplY3QgPSAoZnVuY3Rpb24gKHgpIHtcbiAgcmV0dXJuICh0eXBlb2YgeCA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YoeCkpID09PSAnb2JqZWN0JyAmJiB4LmNvbnN0cnVjdG9yID09PSBPYmplY3Q7XG59KTtcblxuLy8gXG52YXIgRU1QVFlfQVJSQVkgPSBPYmplY3QuZnJlZXplKFtdKTtcbnZhciBFTVBUWV9PQkpFQ1QgPSBPYmplY3QuZnJlZXplKHt9KTtcblxuLy8gXG5mdW5jdGlvbiBpc0Z1bmN0aW9uKHRlc3QpIHtcbiAgcmV0dXJuIHR5cGVvZiB0ZXN0ID09PSAnZnVuY3Rpb24nO1xufVxuXG4vLyBcblxuZnVuY3Rpb24gZ2V0Q29tcG9uZW50TmFtZSh0YXJnZXQpIHtcbiAgcmV0dXJuIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8gdHlwZW9mIHRhcmdldCA9PT0gJ3N0cmluZycgJiYgdGFyZ2V0IDogZmFsc2UpIHx8IHRhcmdldC5kaXNwbGF5TmFtZSB8fCB0YXJnZXQubmFtZSB8fCAnQ29tcG9uZW50Jztcbn1cblxuLy8gXG5mdW5jdGlvbiBpc1N0eWxlZENvbXBvbmVudCh0YXJnZXQpIHtcbiAgcmV0dXJuIHRhcmdldCAmJiB0eXBlb2YgdGFyZ2V0LnN0eWxlZENvbXBvbmVudElkID09PSAnc3RyaW5nJztcbn1cblxuLy8gXG5cbnZhciBTQ19BVFRSID0gdHlwZW9mIHByb2Nlc3MgIT09ICd1bmRlZmluZWQnICYmIHByb2Nlc3MuZW52LlNDX0FUVFIgfHwgJ2RhdGEtc3R5bGVkJztcblxudmFyIFNDX1ZFUlNJT05fQVRUUiA9ICdkYXRhLXN0eWxlZC12ZXJzaW9uJztcblxudmFyIFNDX1NUUkVBTV9BVFRSID0gJ2RhdGEtc3R5bGVkLXN0cmVhbWVkJztcblxudmFyIElTX0JST1dTRVIgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiAnSFRNTEVsZW1lbnQnIGluIHdpbmRvdztcblxudmFyIERJU0FCTEVfU1BFRURZID0gdHlwZW9mIFNDX0RJU0FCTEVfU1BFRURZID09PSAnYm9vbGVhbicgJiYgU0NfRElTQUJMRV9TUEVFRFkgfHwgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJztcblxuLy8gU2hhcmVkIGVtcHR5IGV4ZWN1dGlvbiBjb250ZXh0IHdoZW4gZ2VuZXJhdGluZyBzdGF0aWMgc3R5bGVzXG52YXIgU1RBVElDX0VYRUNVVElPTl9DT05URVhUID0ge307XG5cbi8vIFxuXG5cbi8qKlxuICogUGFyc2UgZXJyb3JzLm1kIGFuZCB0dXJuIGl0IGludG8gYSBzaW1wbGUgaGFzaCBvZiBjb2RlOiBtZXNzYWdlXG4gKi9cbnZhciBFUlJPUlMgPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8ge1xuICBcIjFcIjogXCJDYW5ub3QgY3JlYXRlIHN0eWxlZC1jb21wb25lbnQgZm9yIGNvbXBvbmVudDogJXMuXFxuXFxuXCIsXG4gIFwiMlwiOiBcIkNhbid0IGNvbGxlY3Qgc3R5bGVzIG9uY2UgeW91J3ZlIGNvbnN1bWVkIGEgYFNlcnZlclN0eWxlU2hlZXRgJ3Mgc3R5bGVzISBgU2VydmVyU3R5bGVTaGVldGAgaXMgYSBvbmUgb2ZmIGluc3RhbmNlIGZvciBlYWNoIHNlcnZlci1zaWRlIHJlbmRlciBjeWNsZS5cXG5cXG4tIEFyZSB5b3UgdHJ5aW5nIHRvIHJldXNlIGl0IGFjcm9zcyByZW5kZXJzP1xcbi0gQXJlIHlvdSBhY2NpZGVudGFsbHkgY2FsbGluZyBjb2xsZWN0U3R5bGVzIHR3aWNlP1xcblxcblwiLFxuICBcIjNcIjogXCJTdHJlYW1pbmcgU1NSIGlzIG9ubHkgc3VwcG9ydGVkIGluIGEgTm9kZS5qcyBlbnZpcm9ubWVudDsgUGxlYXNlIGRvIG5vdCB0cnkgdG8gY2FsbCB0aGlzIG1ldGhvZCBpbiB0aGUgYnJvd3Nlci5cXG5cXG5cIixcbiAgXCI0XCI6IFwiVGhlIGBTdHlsZVNoZWV0TWFuYWdlcmAgZXhwZWN0cyBhIHZhbGlkIHRhcmdldCBvciBzaGVldCBwcm9wIVxcblxcbi0gRG9lcyB0aGlzIGVycm9yIG9jY3VyIG9uIHRoZSBjbGllbnQgYW5kIGlzIHlvdXIgdGFyZ2V0IGZhbHN5P1xcbi0gRG9lcyB0aGlzIGVycm9yIG9jY3VyIG9uIHRoZSBzZXJ2ZXIgYW5kIGlzIHRoZSBzaGVldCBmYWxzeT9cXG5cXG5cIixcbiAgXCI1XCI6IFwiVGhlIGNsb25lIG1ldGhvZCBjYW5ub3QgYmUgdXNlZCBvbiB0aGUgY2xpZW50IVxcblxcbi0gQXJlIHlvdSBydW5uaW5nIGluIGEgY2xpZW50LWxpa2UgZW52aXJvbm1lbnQgb24gdGhlIHNlcnZlcj9cXG4tIEFyZSB5b3UgdHJ5aW5nIHRvIHJ1biBTU1Igb24gdGhlIGNsaWVudD9cXG5cXG5cIixcbiAgXCI2XCI6IFwiVHJ5aW5nIHRvIGluc2VydCBhIG5ldyBzdHlsZSB0YWcsIGJ1dCB0aGUgZ2l2ZW4gTm9kZSBpcyB1bm1vdW50ZWQhXFxuXFxuLSBBcmUgeW91IHVzaW5nIGEgY3VzdG9tIHRhcmdldCB0aGF0IGlzbid0IG1vdW50ZWQ/XFxuLSBEb2VzIHlvdXIgZG9jdW1lbnQgbm90IGhhdmUgYSB2YWxpZCBoZWFkIGVsZW1lbnQ/XFxuLSBIYXZlIHlvdSBhY2NpZGVudGFsbHkgcmVtb3ZlZCBhIHN0eWxlIHRhZyBtYW51YWxseT9cXG5cXG5cIixcbiAgXCI3XCI6IFwiVGhlbWVQcm92aWRlcjogUGxlYXNlIHJldHVybiBhbiBvYmplY3QgZnJvbSB5b3VyIFxcXCJ0aGVtZVxcXCIgcHJvcCBmdW5jdGlvbiwgZS5nLlxcblxcbmBgYGpzXFxudGhlbWU9eygpID0+ICh7fSl9XFxuYGBgXFxuXFxuXCIsXG4gIFwiOFwiOiBcIlRoZW1lUHJvdmlkZXI6IFBsZWFzZSBtYWtlIHlvdXIgXFxcInRoZW1lXFxcIiBwcm9wIGFuIG9iamVjdC5cXG5cXG5cIixcbiAgXCI5XCI6IFwiTWlzc2luZyBkb2N1bWVudCBgPGhlYWQ+YFxcblxcblwiLFxuICBcIjEwXCI6IFwiQ2Fubm90IGZpbmQgYSBTdHlsZVNoZWV0IGluc3RhbmNlLiBVc3VhbGx5IHRoaXMgaGFwcGVucyBpZiB0aGVyZSBhcmUgbXVsdGlwbGUgY29waWVzIG9mIHN0eWxlZC1jb21wb25lbnRzIGxvYWRlZCBhdCBvbmNlLiBDaGVjayBvdXQgdGhpcyBpc3N1ZSBmb3IgaG93IHRvIHRyb3VibGVzaG9vdCBhbmQgZml4IHRoZSBjb21tb24gY2FzZXMgd2hlcmUgdGhpcyBzaXR1YXRpb24gY2FuIGhhcHBlbjogaHR0cHM6Ly9naXRodWIuY29tL3N0eWxlZC1jb21wb25lbnRzL3N0eWxlZC1jb21wb25lbnRzL2lzc3Vlcy8xOTQxI2lzc3VlY29tbWVudC00MTc4NjIwMjFcXG5cXG5cIixcbiAgXCIxMVwiOiBcIl9UaGlzIGVycm9yIHdhcyByZXBsYWNlZCB3aXRoIGEgZGV2LXRpbWUgd2FybmluZywgaXQgd2lsbCBiZSBkZWxldGVkIGZvciB2NCBmaW5hbC5fIFtjcmVhdGVHbG9iYWxTdHlsZV0gcmVjZWl2ZWQgY2hpbGRyZW4gd2hpY2ggd2lsbCBub3QgYmUgcmVuZGVyZWQuIFBsZWFzZSB1c2UgdGhlIGNvbXBvbmVudCB3aXRob3V0IHBhc3NpbmcgY2hpbGRyZW4gZWxlbWVudHMuXFxuXFxuXCIsXG4gIFwiMTJcIjogXCJJdCBzZWVtcyB5b3UgYXJlIGludGVycG9sYXRpbmcgYSBrZXlmcmFtZSBkZWNsYXJhdGlvbiAoJXMpIGludG8gYW4gdW50YWdnZWQgc3RyaW5nLiBUaGlzIHdhcyBzdXBwb3J0ZWQgaW4gc3R5bGVkLWNvbXBvbmVudHMgdjMsIGJ1dCBpcyBub3QgbG9uZ2VyIHN1cHBvcnRlZCBpbiB2NCBhcyBrZXlmcmFtZXMgYXJlIG5vdyBpbmplY3RlZCBvbi1kZW1hbmQuIFBsZWFzZSB3cmFwIHlvdXIgc3RyaW5nIGluIHRoZSBjc3NcXFxcYFxcXFxgIGhlbHBlciAoc2VlIGh0dHBzOi8vd3d3LnN0eWxlZC1jb21wb25lbnRzLmNvbS9kb2NzL2FwaSNjc3MpLCB3aGljaCBlbnN1cmVzIHRoZSBzdHlsZXMgYXJlIGluamVjdGVkIGNvcnJlY3RseS5cXG5cXG5cIixcbiAgXCIxM1wiOiBcIiVzIGlzIG5vdCBhIHN0eWxlZCBjb21wb25lbnQgYW5kIGNhbm5vdCBiZSByZWZlcnJlZCB0byB2aWEgY29tcG9uZW50IHNlbGVjdG9yLiBTZWUgaHR0cHM6Ly93d3cuc3R5bGVkLWNvbXBvbmVudHMuY29tL2RvY3MvYWR2YW5jZWQjcmVmZXJyaW5nLXRvLW90aGVyLWNvbXBvbmVudHMgZm9yIG1vcmUgZGV0YWlscy5cXG5cIlxufSA6IHt9O1xuXG4vKipcbiAqIHN1cGVyIGJhc2ljIHZlcnNpb24gb2Ygc3ByaW50ZlxuICovXG5mdW5jdGlvbiBmb3JtYXQoKSB7XG4gIHZhciBhID0gYXJndW1lbnRzLmxlbmd0aCA8PSAwID8gdW5kZWZpbmVkIDogYXJndW1lbnRzWzBdO1xuICB2YXIgYiA9IFtdO1xuXG4gIGZvciAodmFyIGMgPSAxLCBsZW4gPSBhcmd1bWVudHMubGVuZ3RoOyBjIDwgbGVuOyBjICs9IDEpIHtcbiAgICBiLnB1c2goYXJndW1lbnRzLmxlbmd0aCA8PSBjID8gdW5kZWZpbmVkIDogYXJndW1lbnRzW2NdKTtcbiAgfVxuXG4gIGIuZm9yRWFjaChmdW5jdGlvbiAoZCkge1xuICAgIGEgPSBhLnJlcGxhY2UoLyVbYS16XS8sIGQpO1xuICB9KTtcblxuICByZXR1cm4gYTtcbn1cblxuLyoqXG4gKiBDcmVhdGUgYW4gZXJyb3IgZmlsZSBvdXQgb2YgZXJyb3JzLm1kIGZvciBkZXZlbG9wbWVudCBhbmQgYSBzaW1wbGUgd2ViIGxpbmsgdG8gdGhlIGZ1bGwgZXJyb3JzXG4gKiBpbiBwcm9kdWN0aW9uIG1vZGUuXG4gKi9cblxudmFyIFN0eWxlZENvbXBvbmVudHNFcnJvciA9IGZ1bmN0aW9uIChfRXJyb3IpIHtcbiAgaW5oZXJpdHMoU3R5bGVkQ29tcG9uZW50c0Vycm9yLCBfRXJyb3IpO1xuXG4gIGZ1bmN0aW9uIFN0eWxlZENvbXBvbmVudHNFcnJvcihjb2RlKSB7XG4gICAgY2xhc3NDYWxsQ2hlY2sodGhpcywgU3R5bGVkQ29tcG9uZW50c0Vycm9yKTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBpbnRlcnBvbGF0aW9ucyA9IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGludGVycG9sYXRpb25zW19rZXkgLSAxXSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgdmFyIF90aGlzID0gcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfRXJyb3IuY2FsbCh0aGlzLCAnQW4gZXJyb3Igb2NjdXJyZWQuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vc3R5bGVkLWNvbXBvbmVudHMvc3R5bGVkLWNvbXBvbmVudHMvYmxvYi9tYXN0ZXIvc3JjL3V0aWxzL2Vycm9ycy5tZCMnICsgY29kZSArICcgZm9yIG1vcmUgaW5mb3JtYXRpb24uICcgKyAoaW50ZXJwb2xhdGlvbnMgPyAnQWRkaXRpb25hbCBhcmd1bWVudHM6ICcgKyBpbnRlcnBvbGF0aW9ucy5qb2luKCcsICcpIDogJycpKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBfdGhpcyA9IHBvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX0Vycm9yLmNhbGwodGhpcywgZm9ybWF0LmFwcGx5KHVuZGVmaW5lZCwgW0VSUk9SU1tjb2RlXV0uY29uY2F0KGludGVycG9sYXRpb25zKSkudHJpbSgpKSk7XG4gICAgfVxuICAgIHJldHVybiBwb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzKTtcbiAgfVxuXG4gIHJldHVybiBTdHlsZWRDb21wb25lbnRzRXJyb3I7XG59KEVycm9yKTtcblxuLy8gXG52YXIgU0NfQ09NUE9ORU5UX0lEID0gL15bXlxcU1xcbl0qP1xcL1xcKiBzYy1jb21wb25lbnQtaWQ6XFxzKihcXFMrKVxccytcXCpcXC8vZ207XG5cbnZhciBleHRyYWN0Q29tcHMgPSAoZnVuY3Rpb24gKG1heWJlQ1NTKSB7XG4gIHZhciBjc3MgPSAnJyArIChtYXliZUNTUyB8fCAnJyk7IC8vIERlZmluaXRlbHkgYSBzdHJpbmcsIGFuZCBhIGNsb25lXG4gIHZhciBleGlzdGluZ0NvbXBvbmVudHMgPSBbXTtcbiAgY3NzLnJlcGxhY2UoU0NfQ09NUE9ORU5UX0lELCBmdW5jdGlvbiAobWF0Y2gsIGNvbXBvbmVudElkLCBtYXRjaEluZGV4KSB7XG4gICAgZXhpc3RpbmdDb21wb25lbnRzLnB1c2goeyBjb21wb25lbnRJZDogY29tcG9uZW50SWQsIG1hdGNoSW5kZXg6IG1hdGNoSW5kZXggfSk7XG4gICAgcmV0dXJuIG1hdGNoO1xuICB9KTtcbiAgcmV0dXJuIGV4aXN0aW5nQ29tcG9uZW50cy5tYXAoZnVuY3Rpb24gKF9yZWYsIGkpIHtcbiAgICB2YXIgY29tcG9uZW50SWQgPSBfcmVmLmNvbXBvbmVudElkLFxuICAgICAgICBtYXRjaEluZGV4ID0gX3JlZi5tYXRjaEluZGV4O1xuXG4gICAgdmFyIG5leHRDb21wID0gZXhpc3RpbmdDb21wb25lbnRzW2kgKyAxXTtcbiAgICB2YXIgY3NzRnJvbURPTSA9IG5leHRDb21wID8gY3NzLnNsaWNlKG1hdGNoSW5kZXgsIG5leHRDb21wLm1hdGNoSW5kZXgpIDogY3NzLnNsaWNlKG1hdGNoSW5kZXgpO1xuICAgIHJldHVybiB7IGNvbXBvbmVudElkOiBjb21wb25lbnRJZCwgY3NzRnJvbURPTTogY3NzRnJvbURPTSB9O1xuICB9KTtcbn0pO1xuXG4vLyBcblxudmFyIENPTU1FTlRfUkVHRVggPSAvXlxccypcXC9cXC8uKiQvZ207XG5cbi8vIE5PVEU6IFRoaXMgc3R5bGlzIGluc3RhbmNlIGlzIG9ubHkgdXNlZCB0byBzcGxpdCBydWxlcyBmcm9tIFNTUidkIHN0eWxlIHRhZ3NcbnZhciBzdHlsaXNTcGxpdHRlciA9IG5ldyBTdHlsaXMoe1xuICBnbG9iYWw6IGZhbHNlLFxuICBjYXNjYWRlOiB0cnVlLFxuICBrZXlmcmFtZTogZmFsc2UsXG4gIHByZWZpeDogZmFsc2UsXG4gIGNvbXByZXNzOiBmYWxzZSxcbiAgc2VtaWNvbG9uOiB0cnVlXG59KTtcblxudmFyIHN0eWxpcyA9IG5ldyBTdHlsaXMoe1xuICBnbG9iYWw6IGZhbHNlLFxuICBjYXNjYWRlOiB0cnVlLFxuICBrZXlmcmFtZTogZmFsc2UsXG4gIHByZWZpeDogdHJ1ZSxcbiAgY29tcHJlc3M6IGZhbHNlLFxuICBzZW1pY29sb246IGZhbHNlIC8vIE5PVEU6IFRoaXMgbWVhbnMgXCJhdXRvY29tcGxldGUgbWlzc2luZyBzZW1pY29sb25zXCJcbn0pO1xuXG4vLyBXcmFwIGBpbnNlcnRSdWxlUGx1Z2luIHRvIGJ1aWxkIGEgbGlzdCBvZiBydWxlcyxcbi8vIGFuZCB0aGVuIG1ha2Ugb3VyIG93biBwbHVnaW4gdG8gcmV0dXJuIHRoZSBydWxlcy4gVGhpc1xuLy8gbWFrZXMgaXQgZWFzaWVyIHRvIGhvb2sgaW50byB0aGUgZXhpc3RpbmcgU1NSIGFyY2hpdGVjdHVyZVxuXG52YXIgcGFyc2luZ1J1bGVzID0gW107XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb25zaXN0ZW50LXJldHVyblxudmFyIHJldHVyblJ1bGVzUGx1Z2luID0gZnVuY3Rpb24gcmV0dXJuUnVsZXNQbHVnaW4oY29udGV4dCkge1xuICBpZiAoY29udGV4dCA9PT0gLTIpIHtcbiAgICB2YXIgcGFyc2VkUnVsZXMgPSBwYXJzaW5nUnVsZXM7XG4gICAgcGFyc2luZ1J1bGVzID0gW107XG4gICAgcmV0dXJuIHBhcnNlZFJ1bGVzO1xuICB9XG59O1xuXG52YXIgcGFyc2VSdWxlc1BsdWdpbiA9IF9pbnNlcnRSdWxlUGx1Z2luKGZ1bmN0aW9uIChydWxlKSB7XG4gIHBhcnNpbmdSdWxlcy5wdXNoKHJ1bGUpO1xufSk7XG5cbnZhciBfY29tcG9uZW50SWQgPSB2b2lkIDA7XG52YXIgX3NlbGVjdG9yID0gdm9pZCAwO1xudmFyIF9zZWxlY3RvclJlZ2V4cCA9IHZvaWQgMDtcblxudmFyIHNlbGZSZWZlcmVuY2VSZXBsYWNlciA9IGZ1bmN0aW9uIHNlbGZSZWZlcmVuY2VSZXBsYWNlcihtYXRjaCwgb2Zmc2V0LCBzdHJpbmcpIHtcbiAgaWYgKFxuICAvLyB0aGUgZmlyc3Qgc2VsZi1yZWYgaXMgYWx3YXlzIHVudG91Y2hlZFxuICBvZmZzZXQgPiAwICYmXG4gIC8vIHRoZXJlIHNob3VsZCBiZSBhdCBsZWFzdCB0d28gc2VsZi1yZWZzIHRvIGRvIGEgcmVwbGFjZW1lbnQgKC5iID4gLmIpXG4gIHN0cmluZy5zbGljZSgwLCBvZmZzZXQpLmluZGV4T2YoX3NlbGVjdG9yKSAhPT0gLTEgJiZcbiAgLy8gbm8gY29uc2VjdXRpdmUgc2VsZiByZWZzICguYi5iKTsgdGhhdCBpcyBhIHByZWNlZGVuY2UgYm9vc3QgYW5kIHRyZWF0ZWQgZGlmZmVyZW50bHlcbiAgc3RyaW5nLnNsaWNlKG9mZnNldCAtIF9zZWxlY3Rvci5sZW5ndGgsIG9mZnNldCkgIT09IF9zZWxlY3Rvcikge1xuICAgIHJldHVybiAnLicgKyBfY29tcG9uZW50SWQ7XG4gIH1cblxuICByZXR1cm4gbWF0Y2g7XG59O1xuXG4vKipcbiAqIFdoZW4gd3JpdGluZyBhIHN0eWxlIGxpa2VcbiAqXG4gKiAmICsgJiB7XG4gKiAgIGNvbG9yOiByZWQ7XG4gKiB9XG4gKlxuICogVGhlIHNlY29uZCBhbXBlcnNhbmQgc2hvdWxkIGJlIGEgcmVmZXJlbmNlIHRvIHRoZSBzdGF0aWMgY29tcG9uZW50IGNsYXNzLiBzdHlsaXNcbiAqIGhhcyBubyBrbm93bGVkZ2Ugb2Ygc3RhdGljIGNsYXNzIHNvIHdlIGhhdmUgdG8gaW50ZWxsaWdlbnRseSByZXBsYWNlIHRoZSBiYXNlIHNlbGVjdG9yLlxuICovXG52YXIgc2VsZlJlZmVyZW5jZVJlcGxhY2VtZW50UGx1Z2luID0gZnVuY3Rpb24gc2VsZlJlZmVyZW5jZVJlcGxhY2VtZW50UGx1Z2luKGNvbnRleHQsIF8sIHNlbGVjdG9ycykge1xuICBpZiAoY29udGV4dCA9PT0gMiAmJiBzZWxlY3RvcnMubGVuZ3RoICYmIHNlbGVjdG9yc1swXS5sYXN0SW5kZXhPZihfc2VsZWN0b3IpID4gMCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgIHNlbGVjdG9yc1swXSA9IHNlbGVjdG9yc1swXS5yZXBsYWNlKF9zZWxlY3RvclJlZ2V4cCwgc2VsZlJlZmVyZW5jZVJlcGxhY2VyKTtcbiAgfVxufTtcblxuc3R5bGlzLnVzZShbc2VsZlJlZmVyZW5jZVJlcGxhY2VtZW50UGx1Z2luLCBwYXJzZVJ1bGVzUGx1Z2luLCByZXR1cm5SdWxlc1BsdWdpbl0pO1xuc3R5bGlzU3BsaXR0ZXIudXNlKFtwYXJzZVJ1bGVzUGx1Z2luLCByZXR1cm5SdWxlc1BsdWdpbl0pO1xuXG52YXIgc3BsaXRCeVJ1bGVzID0gZnVuY3Rpb24gc3BsaXRCeVJ1bGVzKGNzcykge1xuICByZXR1cm4gc3R5bGlzU3BsaXR0ZXIoJycsIGNzcyk7XG59O1xuXG5mdW5jdGlvbiBzdHJpbmdpZnlSdWxlcyhydWxlcywgc2VsZWN0b3IsIHByZWZpeCkge1xuICB2YXIgY29tcG9uZW50SWQgPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6ICcmJztcblxuICB2YXIgZmxhdENTUyA9IHJ1bGVzLmpvaW4oJycpLnJlcGxhY2UoQ09NTUVOVF9SRUdFWCwgJycpOyAvLyByZXBsYWNlIEpTIGNvbW1lbnRzXG5cbiAgdmFyIGNzc1N0ciA9IHNlbGVjdG9yICYmIHByZWZpeCA/IHByZWZpeCArICcgJyArIHNlbGVjdG9yICsgJyB7ICcgKyBmbGF0Q1NTICsgJyB9JyA6IGZsYXRDU1M7XG5cbiAgLy8gc3R5bGlzIGhhcyBubyBjb25jZXB0IG9mIHN0YXRlIHRvIGJlIHBhc3NlZCB0byBwbHVnaW5zXG4gIC8vIGJ1dCBzaW5jZSBKUyBpcyBzaW5nbGU9dGhyZWFkZWQsIHdlIGNhbiByZWx5IG9uIHRoYXQgdG8gZW5zdXJlXG4gIC8vIHRoZXNlIHByb3BlcnRpZXMgc3RheSBpbiBzeW5jIHdpdGggdGhlIGN1cnJlbnQgc3R5bGlzIHJ1blxuICBfY29tcG9uZW50SWQgPSBjb21wb25lbnRJZDtcbiAgX3NlbGVjdG9yID0gc2VsZWN0b3I7XG4gIF9zZWxlY3RvclJlZ2V4cCA9IG5ldyBSZWdFeHAoJ1xcXFwnICsgX3NlbGVjdG9yICsgJ1xcXFxiJywgJ2cnKTtcblxuICByZXR1cm4gc3R5bGlzKHByZWZpeCB8fCAhc2VsZWN0b3IgPyAnJyA6IHNlbGVjdG9yLCBjc3NTdHIpO1xufVxuXG4vLyBcbi8qIGVzbGludC1kaXNhYmxlIGNhbWVsY2FzZSwgbm8tdW5kZWYgKi9cblxudmFyIGdldE5vbmNlID0gKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gJ3VuZGVmaW5lZCcgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG59KTtcblxuLy8gXG4vKiBUaGVzZSBhcmUgaGVscGVycyBmb3IgdGhlIFN0eWxlVGFncyB0byBrZWVwIHRyYWNrIG9mIHRoZSBpbmplY3RlZFxuICogcnVsZSBuYW1lcyBmb3IgZWFjaCAoY29tcG9uZW50KSBJRCB0aGF0IHRoZXkncmUga2VlcGluZyB0cmFjayBvZi5cbiAqIFRoZXkncmUgY3J1Y2lhbCBmb3IgZGV0ZWN0aW5nIHdoZXRoZXIgYSBuYW1lIGhhcyBhbHJlYWR5IGJlZW5cbiAqIGluamVjdGVkLlxuICogKFRoaXMgZXhjbHVkZXMgcmVoeWRyYXRlZCBuYW1lcykgKi9cblxuLyogYWRkcyBhIG5ldyBJRDpuYW1lIHBhaXJpbmcgdG8gYSBuYW1lcyBkaWN0aW9uYXJ5ICovXG52YXIgYWRkTmFtZUZvcklkID0gZnVuY3Rpb24gYWRkTmFtZUZvcklkKG5hbWVzLCBpZCwgbmFtZSkge1xuICBpZiAobmFtZSkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgIHZhciBuYW1lc0ZvcklkID0gbmFtZXNbaWRdIHx8IChuYW1lc1tpZF0gPSBPYmplY3QuY3JlYXRlKG51bGwpKTtcbiAgICBuYW1lc0ZvcklkW25hbWVdID0gdHJ1ZTtcbiAgfVxufTtcblxuLyogcmVzZXRzIGFuIElEIGVudGlyZWx5IGJ5IG92ZXJ3cml0aW5nIGl0IGluIHRoZSBkaWN0aW9uYXJ5ICovXG52YXIgcmVzZXRJZE5hbWVzID0gZnVuY3Rpb24gcmVzZXRJZE5hbWVzKG5hbWVzLCBpZCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgbmFtZXNbaWRdID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbn07XG5cbi8qIGZhY3RvcnkgZm9yIGEgbmFtZXMgZGljdGlvbmFyeSBjaGVja2luZyB0aGUgZXhpc3RhbmNlIG9mIGFuIElEOm5hbWUgcGFpcmluZyAqL1xudmFyIGhhc05hbWVGb3JJZCA9IGZ1bmN0aW9uIGhhc05hbWVGb3JJZChuYW1lcykge1xuICByZXR1cm4gZnVuY3Rpb24gKGlkLCBuYW1lKSB7XG4gICAgcmV0dXJuIG5hbWVzW2lkXSAhPT0gdW5kZWZpbmVkICYmIG5hbWVzW2lkXVtuYW1lXTtcbiAgfTtcbn07XG5cbi8qIHN0cmluZ2lmaWVzIG5hbWVzIGZvciB0aGUgaHRtbC9lbGVtZW50IG91dHB1dCAqL1xudmFyIHN0cmluZ2lmeU5hbWVzID0gZnVuY3Rpb24gc3RyaW5naWZ5TmFtZXMobmFtZXMpIHtcbiAgdmFyIHN0ciA9ICcnO1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZ3VhcmQtZm9yLWluXG4gIGZvciAodmFyIGlkIGluIG5hbWVzKSB7XG4gICAgc3RyICs9IE9iamVjdC5rZXlzKG5hbWVzW2lkXSkuam9pbignICcpICsgJyAnO1xuICB9XG4gIHJldHVybiBzdHIudHJpbSgpO1xufTtcblxuLyogY2xvbmVzIHRoZSBuZXN0ZWQgbmFtZXMgZGljdGlvbmFyeSAqL1xudmFyIGNsb25lTmFtZXMgPSBmdW5jdGlvbiBjbG9uZU5hbWVzKG5hbWVzKSB7XG4gIHZhciBjbG9uZSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBndWFyZC1mb3ItaW5cbiAgZm9yICh2YXIgaWQgaW4gbmFtZXMpIHtcbiAgICBjbG9uZVtpZF0gPSBfZXh0ZW5kcyh7fSwgbmFtZXNbaWRdKTtcbiAgfVxuICByZXR1cm4gY2xvbmU7XG59O1xuXG4vLyBcblxuLyogVGhlc2UgYXJlIGhlbHBlcnMgdGhhdCBkZWFsIHdpdGggdGhlIGluc2VydFJ1bGUgKGFrYSBzcGVlZHkpIEFQSVxuICogVGhleSBhcmUgdXNlZCBpbiB0aGUgU3R5bGVUYWdzIGFuZCBzcGVjaWZpY2FsbHkgdGhlIHNwZWVkeSB0YWdcbiAqL1xuXG4vKiByZXRyaWV2ZSBhIHNoZWV0IGZvciBhIGdpdmVuIHN0eWxlIHRhZyAqL1xudmFyIHNoZWV0Rm9yVGFnID0gZnVuY3Rpb24gc2hlZXRGb3JUYWcodGFnKSB7XG4gIC8vICRGbG93Rml4TWVcbiAgaWYgKHRhZy5zaGVldCkgcmV0dXJuIHRhZy5zaGVldDtcblxuICAvKiBGaXJlZm94IHF1aXJrIHJlcXVpcmVzIHVzIHRvIHN0ZXAgdGhyb3VnaCBhbGwgc3R5bGVzaGVldHMgdG8gZmluZCBvbmUgb3duZWQgYnkgdGhlIGdpdmVuIHRhZyAqL1xuICB2YXIgc2l6ZSA9IGRvY3VtZW50LnN0eWxlU2hlZXRzLmxlbmd0aDtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzaXplOyBpICs9IDEpIHtcbiAgICB2YXIgc2hlZXQgPSBkb2N1bWVudC5zdHlsZVNoZWV0c1tpXTtcbiAgICAvLyAkRmxvd0ZpeE1lXG4gICAgaWYgKHNoZWV0Lm93bmVyTm9kZSA9PT0gdGFnKSByZXR1cm4gc2hlZXQ7XG4gIH1cblxuICAvKiB3ZSBzaG91bGQgYWx3YXlzIGJlIGFibGUgdG8gZmluZCBhIHRhZyAqL1xuICB0aHJvdyBuZXcgU3R5bGVkQ29tcG9uZW50c0Vycm9yKDEwKTtcbn07XG5cbi8qIGluc2VydCBhIHJ1bGUgc2FmZWx5IGFuZCByZXR1cm4gd2hldGhlciBpdCB3YXMgYWN0dWFsbHkgaW5qZWN0ZWQgKi9cbnZhciBzYWZlSW5zZXJ0UnVsZSA9IGZ1bmN0aW9uIHNhZmVJbnNlcnRSdWxlKHNoZWV0LCBjc3NSdWxlLCBpbmRleCkge1xuICAvKiBhYm9ydCBlYXJseSBpZiBjc3NSdWxlIHN0cmluZyBpcyBmYWxzeSAqL1xuICBpZiAoIWNzc1J1bGUpIHJldHVybiBmYWxzZTtcblxuICB2YXIgbWF4SW5kZXggPSBzaGVldC5jc3NSdWxlcy5sZW5ndGg7XG5cbiAgdHJ5IHtcbiAgICAvKiB1c2UgaW5zZXJ0UnVsZSBhbmQgY2FwIHBhc3NlZCBpbmRleCB3aXRoIG1heEluZGV4IChubyBvZiBjc3NSdWxlcykgKi9cbiAgICBzaGVldC5pbnNlcnRSdWxlKGNzc1J1bGUsIGluZGV4IDw9IG1heEluZGV4ID8gaW5kZXggOiBtYXhJbmRleCk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8qIGFueSBlcnJvciBpbmRpY2F0ZXMgYW4gaW52YWxpZCBydWxlICovXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59O1xuXG4vKiBkZWxldGVzIGBzaXplYCBydWxlcyBzdGFydGluZyBmcm9tIGByZW1vdmFsSW5kZXhgICovXG52YXIgZGVsZXRlUnVsZXMgPSBmdW5jdGlvbiBkZWxldGVSdWxlcyhzaGVldCwgcmVtb3ZhbEluZGV4LCBzaXplKSB7XG4gIHZhciBsb3dlckJvdW5kID0gcmVtb3ZhbEluZGV4IC0gc2l6ZTtcbiAgZm9yICh2YXIgaSA9IHJlbW92YWxJbmRleDsgaSA+IGxvd2VyQm91bmQ7IGkgLT0gMSkge1xuICAgIHNoZWV0LmRlbGV0ZVJ1bGUoaSk7XG4gIH1cbn07XG5cbi8vIFxuXG4vKiB0aGlzIG1hcmtlciBzZXBhcmF0ZXMgY29tcG9uZW50IHN0eWxlcyBhbmQgaXMgaW1wb3J0YW50IGZvciByZWh5ZHJhdGlvbiAqL1xudmFyIG1ha2VUZXh0TWFya2VyID0gZnVuY3Rpb24gbWFrZVRleHRNYXJrZXIoaWQpIHtcbiAgcmV0dXJuICdcXG4vKiBzYy1jb21wb25lbnQtaWQ6ICcgKyBpZCArICcgKi9cXG4nO1xufTtcblxuLyogYWRkIHVwIGFsbCBudW1iZXJzIGluIGFycmF5IHVwIHVudGlsIGFuZCBpbmNsdWRpbmcgdGhlIGluZGV4ICovXG52YXIgYWRkVXBVbnRpbEluZGV4ID0gZnVuY3Rpb24gYWRkVXBVbnRpbEluZGV4KHNpemVzLCBpbmRleCkge1xuICB2YXIgdG90YWxVcFRvSW5kZXggPSAwO1xuICBmb3IgKHZhciBpID0gMDsgaSA8PSBpbmRleDsgaSArPSAxKSB7XG4gICAgdG90YWxVcFRvSW5kZXggKz0gc2l6ZXNbaV07XG4gIH1cblxuICByZXR1cm4gdG90YWxVcFRvSW5kZXg7XG59O1xuXG4vKiBjcmVhdGUgYSBuZXcgc3R5bGUgdGFnIGFmdGVyIGxhc3RFbCAqL1xudmFyIG1ha2VTdHlsZVRhZyA9IGZ1bmN0aW9uIG1ha2VTdHlsZVRhZyh0YXJnZXQsIHRhZ0VsLCBpbnNlcnRCZWZvcmUpIHtcbiAgdmFyIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTtcbiAgZWwuc2V0QXR0cmlidXRlKFNDX0FUVFIsICcnKTtcbiAgZWwuc2V0QXR0cmlidXRlKFNDX1ZFUlNJT05fQVRUUiwgXCI0LjEuM1wiKTtcblxuICB2YXIgbm9uY2UgPSBnZXROb25jZSgpO1xuICBpZiAobm9uY2UpIHtcbiAgICBlbC5zZXRBdHRyaWJ1dGUoJ25vbmNlJywgbm9uY2UpO1xuICB9XG5cbiAgLyogV29yayBhcm91bmQgaW5zZXJ0UnVsZSBxdWlyayBpbiBFZGdlSFRNTCAqL1xuICBlbC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnJykpO1xuXG4gIGlmICh0YXJnZXQgJiYgIXRhZ0VsKSB7XG4gICAgLyogQXBwZW5kIHRvIHRhcmdldCB3aGVuIG5vIHByZXZpb3VzIGVsZW1lbnQgd2FzIHBhc3NlZCAqL1xuICAgIHRhcmdldC5hcHBlbmRDaGlsZChlbCk7XG4gIH0gZWxzZSB7XG4gICAgaWYgKCF0YWdFbCB8fCAhdGFyZ2V0IHx8ICF0YWdFbC5wYXJlbnROb2RlKSB7XG4gICAgICB0aHJvdyBuZXcgU3R5bGVkQ29tcG9uZW50c0Vycm9yKDYpO1xuICAgIH1cblxuICAgIC8qIEluc2VydCBuZXcgc3R5bGUgdGFnIGFmdGVyIHRoZSBwcmV2aW91cyBvbmUgKi9cbiAgICB0YWdFbC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShlbCwgaW5zZXJ0QmVmb3JlID8gdGFnRWwgOiB0YWdFbC5uZXh0U2libGluZyk7XG4gIH1cblxuICByZXR1cm4gZWw7XG59O1xuXG4vKiB0YWtlcyBhIGNzcyBmYWN0b3J5IGZ1bmN0aW9uIGFuZCBvdXRwdXRzIGFuIGh0bWwgc3R5bGVkIHRhZyBmYWN0b3J5ICovXG52YXIgd3JhcEFzSHRtbFRhZyA9IGZ1bmN0aW9uIHdyYXBBc0h0bWxUYWcoY3NzLCBuYW1lcykge1xuICByZXR1cm4gZnVuY3Rpb24gKGFkZGl0aW9uYWxBdHRycykge1xuICAgIHZhciBub25jZSA9IGdldE5vbmNlKCk7XG4gICAgdmFyIGF0dHJzID0gW25vbmNlICYmICdub25jZT1cIicgKyBub25jZSArICdcIicsIFNDX0FUVFIgKyAnPVwiJyArIHN0cmluZ2lmeU5hbWVzKG5hbWVzKSArICdcIicsIFNDX1ZFUlNJT05fQVRUUiArICc9XCInICsgXCI0LjEuM1wiICsgJ1wiJywgYWRkaXRpb25hbEF0dHJzXTtcblxuICAgIHZhciBodG1sQXR0ciA9IGF0dHJzLmZpbHRlcihCb29sZWFuKS5qb2luKCcgJyk7XG4gICAgcmV0dXJuICc8c3R5bGUgJyArIGh0bWxBdHRyICsgJz4nICsgY3NzKCkgKyAnPC9zdHlsZT4nO1xuICB9O1xufTtcblxuLyogdGFrZXMgYSBjc3MgZmFjdG9yeSBmdW5jdGlvbiBhbmQgb3V0cHV0cyBhbiBlbGVtZW50IGZhY3RvcnkgKi9cbnZhciB3cmFwQXNFbGVtZW50ID0gZnVuY3Rpb24gd3JhcEFzRWxlbWVudChjc3MsIG5hbWVzKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIF9wcm9wcztcblxuICAgIHZhciBwcm9wcyA9IChfcHJvcHMgPSB7fSwgX3Byb3BzW1NDX0FUVFJdID0gc3RyaW5naWZ5TmFtZXMobmFtZXMpLCBfcHJvcHNbU0NfVkVSU0lPTl9BVFRSXSA9IFwiNC4xLjNcIiwgX3Byb3BzKTtcblxuICAgIHZhciBub25jZSA9IGdldE5vbmNlKCk7XG4gICAgaWYgKG5vbmNlKSB7XG4gICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICBwcm9wcy5ub25jZSA9IG5vbmNlO1xuICAgIH1cblxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9uby1kYW5nZXJcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudCgnc3R5bGUnLCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHsgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6IHsgX19odG1sOiBjc3MoKSB9IH0pKTtcbiAgfTtcbn07XG5cbnZhciBnZXRJZHNGcm9tTWFya2Vyc0ZhY3RvcnkgPSBmdW5jdGlvbiBnZXRJZHNGcm9tTWFya2Vyc0ZhY3RvcnkobWFya2Vycykge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBPYmplY3Qua2V5cyhtYXJrZXJzKTtcbiAgfTtcbn07XG5cbi8qIHNwZWVkeSB0YWdzIHV0aWxpc2UgaW5zZXJ0UnVsZSAqL1xudmFyIG1ha2VTcGVlZHlUYWcgPSBmdW5jdGlvbiBtYWtlU3BlZWR5VGFnKGVsLCBnZXRJbXBvcnRSdWxlVGFnKSB7XG4gIHZhciBuYW1lcyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIHZhciBtYXJrZXJzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgdmFyIHNpemVzID0gW107XG5cbiAgdmFyIGV4dHJhY3RJbXBvcnQgPSBnZXRJbXBvcnRSdWxlVGFnICE9PSB1bmRlZmluZWQ7XG4gIC8qIGluZGljYXRlcyB3aGV0aGVyIGdldEltcG9ydFJ1bGVUYWcgd2FzIGNhbGxlZCAqL1xuICB2YXIgdXNlZEltcG9ydFJ1bGVUYWcgPSBmYWxzZTtcblxuICB2YXIgaW5zZXJ0TWFya2VyID0gZnVuY3Rpb24gaW5zZXJ0TWFya2VyKGlkKSB7XG4gICAgdmFyIHByZXYgPSBtYXJrZXJzW2lkXTtcbiAgICBpZiAocHJldiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gcHJldjtcbiAgICB9XG5cbiAgICBtYXJrZXJzW2lkXSA9IHNpemVzLmxlbmd0aDtcbiAgICBzaXplcy5wdXNoKDApO1xuICAgIHJlc2V0SWROYW1lcyhuYW1lcywgaWQpO1xuXG4gICAgcmV0dXJuIG1hcmtlcnNbaWRdO1xuICB9O1xuXG4gIHZhciBpbnNlcnRSdWxlcyA9IGZ1bmN0aW9uIGluc2VydFJ1bGVzKGlkLCBjc3NSdWxlcywgbmFtZSkge1xuICAgIHZhciBtYXJrZXIgPSBpbnNlcnRNYXJrZXIoaWQpO1xuICAgIHZhciBzaGVldCA9IHNoZWV0Rm9yVGFnKGVsKTtcbiAgICB2YXIgaW5zZXJ0SW5kZXggPSBhZGRVcFVudGlsSW5kZXgoc2l6ZXMsIG1hcmtlcik7XG5cbiAgICB2YXIgaW5qZWN0ZWRSdWxlcyA9IDA7XG4gICAgdmFyIGltcG9ydFJ1bGVzID0gW107XG4gICAgdmFyIGNzc1J1bGVzU2l6ZSA9IGNzc1J1bGVzLmxlbmd0aDtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY3NzUnVsZXNTaXplOyBpICs9IDEpIHtcbiAgICAgIHZhciBjc3NSdWxlID0gY3NzUnVsZXNbaV07XG4gICAgICB2YXIgbWF5SGF2ZUltcG9ydCA9IGV4dHJhY3RJbXBvcnQ7IC8qIEBpbXBvcnQgcnVsZXMgYXJlIHJlb3JkZXJlZCB0byBhcHBlYXIgZmlyc3QgKi9cbiAgICAgIGlmIChtYXlIYXZlSW1wb3J0ICYmIGNzc1J1bGUuaW5kZXhPZignQGltcG9ydCcpICE9PSAtMSkge1xuICAgICAgICBpbXBvcnRSdWxlcy5wdXNoKGNzc1J1bGUpO1xuICAgICAgfSBlbHNlIGlmIChzYWZlSW5zZXJ0UnVsZShzaGVldCwgY3NzUnVsZSwgaW5zZXJ0SW5kZXggKyBpbmplY3RlZFJ1bGVzKSkge1xuICAgICAgICBtYXlIYXZlSW1wb3J0ID0gZmFsc2U7XG4gICAgICAgIGluamVjdGVkUnVsZXMgKz0gMTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoZXh0cmFjdEltcG9ydCAmJiBpbXBvcnRSdWxlcy5sZW5ndGggPiAwKSB7XG4gICAgICB1c2VkSW1wb3J0UnVsZVRhZyA9IHRydWU7XG4gICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICBnZXRJbXBvcnRSdWxlVGFnKCkuaW5zZXJ0UnVsZXMoaWQgKyAnLWltcG9ydCcsIGltcG9ydFJ1bGVzKTtcbiAgICB9XG5cbiAgICBzaXplc1ttYXJrZXJdICs9IGluamVjdGVkUnVsZXM7IC8qIGFkZCB1cCBubyBvZiBpbmplY3RlZCBydWxlcyAqL1xuICAgIGFkZE5hbWVGb3JJZChuYW1lcywgaWQsIG5hbWUpO1xuICB9O1xuXG4gIHZhciByZW1vdmVSdWxlcyA9IGZ1bmN0aW9uIHJlbW92ZVJ1bGVzKGlkKSB7XG4gICAgdmFyIG1hcmtlciA9IG1hcmtlcnNbaWRdO1xuICAgIGlmIChtYXJrZXIgPT09IHVuZGVmaW5lZCkgcmV0dXJuO1xuXG4gICAgdmFyIHNpemUgPSBzaXplc1ttYXJrZXJdO1xuICAgIHZhciBzaGVldCA9IHNoZWV0Rm9yVGFnKGVsKTtcbiAgICB2YXIgcmVtb3ZhbEluZGV4ID0gYWRkVXBVbnRpbEluZGV4KHNpemVzLCBtYXJrZXIpIC0gMTtcbiAgICBkZWxldGVSdWxlcyhzaGVldCwgcmVtb3ZhbEluZGV4LCBzaXplKTtcbiAgICBzaXplc1ttYXJrZXJdID0gMDtcbiAgICByZXNldElkTmFtZXMobmFtZXMsIGlkKTtcblxuICAgIGlmIChleHRyYWN0SW1wb3J0ICYmIHVzZWRJbXBvcnRSdWxlVGFnKSB7XG4gICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICBnZXRJbXBvcnRSdWxlVGFnKCkucmVtb3ZlUnVsZXMoaWQgKyAnLWltcG9ydCcpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgY3NzID0gZnVuY3Rpb24gY3NzKCkge1xuICAgIHZhciBfc2hlZXRGb3JUYWcgPSBzaGVldEZvclRhZyhlbCksXG4gICAgICAgIGNzc1J1bGVzID0gX3NoZWV0Rm9yVGFnLmNzc1J1bGVzO1xuXG4gICAgdmFyIHN0ciA9ICcnO1xuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGd1YXJkLWZvci1pblxuICAgIGZvciAodmFyIGlkIGluIG1hcmtlcnMpIHtcbiAgICAgIHN0ciArPSBtYWtlVGV4dE1hcmtlcihpZCk7XG4gICAgICB2YXIgbWFya2VyID0gbWFya2Vyc1tpZF07XG4gICAgICB2YXIgZW5kID0gYWRkVXBVbnRpbEluZGV4KHNpemVzLCBtYXJrZXIpO1xuICAgICAgdmFyIHNpemUgPSBzaXplc1ttYXJrZXJdO1xuICAgICAgZm9yICh2YXIgaSA9IGVuZCAtIHNpemU7IGkgPCBlbmQ7IGkgKz0gMSkge1xuICAgICAgICB2YXIgcnVsZSA9IGNzc1J1bGVzW2ldO1xuICAgICAgICBpZiAocnVsZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgc3RyICs9IHJ1bGUuY3NzVGV4dDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBzdHI7XG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBjbG9uZTogZnVuY3Rpb24gY2xvbmUoKSB7XG4gICAgICB0aHJvdyBuZXcgU3R5bGVkQ29tcG9uZW50c0Vycm9yKDUpO1xuICAgIH0sXG5cbiAgICBjc3M6IGNzcyxcbiAgICBnZXRJZHM6IGdldElkc0Zyb21NYXJrZXJzRmFjdG9yeShtYXJrZXJzKSxcbiAgICBoYXNOYW1lRm9ySWQ6IGhhc05hbWVGb3JJZChuYW1lcyksXG4gICAgaW5zZXJ0TWFya2VyOiBpbnNlcnRNYXJrZXIsXG4gICAgaW5zZXJ0UnVsZXM6IGluc2VydFJ1bGVzLFxuICAgIHJlbW92ZVJ1bGVzOiByZW1vdmVSdWxlcyxcbiAgICBzZWFsZWQ6IGZhbHNlLFxuICAgIHN0eWxlVGFnOiBlbCxcbiAgICB0b0VsZW1lbnQ6IHdyYXBBc0VsZW1lbnQoY3NzLCBuYW1lcyksXG4gICAgdG9IVE1MOiB3cmFwQXNIdG1sVGFnKGNzcywgbmFtZXMpXG4gIH07XG59O1xuXG52YXIgbWFrZVRleHROb2RlID0gZnVuY3Rpb24gbWFrZVRleHROb2RlKGlkKSB7XG4gIHJldHVybiBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShtYWtlVGV4dE1hcmtlcihpZCkpO1xufTtcblxudmFyIG1ha2VCcm93c2VyVGFnID0gZnVuY3Rpb24gbWFrZUJyb3dzZXJUYWcoZWwsIGdldEltcG9ydFJ1bGVUYWcpIHtcbiAgdmFyIG5hbWVzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgdmFyIG1hcmtlcnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuXG4gIHZhciBleHRyYWN0SW1wb3J0ID0gZ2V0SW1wb3J0UnVsZVRhZyAhPT0gdW5kZWZpbmVkO1xuXG4gIC8qIGluZGljYXRlcyB3aGV0aGVyIGdldEltcG9ydFJ1bGVUYWcgd2FzIGNhbGxlZCAqL1xuICB2YXIgdXNlZEltcG9ydFJ1bGVUYWcgPSBmYWxzZTtcblxuICB2YXIgaW5zZXJ0TWFya2VyID0gZnVuY3Rpb24gaW5zZXJ0TWFya2VyKGlkKSB7XG4gICAgdmFyIHByZXYgPSBtYXJrZXJzW2lkXTtcbiAgICBpZiAocHJldiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gcHJldjtcbiAgICB9XG5cbiAgICBtYXJrZXJzW2lkXSA9IG1ha2VUZXh0Tm9kZShpZCk7XG4gICAgZWwuYXBwZW5kQ2hpbGQobWFya2Vyc1tpZF0pO1xuICAgIG5hbWVzW2lkXSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cbiAgICByZXR1cm4gbWFya2Vyc1tpZF07XG4gIH07XG5cbiAgdmFyIGluc2VydFJ1bGVzID0gZnVuY3Rpb24gaW5zZXJ0UnVsZXMoaWQsIGNzc1J1bGVzLCBuYW1lKSB7XG4gICAgdmFyIG1hcmtlciA9IGluc2VydE1hcmtlcihpZCk7XG4gICAgdmFyIGltcG9ydFJ1bGVzID0gW107XG4gICAgdmFyIGNzc1J1bGVzU2l6ZSA9IGNzc1J1bGVzLmxlbmd0aDtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY3NzUnVsZXNTaXplOyBpICs9IDEpIHtcbiAgICAgIHZhciBydWxlID0gY3NzUnVsZXNbaV07XG4gICAgICB2YXIgbWF5SGF2ZUltcG9ydCA9IGV4dHJhY3RJbXBvcnQ7XG4gICAgICBpZiAobWF5SGF2ZUltcG9ydCAmJiBydWxlLmluZGV4T2YoJ0BpbXBvcnQnKSAhPT0gLTEpIHtcbiAgICAgICAgaW1wb3J0UnVsZXMucHVzaChydWxlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG1heUhhdmVJbXBvcnQgPSBmYWxzZTtcbiAgICAgICAgdmFyIHNlcGFyYXRvciA9IGkgPT09IGNzc1J1bGVzU2l6ZSAtIDEgPyAnJyA6ICcgJztcbiAgICAgICAgbWFya2VyLmFwcGVuZERhdGEoJycgKyBydWxlICsgc2VwYXJhdG9yKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBhZGROYW1lRm9ySWQobmFtZXMsIGlkLCBuYW1lKTtcblxuICAgIGlmIChleHRyYWN0SW1wb3J0ICYmIGltcG9ydFJ1bGVzLmxlbmd0aCA+IDApIHtcbiAgICAgIHVzZWRJbXBvcnRSdWxlVGFnID0gdHJ1ZTtcbiAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgIGdldEltcG9ydFJ1bGVUYWcoKS5pbnNlcnRSdWxlcyhpZCArICctaW1wb3J0JywgaW1wb3J0UnVsZXMpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgcmVtb3ZlUnVsZXMgPSBmdW5jdGlvbiByZW1vdmVSdWxlcyhpZCkge1xuICAgIHZhciBtYXJrZXIgPSBtYXJrZXJzW2lkXTtcbiAgICBpZiAobWFya2VyID09PSB1bmRlZmluZWQpIHJldHVybjtcblxuICAgIC8qIGNyZWF0ZSBuZXcgZW1wdHkgdGV4dCBub2RlIGFuZCByZXBsYWNlIHRoZSBjdXJyZW50IG9uZSAqL1xuICAgIHZhciBuZXdNYXJrZXIgPSBtYWtlVGV4dE5vZGUoaWQpO1xuICAgIGVsLnJlcGxhY2VDaGlsZChuZXdNYXJrZXIsIG1hcmtlcik7XG4gICAgbWFya2Vyc1tpZF0gPSBuZXdNYXJrZXI7XG4gICAgcmVzZXRJZE5hbWVzKG5hbWVzLCBpZCk7XG5cbiAgICBpZiAoZXh0cmFjdEltcG9ydCAmJiB1c2VkSW1wb3J0UnVsZVRhZykge1xuICAgICAgLy8gJEZsb3dGaXhNZVxuICAgICAgZ2V0SW1wb3J0UnVsZVRhZygpLnJlbW92ZVJ1bGVzKGlkICsgJy1pbXBvcnQnKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGNzcyA9IGZ1bmN0aW9uIGNzcygpIHtcbiAgICB2YXIgc3RyID0gJyc7XG5cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZ3VhcmQtZm9yLWluXG4gICAgZm9yICh2YXIgaWQgaW4gbWFya2Vycykge1xuICAgICAgc3RyICs9IG1hcmtlcnNbaWRdLmRhdGE7XG4gICAgfVxuXG4gICAgcmV0dXJuIHN0cjtcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIGNsb25lOiBmdW5jdGlvbiBjbG9uZSgpIHtcbiAgICAgIHRocm93IG5ldyBTdHlsZWRDb21wb25lbnRzRXJyb3IoNSk7XG4gICAgfSxcblxuICAgIGNzczogY3NzLFxuICAgIGdldElkczogZ2V0SWRzRnJvbU1hcmtlcnNGYWN0b3J5KG1hcmtlcnMpLFxuICAgIGhhc05hbWVGb3JJZDogaGFzTmFtZUZvcklkKG5hbWVzKSxcbiAgICBpbnNlcnRNYXJrZXI6IGluc2VydE1hcmtlcixcbiAgICBpbnNlcnRSdWxlczogaW5zZXJ0UnVsZXMsXG4gICAgcmVtb3ZlUnVsZXM6IHJlbW92ZVJ1bGVzLFxuICAgIHNlYWxlZDogZmFsc2UsXG4gICAgc3R5bGVUYWc6IGVsLFxuICAgIHRvRWxlbWVudDogd3JhcEFzRWxlbWVudChjc3MsIG5hbWVzKSxcbiAgICB0b0hUTUw6IHdyYXBBc0h0bWxUYWcoY3NzLCBuYW1lcylcbiAgfTtcbn07XG5cbnZhciBtYWtlU2VydmVyVGFnID0gZnVuY3Rpb24gbWFrZVNlcnZlclRhZyhuYW1lc0FyZywgbWFya2Vyc0FyZykge1xuICB2YXIgbmFtZXMgPSBuYW1lc0FyZyA9PT0gdW5kZWZpbmVkID8gT2JqZWN0LmNyZWF0ZShudWxsKSA6IG5hbWVzQXJnO1xuICB2YXIgbWFya2VycyA9IG1hcmtlcnNBcmcgPT09IHVuZGVmaW5lZCA/IE9iamVjdC5jcmVhdGUobnVsbCkgOiBtYXJrZXJzQXJnO1xuXG4gIHZhciBpbnNlcnRNYXJrZXIgPSBmdW5jdGlvbiBpbnNlcnRNYXJrZXIoaWQpIHtcbiAgICB2YXIgcHJldiA9IG1hcmtlcnNbaWRdO1xuICAgIGlmIChwcmV2ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBwcmV2O1xuICAgIH1cblxuICAgIHJldHVybiBtYXJrZXJzW2lkXSA9IFsnJ107XG4gIH07XG5cbiAgdmFyIGluc2VydFJ1bGVzID0gZnVuY3Rpb24gaW5zZXJ0UnVsZXMoaWQsIGNzc1J1bGVzLCBuYW1lKSB7XG4gICAgdmFyIG1hcmtlciA9IGluc2VydE1hcmtlcihpZCk7XG4gICAgbWFya2VyWzBdICs9IGNzc1J1bGVzLmpvaW4oJyAnKTtcbiAgICBhZGROYW1lRm9ySWQobmFtZXMsIGlkLCBuYW1lKTtcbiAgfTtcblxuICB2YXIgcmVtb3ZlUnVsZXMgPSBmdW5jdGlvbiByZW1vdmVSdWxlcyhpZCkge1xuICAgIHZhciBtYXJrZXIgPSBtYXJrZXJzW2lkXTtcbiAgICBpZiAobWFya2VyID09PSB1bmRlZmluZWQpIHJldHVybjtcbiAgICBtYXJrZXJbMF0gPSAnJztcbiAgICByZXNldElkTmFtZXMobmFtZXMsIGlkKTtcbiAgfTtcblxuICB2YXIgY3NzID0gZnVuY3Rpb24gY3NzKCkge1xuICAgIHZhciBzdHIgPSAnJztcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZ3VhcmQtZm9yLWluXG4gICAgZm9yICh2YXIgaWQgaW4gbWFya2Vycykge1xuICAgICAgdmFyIGNzc0ZvcklkID0gbWFya2Vyc1tpZF1bMF07XG4gICAgICBpZiAoY3NzRm9ySWQpIHtcbiAgICAgICAgc3RyICs9IG1ha2VUZXh0TWFya2VyKGlkKSArIGNzc0ZvcklkO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gc3RyO1xuICB9O1xuXG4gIHZhciBjbG9uZSA9IGZ1bmN0aW9uIGNsb25lKCkge1xuICAgIHZhciBuYW1lc0Nsb25lID0gY2xvbmVOYW1lcyhuYW1lcyk7XG4gICAgdmFyIG1hcmtlcnNDbG9uZSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZ3VhcmQtZm9yLWluXG4gICAgZm9yICh2YXIgaWQgaW4gbWFya2Vycykge1xuICAgICAgbWFya2Vyc0Nsb25lW2lkXSA9IFttYXJrZXJzW2lkXVswXV07XG4gICAgfVxuXG4gICAgcmV0dXJuIG1ha2VTZXJ2ZXJUYWcobmFtZXNDbG9uZSwgbWFya2Vyc0Nsb25lKTtcbiAgfTtcblxuICB2YXIgdGFnID0ge1xuICAgIGNsb25lOiBjbG9uZSxcbiAgICBjc3M6IGNzcyxcbiAgICBnZXRJZHM6IGdldElkc0Zyb21NYXJrZXJzRmFjdG9yeShtYXJrZXJzKSxcbiAgICBoYXNOYW1lRm9ySWQ6IGhhc05hbWVGb3JJZChuYW1lcyksXG4gICAgaW5zZXJ0TWFya2VyOiBpbnNlcnRNYXJrZXIsXG4gICAgaW5zZXJ0UnVsZXM6IGluc2VydFJ1bGVzLFxuICAgIHJlbW92ZVJ1bGVzOiByZW1vdmVSdWxlcyxcbiAgICBzZWFsZWQ6IGZhbHNlLFxuICAgIHN0eWxlVGFnOiBudWxsLFxuICAgIHRvRWxlbWVudDogd3JhcEFzRWxlbWVudChjc3MsIG5hbWVzKSxcbiAgICB0b0hUTUw6IHdyYXBBc0h0bWxUYWcoY3NzLCBuYW1lcylcbiAgfTtcblxuICByZXR1cm4gdGFnO1xufTtcblxudmFyIG1ha2VUYWcgPSBmdW5jdGlvbiBtYWtlVGFnKHRhcmdldCwgdGFnRWwsIGZvcmNlU2VydmVyLCBpbnNlcnRCZWZvcmUsIGdldEltcG9ydFJ1bGVUYWcpIHtcbiAgaWYgKElTX0JST1dTRVIgJiYgIWZvcmNlU2VydmVyKSB7XG4gICAgdmFyIGVsID0gbWFrZVN0eWxlVGFnKHRhcmdldCwgdGFnRWwsIGluc2VydEJlZm9yZSk7XG5cbiAgICBpZiAoRElTQUJMRV9TUEVFRFkpIHtcbiAgICAgIHJldHVybiBtYWtlQnJvd3NlclRhZyhlbCwgZ2V0SW1wb3J0UnVsZVRhZyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBtYWtlU3BlZWR5VGFnKGVsLCBnZXRJbXBvcnRSdWxlVGFnKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbWFrZVNlcnZlclRhZygpO1xufTtcblxudmFyIHJlaHlkcmF0ZSA9IGZ1bmN0aW9uIHJlaHlkcmF0ZSh0YWcsIGVscywgZXh0cmFjdGVkKSB7XG4gIC8qIGFkZCBhbGwgZXh0cmFjdGVkIGNvbXBvbmVudHMgdG8gdGhlIG5ldyB0YWcgKi9cbiAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGV4dHJhY3RlZC5sZW5ndGg7IGkgPCBsZW47IGkgKz0gMSkge1xuICAgIHZhciBfZXh0cmFjdGVkJGkgPSBleHRyYWN0ZWRbaV0sXG4gICAgICAgIGNvbXBvbmVudElkID0gX2V4dHJhY3RlZCRpLmNvbXBvbmVudElkLFxuICAgICAgICBjc3NGcm9tRE9NID0gX2V4dHJhY3RlZCRpLmNzc0Zyb21ET007XG5cbiAgICB2YXIgY3NzUnVsZXMgPSBzcGxpdEJ5UnVsZXMoY3NzRnJvbURPTSk7XG4gICAgdGFnLmluc2VydFJ1bGVzKGNvbXBvbmVudElkLCBjc3NSdWxlcyk7XG4gIH1cblxuICAvKiByZW1vdmUgb2xkIEhUTUxTdHlsZUVsZW1lbnRzLCBzaW5jZSB0aGV5IGhhdmUgYmVlbiByZWh5ZHJhdGVkICovXG4gIGZvciAodmFyIF9pID0gMCwgX2xlbiA9IGVscy5sZW5ndGg7IF9pIDwgX2xlbjsgX2kgKz0gMSkge1xuICAgIHZhciBlbCA9IGVsc1tfaV07XG4gICAgaWYgKGVsLnBhcmVudE5vZGUpIHtcbiAgICAgIGVsLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZWwpO1xuICAgIH1cbiAgfVxufTtcblxuLy8gXG5cbnZhciBTUExJVF9SRUdFWCA9IC9cXHMrLztcblxuLyogZGV0ZXJtaW5lIHRoZSBtYXhpbXVtIG51bWJlciBvZiBjb21wb25lbnRzIGJlZm9yZSB0YWdzIGFyZSBzaGFyZGVkICovXG52YXIgTUFYX1NJWkUgPSB2b2lkIDA7XG5pZiAoSVNfQlJPV1NFUikge1xuICAvKiBpbiBzcGVlZHkgbW9kZSB3ZSBjYW4ga2VlcCBhIGxvdCBtb3JlIHJ1bGVzIGluIGEgc2hlZXQgYmVmb3JlIGEgc2xvd2Rvd24gY2FuIGJlIGV4cGVjdGVkICovXG4gIE1BWF9TSVpFID0gRElTQUJMRV9TUEVFRFkgPyA0MCA6IDEwMDA7XG59IGVsc2Uge1xuICAvKiBmb3Igc2VydmVycyB3ZSBkbyBub3QgbmVlZCB0byBzaGFyZCBhdCBhbGwgKi9cbiAgTUFYX1NJWkUgPSAtMTtcbn1cblxudmFyIHNoZWV0UnVubmluZ0lkID0gMDtcbnZhciBtYXN0ZXIgPSB2b2lkIDA7XG5cbnZhciBTdHlsZVNoZWV0ID0gZnVuY3Rpb24gKCkge1xuXG4gIC8qIGEgbWFwIGZyb20gaWRzIHRvIHRhZ3MgKi9cblxuICAvKiBkZWZlcnJlZCBydWxlcyBmb3IgYSBnaXZlbiBpZCAqL1xuXG4gIC8qIHRoaXMgaXMgdXNlZCBmb3Igbm90IHJlaW5qZWN0aW5nIHJ1bGVzIHZpYSBoYXNOYW1lRm9ySWQoKSAqL1xuXG4gIC8qIHdoZW4gcnVsZXMgZm9yIGFuIGlkIGFyZSByZW1vdmVkIHVzaW5nIHJlbW92ZSgpIHdlIGhhdmUgdG8gaWdub3JlIHJlaHlkcmF0ZWROYW1lcyBmb3IgaXQgKi9cblxuICAvKiBhIGxpc3Qgb2YgdGFncyBiZWxvbmdpbmcgdG8gdGhpcyBTdHlsZVNoZWV0ICovXG5cbiAgLyogYSB0YWcgZm9yIGltcG9ydCBydWxlcyAqL1xuXG4gIC8qIGN1cnJlbnQgY2FwYWNpdHkgdW50aWwgYSBuZXcgdGFnIG11c3QgYmUgY3JlYXRlZCAqL1xuXG4gIC8qIGNoaWxkcmVuIChha2EgY2xvbmVzKSBvZiB0aGlzIFN0eWxlU2hlZXQgaW5oZXJpdGluZyBhbGwgYW5kIGZ1dHVyZSBpbmplY3Rpb25zICovXG5cbiAgZnVuY3Rpb24gU3R5bGVTaGVldCgpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgdmFyIHRhcmdldCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogSVNfQlJPV1NFUiA/IGRvY3VtZW50LmhlYWQgOiBudWxsO1xuICAgIHZhciBmb3JjZVNlcnZlciA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogZmFsc2U7XG4gICAgY2xhc3NDYWxsQ2hlY2sodGhpcywgU3R5bGVTaGVldCk7XG5cbiAgICB0aGlzLmdldEltcG9ydFJ1bGVUYWcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgaW1wb3J0UnVsZVRhZyA9IF90aGlzLmltcG9ydFJ1bGVUYWc7XG5cbiAgICAgIGlmIChpbXBvcnRSdWxlVGFnICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIGltcG9ydFJ1bGVUYWc7XG4gICAgICB9XG5cbiAgICAgIHZhciBmaXJzdFRhZyA9IF90aGlzLnRhZ3NbMF07XG4gICAgICB2YXIgaW5zZXJ0QmVmb3JlID0gdHJ1ZTtcblxuICAgICAgcmV0dXJuIF90aGlzLmltcG9ydFJ1bGVUYWcgPSBtYWtlVGFnKF90aGlzLnRhcmdldCwgZmlyc3RUYWcgPyBmaXJzdFRhZy5zdHlsZVRhZyA6IG51bGwsIF90aGlzLmZvcmNlU2VydmVyLCBpbnNlcnRCZWZvcmUpO1xuICAgIH07XG5cbiAgICBzaGVldFJ1bm5pbmdJZCArPSAxO1xuICAgIHRoaXMuaWQgPSBzaGVldFJ1bm5pbmdJZDtcbiAgICB0aGlzLmZvcmNlU2VydmVyID0gZm9yY2VTZXJ2ZXI7XG4gICAgdGhpcy50YXJnZXQgPSBmb3JjZVNlcnZlciA/IG51bGwgOiB0YXJnZXQ7XG4gICAgdGhpcy50YWdNYXAgPSB7fTtcbiAgICB0aGlzLmRlZmVycmVkID0ge307XG4gICAgdGhpcy5yZWh5ZHJhdGVkTmFtZXMgPSB7fTtcbiAgICB0aGlzLmlnbm9yZVJlaHlkcmF0ZWROYW1lcyA9IHt9O1xuICAgIHRoaXMudGFncyA9IFtdO1xuICAgIHRoaXMuY2FwYWNpdHkgPSAxO1xuICAgIHRoaXMuY2xvbmVzID0gW107XG4gIH1cblxuICAvKiByZWh5ZHJhdGUgYWxsIFNTUidkIHN0eWxlIHRhZ3MgKi9cblxuXG4gIFN0eWxlU2hlZXQucHJvdG90eXBlLnJlaHlkcmF0ZSA9IGZ1bmN0aW9uIHJlaHlkcmF0ZSQkMSgpIHtcbiAgICBpZiAoIUlTX0JST1dTRVIgfHwgdGhpcy5mb3JjZVNlcnZlcikgcmV0dXJuIHRoaXM7XG5cbiAgICB2YXIgZWxzID0gW107XG4gICAgdmFyIGV4dHJhY3RlZCA9IFtdO1xuICAgIHZhciBpc1N0cmVhbWVkID0gZmFsc2U7XG5cbiAgICAvKiByZXRyaWV2ZSBhbGwgb2Ygb3VyIFNTUiBzdHlsZSBlbGVtZW50cyBmcm9tIHRoZSBET00gKi9cbiAgICB2YXIgbm9kZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdzdHlsZVsnICsgU0NfQVRUUiArICddWycgKyBTQ19WRVJTSU9OX0FUVFIgKyAnPVwiJyArIFwiNC4xLjNcIiArICdcIl0nKTtcblxuICAgIHZhciBub2Rlc1NpemUgPSBub2Rlcy5sZW5ndGg7XG5cbiAgICAvKiBhYm9ydCByZWh5ZHJhdGlvbiBpZiBubyBwcmV2aW91cyBzdHlsZSB0YWdzIHdlcmUgZm91bmQgKi9cbiAgICBpZiAoIW5vZGVzU2l6ZSkgcmV0dXJuIHRoaXM7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG5vZGVzU2l6ZTsgaSArPSAxKSB7XG4gICAgICB2YXIgZWwgPSBub2Rlc1tpXTtcblxuICAgICAgLyogY2hlY2sgaWYgc3R5bGUgdGFnIGlzIGEgc3RyZWFtZWQgdGFnICovXG4gICAgICBpZiAoIWlzU3RyZWFtZWQpIGlzU3RyZWFtZWQgPSAhIWVsLmdldEF0dHJpYnV0ZShTQ19TVFJFQU1fQVRUUik7XG5cbiAgICAgIC8qIHJldHJpZXZlIGFsbCBjb21wb25lbnQgbmFtZXMgKi9cbiAgICAgIHZhciBlbE5hbWVzID0gKGVsLmdldEF0dHJpYnV0ZShTQ19BVFRSKSB8fCAnJykudHJpbSgpLnNwbGl0KFNQTElUX1JFR0VYKTtcbiAgICAgIHZhciBlbE5hbWVzU2l6ZSA9IGVsTmFtZXMubGVuZ3RoO1xuICAgICAgZm9yICh2YXIgaiA9IDAsIG5hbWU7IGogPCBlbE5hbWVzU2l6ZTsgaiArPSAxKSB7XG4gICAgICAgIG5hbWUgPSBlbE5hbWVzW2pdO1xuICAgICAgICAvKiBhZGQgcmVoeWRyYXRlZCBuYW1lIHRvIHNoZWV0IHRvIGF2b2lkIHJlLWFkZGluZyBzdHlsZXMgKi9cbiAgICAgICAgdGhpcy5yZWh5ZHJhdGVkTmFtZXNbbmFtZV0gPSB0cnVlO1xuICAgICAgfVxuXG4gICAgICAvKiBleHRyYWN0IGFsbCBjb21wb25lbnRzIGFuZCB0aGVpciBDU1MgKi9cbiAgICAgIGV4dHJhY3RlZC5wdXNoLmFwcGx5KGV4dHJhY3RlZCwgZXh0cmFjdENvbXBzKGVsLnRleHRDb250ZW50KSk7XG5cbiAgICAgIC8qIHN0b3JlIG9yaWdpbmFsIEhUTUxTdHlsZUVsZW1lbnQgKi9cbiAgICAgIGVscy5wdXNoKGVsKTtcbiAgICB9XG5cbiAgICAvKiBhYm9ydCByZWh5ZHJhdGlvbiBpZiBub3RoaW5nIHdhcyBleHRyYWN0ZWQgKi9cbiAgICB2YXIgZXh0cmFjdGVkU2l6ZSA9IGV4dHJhY3RlZC5sZW5ndGg7XG4gICAgaWYgKCFleHRyYWN0ZWRTaXplKSByZXR1cm4gdGhpcztcblxuICAgIC8qIGNyZWF0ZSBhIHRhZyB0byBiZSB1c2VkIGZvciByZWh5ZHJhdGlvbiAqL1xuICAgIHZhciB0YWcgPSB0aGlzLm1ha2VUYWcobnVsbCk7XG5cbiAgICByZWh5ZHJhdGUodGFnLCBlbHMsIGV4dHJhY3RlZCk7XG5cbiAgICAvKiByZXNldCBjYXBhY2l0eSBhbmQgYWRqdXN0IE1BWF9TSVpFIGJ5IHRoZSBpbml0aWFsIHNpemUgb2YgdGhlIHJlaHlkcmF0aW9uICovXG4gICAgdGhpcy5jYXBhY2l0eSA9IE1hdGgubWF4KDEsIE1BWF9TSVpFIC0gZXh0cmFjdGVkU2l6ZSk7XG4gICAgdGhpcy50YWdzLnB1c2godGFnKTtcblxuICAgIC8qIHJldHJpZXZlIGFsbCBjb21wb25lbnQgaWRzICovXG4gICAgZm9yICh2YXIgX2ogPSAwOyBfaiA8IGV4dHJhY3RlZFNpemU7IF9qICs9IDEpIHtcbiAgICAgIHRoaXMudGFnTWFwW2V4dHJhY3RlZFtfal0uY29tcG9uZW50SWRdID0gdGFnO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIC8qIHJldHJpZXZlIGEgXCJtYXN0ZXJcIiBpbnN0YW5jZSBvZiBTdHlsZVNoZWV0IHdoaWNoIGlzIHR5cGljYWxseSB1c2VkIHdoZW4gbm8gb3RoZXIgaXMgYXZhaWxhYmxlXG4gICAqIFRoZSBtYXN0ZXIgU3R5bGVTaGVldCBpcyB0YXJnZXRlZCBieSBjcmVhdGVHbG9iYWxTdHlsZSwga2V5ZnJhbWVzLCBhbmQgY29tcG9uZW50cyBvdXRzaWRlIG9mIGFueVxuICAgICogU3R5bGVTaGVldE1hbmFnZXIncyBjb250ZXh0ICovXG5cblxuICAvKiByZXNldCB0aGUgaW50ZXJuYWwgXCJtYXN0ZXJcIiBpbnN0YW5jZSAqL1xuICBTdHlsZVNoZWV0LnJlc2V0ID0gZnVuY3Rpb24gcmVzZXQoKSB7XG4gICAgdmFyIGZvcmNlU2VydmVyID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBmYWxzZTtcblxuICAgIG1hc3RlciA9IG5ldyBTdHlsZVNoZWV0KHVuZGVmaW5lZCwgZm9yY2VTZXJ2ZXIpLnJlaHlkcmF0ZSgpO1xuICB9O1xuXG4gIC8qIGFkZHMgXCJjaGlsZHJlblwiIHRvIHRoZSBTdHlsZVNoZWV0IHRoYXQgaW5oZXJpdCBhbGwgb2YgdGhlIHBhcmVudHMnIHJ1bGVzXG4gICAqIHdoaWxlIHRoZWlyIG93biBydWxlcyBkbyBub3QgYWZmZWN0IHRoZSBwYXJlbnQgKi9cblxuXG4gIFN0eWxlU2hlZXQucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24gY2xvbmUoKSB7XG4gICAgdmFyIHNoZWV0ID0gbmV3IFN0eWxlU2hlZXQodGhpcy50YXJnZXQsIHRoaXMuZm9yY2VTZXJ2ZXIpO1xuXG4gICAgLyogYWRkIHRvIGNsb25lIGFycmF5ICovXG4gICAgdGhpcy5jbG9uZXMucHVzaChzaGVldCk7XG5cbiAgICAvKiBjbG9uZSBhbGwgdGFncyAqL1xuICAgIHNoZWV0LnRhZ3MgPSB0aGlzLnRhZ3MubWFwKGZ1bmN0aW9uICh0YWcpIHtcbiAgICAgIHZhciBpZHMgPSB0YWcuZ2V0SWRzKCk7XG4gICAgICB2YXIgbmV3VGFnID0gdGFnLmNsb25lKCk7XG5cbiAgICAgIC8qIHJlY29uc3RydWN0IHRhZ01hcCAqL1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBpZHMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgc2hlZXQudGFnTWFwW2lkc1tpXV0gPSBuZXdUYWc7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBuZXdUYWc7XG4gICAgfSk7XG5cbiAgICAvKiBjbG9uZSBvdGhlciBtYXBzICovXG4gICAgc2hlZXQucmVoeWRyYXRlZE5hbWVzID0gX2V4dGVuZHMoe30sIHRoaXMucmVoeWRyYXRlZE5hbWVzKTtcbiAgICBzaGVldC5kZWZlcnJlZCA9IF9leHRlbmRzKHt9LCB0aGlzLmRlZmVycmVkKTtcblxuICAgIHJldHVybiBzaGVldDtcbiAgfTtcblxuICAvKiBmb3JjZSBTdHlsZVNoZWV0IHRvIGNyZWF0ZSBhIG5ldyB0YWcgb24gdGhlIG5leHQgaW5qZWN0aW9uICovXG5cblxuICBTdHlsZVNoZWV0LnByb3RvdHlwZS5zZWFsQWxsVGFncyA9IGZ1bmN0aW9uIHNlYWxBbGxUYWdzKCkge1xuICAgIHRoaXMuY2FwYWNpdHkgPSAxO1xuXG4gICAgdGhpcy50YWdzLmZvckVhY2goZnVuY3Rpb24gKHRhZykge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICB0YWcuc2VhbGVkID0gdHJ1ZTtcbiAgICB9KTtcbiAgfTtcblxuICBTdHlsZVNoZWV0LnByb3RvdHlwZS5tYWtlVGFnID0gZnVuY3Rpb24gbWFrZVRhZyQkMSh0YWcpIHtcbiAgICB2YXIgbGFzdEVsID0gdGFnID8gdGFnLnN0eWxlVGFnIDogbnVsbDtcbiAgICB2YXIgaW5zZXJ0QmVmb3JlID0gZmFsc2U7XG5cbiAgICByZXR1cm4gbWFrZVRhZyh0aGlzLnRhcmdldCwgbGFzdEVsLCB0aGlzLmZvcmNlU2VydmVyLCBpbnNlcnRCZWZvcmUsIHRoaXMuZ2V0SW1wb3J0UnVsZVRhZyk7XG4gIH07XG5cbiAgLyogZ2V0IGEgdGFnIGZvciBhIGdpdmVuIGNvbXBvbmVudElkLCBhc3NpZ24gdGhlIGNvbXBvbmVudElkIHRvIG9uZSwgb3Igc2hhcmQgKi9cbiAgU3R5bGVTaGVldC5wcm90b3R5cGUuZ2V0VGFnRm9ySWQgPSBmdW5jdGlvbiBnZXRUYWdGb3JJZChpZCkge1xuICAgIC8qIHNpbXBseSByZXR1cm4gYSB0YWcsIHdoZW4gdGhlIGNvbXBvbmVudElkIHdhcyBhbHJlYWR5IGFzc2lnbmVkIG9uZSAqL1xuICAgIHZhciBwcmV2ID0gdGhpcy50YWdNYXBbaWRdO1xuICAgIGlmIChwcmV2ICE9PSB1bmRlZmluZWQgJiYgIXByZXYuc2VhbGVkKSB7XG4gICAgICByZXR1cm4gcHJldjtcbiAgICB9XG5cbiAgICB2YXIgdGFnID0gdGhpcy50YWdzW3RoaXMudGFncy5sZW5ndGggLSAxXTtcblxuICAgIC8qIHNoYXJkIChjcmVhdGUgYSBuZXcgdGFnKSBpZiB0aGUgdGFnIGlzIGV4aGF1c3RlZCAoU2VlIE1BWF9TSVpFKSAqL1xuICAgIHRoaXMuY2FwYWNpdHkgLT0gMTtcblxuICAgIGlmICh0aGlzLmNhcGFjaXR5ID09PSAwKSB7XG4gICAgICB0aGlzLmNhcGFjaXR5ID0gTUFYX1NJWkU7XG4gICAgICB0YWcgPSB0aGlzLm1ha2VUYWcodGFnKTtcbiAgICAgIHRoaXMudGFncy5wdXNoKHRhZyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMudGFnTWFwW2lkXSA9IHRhZztcbiAgfTtcblxuICAvKiBtYWlubHkgZm9yIGNyZWF0ZUdsb2JhbFN0eWxlIHRvIGNoZWNrIGZvciBpdHMgaWQgKi9cblxuXG4gIFN0eWxlU2hlZXQucHJvdG90eXBlLmhhc0lkID0gZnVuY3Rpb24gaGFzSWQoaWQpIHtcbiAgICByZXR1cm4gdGhpcy50YWdNYXBbaWRdICE9PSB1bmRlZmluZWQ7XG4gIH07XG5cbiAgLyogY2FjaGluZyBsYXllciBjaGVja2luZyBpZCtuYW1lIHRvIGFscmVhZHkgaGF2ZSBhIGNvcnJlc3BvbmRpbmcgdGFnIGFuZCBpbmplY3RlZCBydWxlcyAqL1xuXG5cbiAgU3R5bGVTaGVldC5wcm90b3R5cGUuaGFzTmFtZUZvcklkID0gZnVuY3Rpb24gaGFzTmFtZUZvcklkKGlkLCBuYW1lKSB7XG4gICAgLyogZXhjZXB0aW9uIGZvciByZWh5ZHJhdGVkIG5hbWVzIHdoaWNoIGFyZSBjaGVja2VkIHNlcGFyYXRlbHkgKi9cbiAgICBpZiAodGhpcy5pZ25vcmVSZWh5ZHJhdGVkTmFtZXNbaWRdID09PSB1bmRlZmluZWQgJiYgdGhpcy5yZWh5ZHJhdGVkTmFtZXNbbmFtZV0pIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHZhciB0YWcgPSB0aGlzLnRhZ01hcFtpZF07XG4gICAgcmV0dXJuIHRhZyAhPT0gdW5kZWZpbmVkICYmIHRhZy5oYXNOYW1lRm9ySWQoaWQsIG5hbWUpO1xuICB9O1xuXG4gIC8qIHJlZ2lzdGVycyBhIGNvbXBvbmVudElkIGFuZCByZWdpc3RlcnMgaXQgb24gaXRzIHRhZyAqL1xuXG5cbiAgU3R5bGVTaGVldC5wcm90b3R5cGUuZGVmZXJyZWRJbmplY3QgPSBmdW5jdGlvbiBkZWZlcnJlZEluamVjdChpZCwgY3NzUnVsZXMpIHtcbiAgICAvKiBkb24ndCBpbmplY3Qgd2hlbiB0aGUgaWQgaXMgYWxyZWFkeSByZWdpc3RlcmVkICovXG4gICAgaWYgKHRoaXMudGFnTWFwW2lkXSAhPT0gdW5kZWZpbmVkKSByZXR1cm47XG5cbiAgICB2YXIgY2xvbmVzID0gdGhpcy5jbG9uZXM7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNsb25lcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgY2xvbmVzW2ldLmRlZmVycmVkSW5qZWN0KGlkLCBjc3NSdWxlcyk7XG4gICAgfVxuXG4gICAgdGhpcy5nZXRUYWdGb3JJZChpZCkuaW5zZXJ0TWFya2VyKGlkKTtcbiAgICB0aGlzLmRlZmVycmVkW2lkXSA9IGNzc1J1bGVzO1xuICB9O1xuXG4gIC8qIGluamVjdHMgcnVsZXMgZm9yIGEgZ2l2ZW4gaWQgd2l0aCBhIG5hbWUgdGhhdCB3aWxsIG5lZWQgdG8gYmUgY2FjaGVkICovXG5cblxuICBTdHlsZVNoZWV0LnByb3RvdHlwZS5pbmplY3QgPSBmdW5jdGlvbiBpbmplY3QoaWQsIGNzc1J1bGVzLCBuYW1lKSB7XG4gICAgdmFyIGNsb25lcyA9IHRoaXMuY2xvbmVzO1xuXG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNsb25lcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgY2xvbmVzW2ldLmluamVjdChpZCwgY3NzUnVsZXMsIG5hbWUpO1xuICAgIH1cblxuICAgIHZhciB0YWcgPSB0aGlzLmdldFRhZ0ZvcklkKGlkKTtcblxuICAgIC8qIGFkZCBkZWZlcnJlZCBydWxlcyBmb3IgY29tcG9uZW50ICovXG4gICAgaWYgKHRoaXMuZGVmZXJyZWRbaWRdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIC8vIENvbWJpbmUgcGFzc2VkIGNzc1J1bGVzIHdpdGggcHJldmlvdXNseSBkZWZlcnJlZCBDU1MgcnVsZXNcbiAgICAgIC8vIE5PVEU6IFdlIGNhbm5vdCBtdXRhdGUgdGhlIGRlZmVycmVkIGFycmF5IGl0c2VsZiBhcyBhbGwgY2xvbmVzXG4gICAgICAvLyBkbyB0aGUgc2FtZSAoc2VlIGNsb25lc1tpXS5pbmplY3QpXG4gICAgICB2YXIgcnVsZXMgPSB0aGlzLmRlZmVycmVkW2lkXS5jb25jYXQoY3NzUnVsZXMpO1xuICAgICAgdGFnLmluc2VydFJ1bGVzKGlkLCBydWxlcywgbmFtZSk7XG5cbiAgICAgIHRoaXMuZGVmZXJyZWRbaWRdID0gdW5kZWZpbmVkO1xuICAgIH0gZWxzZSB7XG4gICAgICB0YWcuaW5zZXJ0UnVsZXMoaWQsIGNzc1J1bGVzLCBuYW1lKTtcbiAgICB9XG4gIH07XG5cbiAgLyogcmVtb3ZlcyBhbGwgcnVsZXMgZm9yIGEgZ2l2ZW4gaWQsIHdoaWNoIGRvZXNuJ3QgcmVtb3ZlIGl0cyBtYXJrZXIgYnV0IHJlc2V0cyBpdCAqL1xuXG5cbiAgU3R5bGVTaGVldC5wcm90b3R5cGUucmVtb3ZlID0gZnVuY3Rpb24gcmVtb3ZlKGlkKSB7XG4gICAgdmFyIHRhZyA9IHRoaXMudGFnTWFwW2lkXTtcbiAgICBpZiAodGFnID09PSB1bmRlZmluZWQpIHJldHVybjtcblxuICAgIHZhciBjbG9uZXMgPSB0aGlzLmNsb25lcztcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2xvbmVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICBjbG9uZXNbaV0ucmVtb3ZlKGlkKTtcbiAgICB9XG5cbiAgICAvKiByZW1vdmUgYWxsIHJ1bGVzIGZyb20gdGhlIHRhZyAqL1xuICAgIHRhZy5yZW1vdmVSdWxlcyhpZCk7XG5cbiAgICAvKiBpZ25vcmUgcG9zc2libGUgcmVoeWRyYXRlZCBuYW1lcyAqL1xuICAgIHRoaXMuaWdub3JlUmVoeWRyYXRlZE5hbWVzW2lkXSA9IHRydWU7XG5cbiAgICAvKiBkZWxldGUgcG9zc2libGUgZGVmZXJyZWQgcnVsZXMgKi9cbiAgICB0aGlzLmRlZmVycmVkW2lkXSA9IHVuZGVmaW5lZDtcbiAgfTtcblxuICBTdHlsZVNoZWV0LnByb3RvdHlwZS50b0hUTUwgPSBmdW5jdGlvbiB0b0hUTUwoKSB7XG4gICAgcmV0dXJuIHRoaXMudGFncy5tYXAoZnVuY3Rpb24gKHRhZykge1xuICAgICAgcmV0dXJuIHRhZy50b0hUTUwoKTtcbiAgICB9KS5qb2luKCcnKTtcbiAgfTtcblxuICBTdHlsZVNoZWV0LnByb3RvdHlwZS50b1JlYWN0RWxlbWVudHMgPSBmdW5jdGlvbiB0b1JlYWN0RWxlbWVudHMoKSB7XG4gICAgdmFyIGlkID0gdGhpcy5pZDtcblxuXG4gICAgcmV0dXJuIHRoaXMudGFncy5tYXAoZnVuY3Rpb24gKHRhZywgaSkge1xuICAgICAgdmFyIGtleSA9ICdzYy0nICsgaWQgKyAnLScgKyBpO1xuICAgICAgcmV0dXJuIGNsb25lRWxlbWVudCh0YWcudG9FbGVtZW50KCksIHsga2V5OiBrZXkgfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgY3JlYXRlQ2xhc3MoU3R5bGVTaGVldCwgbnVsbCwgW3tcbiAgICBrZXk6ICdtYXN0ZXInLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0JCQxKCkge1xuICAgICAgcmV0dXJuIG1hc3RlciB8fCAobWFzdGVyID0gbmV3IFN0eWxlU2hlZXQoKS5yZWh5ZHJhdGUoKSk7XG4gICAgfVxuXG4gICAgLyogTk9URTogVGhpcyBpcyBqdXN0IGZvciBiYWNrd2FyZHMtY29tcGF0aWJpbGl0eSB3aXRoIGplc3Qtc3R5bGVkLWNvbXBvbmVudHMgKi9cblxuICB9LCB7XG4gICAga2V5OiAnaW5zdGFuY2UnLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0JCQxKCkge1xuICAgICAgcmV0dXJuIFN0eWxlU2hlZXQubWFzdGVyO1xuICAgIH1cbiAgfV0pO1xuICByZXR1cm4gU3R5bGVTaGVldDtcbn0oKTtcblxuLy8gXG5cbnZhciBLZXlmcmFtZXMgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEtleWZyYW1lcyhuYW1lLCBydWxlcykge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICBjbGFzc0NhbGxDaGVjayh0aGlzLCBLZXlmcmFtZXMpO1xuXG4gICAgdGhpcy5pbmplY3QgPSBmdW5jdGlvbiAoc3R5bGVTaGVldCkge1xuICAgICAgaWYgKCFzdHlsZVNoZWV0Lmhhc05hbWVGb3JJZChfdGhpcy5pZCwgX3RoaXMubmFtZSkpIHtcbiAgICAgICAgc3R5bGVTaGVldC5pbmplY3QoX3RoaXMuaWQsIF90aGlzLnJ1bGVzLCBfdGhpcy5uYW1lKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgdGhpcy50b1N0cmluZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHRocm93IG5ldyBTdHlsZWRDb21wb25lbnRzRXJyb3IoMTIsIFN0cmluZyhfdGhpcy5uYW1lKSk7XG4gICAgfTtcblxuICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgdGhpcy5ydWxlcyA9IHJ1bGVzO1xuXG4gICAgdGhpcy5pZCA9ICdzYy1rZXlmcmFtZXMtJyArIG5hbWU7XG4gIH1cblxuICBLZXlmcmFtZXMucHJvdG90eXBlLmdldE5hbWUgPSBmdW5jdGlvbiBnZXROYW1lKCkge1xuICAgIHJldHVybiB0aGlzLm5hbWU7XG4gIH07XG5cbiAgcmV0dXJuIEtleWZyYW1lcztcbn0oKTtcblxuLy8gXG5cbi8qKlxuICogaW5saW5lZCB2ZXJzaW9uIG9mXG4gKiBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svZmJqcy9ibG9iL21hc3Rlci9wYWNrYWdlcy9mYmpzL3NyYy9jb3JlL2h5cGhlbmF0ZVN0eWxlTmFtZS5qc1xuICovXG5cbnZhciB1cHBlcmNhc2VQYXR0ZXJuID0gLyhbQS1aXSkvZztcbnZhciBtc1BhdHRlcm4gPSAvXm1zLS87XG5cbi8qKlxuICogSHlwaGVuYXRlcyBhIGNhbWVsY2FzZWQgQ1NTIHByb3BlcnR5IG5hbWUsIGZvciBleGFtcGxlOlxuICpcbiAqICAgPiBoeXBoZW5hdGVTdHlsZU5hbWUoJ2JhY2tncm91bmRDb2xvcicpXG4gKiAgIDwgXCJiYWNrZ3JvdW5kLWNvbG9yXCJcbiAqICAgPiBoeXBoZW5hdGVTdHlsZU5hbWUoJ01velRyYW5zaXRpb24nKVxuICogICA8IFwiLW1vei10cmFuc2l0aW9uXCJcbiAqICAgPiBoeXBoZW5hdGVTdHlsZU5hbWUoJ21zVHJhbnNpdGlvbicpXG4gKiAgIDwgXCItbXMtdHJhbnNpdGlvblwiXG4gKlxuICogQXMgTW9kZXJuaXpyIHN1Z2dlc3RzIChodHRwOi8vbW9kZXJuaXpyLmNvbS9kb2NzLyNwcmVmaXhlZCksIGFuIGBtc2AgcHJlZml4XG4gKiBpcyBjb252ZXJ0ZWQgdG8gYC1tcy1gLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmdcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gaHlwaGVuYXRlU3R5bGVOYW1lKHN0cmluZykge1xuICByZXR1cm4gc3RyaW5nLnJlcGxhY2UodXBwZXJjYXNlUGF0dGVybiwgJy0kMScpLnRvTG93ZXJDYXNlKCkucmVwbGFjZShtc1BhdHRlcm4sICctbXMtJyk7XG59XG5cbi8vIFxuXG4vLyBUYWtlbiBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWFjdC9ibG9iL2I4N2FhYmRmZTFiNzQ2MWU3MzMxYWJiMzYwMWQ5ZTZiYjI3NTQ0YmMvcGFja2FnZXMvcmVhY3QtZG9tL3NyYy9zaGFyZWQvZGFuZ2Vyb3VzU3R5bGVWYWx1ZS5qc1xuZnVuY3Rpb24gYWRkVW5pdElmTmVlZGVkKG5hbWUsIHZhbHVlKSB7XG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbWlsYWphY2svZXNsaW50LXBsdWdpbi1mbG93dHlwZS1lcnJvcnMvaXNzdWVzLzEzM1xuICAvLyAkRmxvd0ZpeE1lXG4gIGlmICh2YWx1ZSA9PSBudWxsIHx8IHR5cGVvZiB2YWx1ZSA9PT0gJ2Jvb2xlYW4nIHx8IHZhbHVlID09PSAnJykge1xuICAgIHJldHVybiAnJztcbiAgfVxuXG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInICYmIHZhbHVlICE9PSAwICYmICEobmFtZSBpbiB1bml0bGVzcykpIHtcbiAgICByZXR1cm4gdmFsdWUgKyAncHgnOyAvLyBQcmVzdW1lcyBpbXBsaWNpdCAncHgnIHN1ZmZpeCBmb3IgdW5pdGxlc3MgbnVtYmVyc1xuICB9XG5cbiAgcmV0dXJuIFN0cmluZyh2YWx1ZSkudHJpbSgpO1xufVxuXG4vLyBcblxuLyoqXG4gKiBJdCdzIGZhbHNpc2ggbm90IGZhbHN5IGJlY2F1c2UgMCBpcyBhbGxvd2VkLlxuICovXG52YXIgaXNGYWxzaXNoID0gZnVuY3Rpb24gaXNGYWxzaXNoKGNodW5rKSB7XG4gIHJldHVybiBjaHVuayA9PT0gdW5kZWZpbmVkIHx8IGNodW5rID09PSBudWxsIHx8IGNodW5rID09PSBmYWxzZSB8fCBjaHVuayA9PT0gJyc7XG59O1xuXG52YXIgb2JqVG9Dc3MgPSBmdW5jdGlvbiBvYmpUb0NzcyhvYmosIHByZXZLZXkpIHtcbiAgdmFyIGNzcyA9IE9iamVjdC5rZXlzKG9iaikuZmlsdGVyKGZ1bmN0aW9uIChrZXkpIHtcbiAgICByZXR1cm4gIWlzRmFsc2lzaChvYmpba2V5XSk7XG4gIH0pLm1hcChmdW5jdGlvbiAoa2V5KSB7XG4gICAgaWYgKGlzUGxhaW5PYmplY3Qob2JqW2tleV0pKSByZXR1cm4gb2JqVG9Dc3Mob2JqW2tleV0sIGtleSk7XG4gICAgcmV0dXJuIGh5cGhlbmF0ZVN0eWxlTmFtZShrZXkpICsgJzogJyArIGFkZFVuaXRJZk5lZWRlZChrZXksIG9ialtrZXldKSArICc7JztcbiAgfSkuam9pbignICcpO1xuICByZXR1cm4gcHJldktleSA/IHByZXZLZXkgKyAnIHtcXG4gICcgKyBjc3MgKyAnXFxufScgOiBjc3M7XG59O1xuXG5mdW5jdGlvbiBmbGF0dGVuKGNodW5rLCBleGVjdXRpb25Db250ZXh0LCBzdHlsZVNoZWV0KSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGNodW5rKSkge1xuICAgIHZhciBydWxlU2V0ID0gW107XG5cbiAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gY2h1bmsubGVuZ3RoLCByZXN1bHQ7IGkgPCBsZW47IGkgKz0gMSkge1xuICAgICAgcmVzdWx0ID0gZmxhdHRlbihjaHVua1tpXSwgZXhlY3V0aW9uQ29udGV4dCwgc3R5bGVTaGVldCk7XG5cbiAgICAgIGlmIChyZXN1bHQgPT09IG51bGwpIGNvbnRpbnVlO2Vsc2UgaWYgKEFycmF5LmlzQXJyYXkocmVzdWx0KSkgcnVsZVNldC5wdXNoLmFwcGx5KHJ1bGVTZXQsIHJlc3VsdCk7ZWxzZSBydWxlU2V0LnB1c2gocmVzdWx0KTtcbiAgICB9XG5cbiAgICByZXR1cm4gcnVsZVNldDtcbiAgfVxuXG4gIGlmIChpc0ZhbHNpc2goY2h1bmspKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICAvKiBIYW5kbGUgb3RoZXIgY29tcG9uZW50cyAqL1xuICBpZiAoaXNTdHlsZWRDb21wb25lbnQoY2h1bmspKSB7XG4gICAgcmV0dXJuICcuJyArIGNodW5rLnN0eWxlZENvbXBvbmVudElkO1xuICB9XG5cbiAgLyogRWl0aGVyIGV4ZWN1dGUgb3IgZGVmZXIgdGhlIGZ1bmN0aW9uICovXG4gIGlmIChpc0Z1bmN0aW9uKGNodW5rKSkge1xuICAgIGlmIChleGVjdXRpb25Db250ZXh0KSB7XG4gICAgICB2YXIgc2hvdWxkVGhyb3cgPSBmYWxzZTtcblxuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5ldy1jYXBcbiAgICAgICAgaWYgKGlzRWxlbWVudChuZXcgY2h1bmsoZXhlY3V0aW9uQ29udGV4dCkpKSB7XG4gICAgICAgICAgc2hvdWxkVGhyb3cgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8qICovXG4gICAgICB9XG5cbiAgICAgIGlmIChzaG91bGRUaHJvdykge1xuICAgICAgICB0aHJvdyBuZXcgU3R5bGVkQ29tcG9uZW50c0Vycm9yKDEzLCBnZXRDb21wb25lbnROYW1lKGNodW5rKSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBmbGF0dGVuKGNodW5rKGV4ZWN1dGlvbkNvbnRleHQpLCBleGVjdXRpb25Db250ZXh0LCBzdHlsZVNoZWV0KTtcbiAgICB9IGVsc2UgcmV0dXJuIGNodW5rO1xuICB9XG5cbiAgaWYgKGNodW5rIGluc3RhbmNlb2YgS2V5ZnJhbWVzKSB7XG4gICAgaWYgKHN0eWxlU2hlZXQpIHtcbiAgICAgIGNodW5rLmluamVjdChzdHlsZVNoZWV0KTtcbiAgICAgIHJldHVybiBjaHVuay5nZXROYW1lKCk7XG4gICAgfSBlbHNlIHJldHVybiBjaHVuaztcbiAgfVxuXG4gIC8qIEhhbmRsZSBvYmplY3RzICovXG4gIHJldHVybiBpc1BsYWluT2JqZWN0KGNodW5rKSA/IG9ialRvQ3NzKGNodW5rKSA6IGNodW5rLnRvU3RyaW5nKCk7XG59XG5cbi8vIFxuXG5mdW5jdGlvbiBjc3Moc3R5bGVzKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBpbnRlcnBvbGF0aW9ucyA9IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBpbnRlcnBvbGF0aW9uc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICBpZiAoaXNGdW5jdGlvbihzdHlsZXMpIHx8IGlzUGxhaW5PYmplY3Qoc3R5bGVzKSkge1xuICAgIC8vICRGbG93Rml4TWVcbiAgICByZXR1cm4gZmxhdHRlbihpbnRlcmxlYXZlKEVNUFRZX0FSUkFZLCBbc3R5bGVzXS5jb25jYXQoaW50ZXJwb2xhdGlvbnMpKSk7XG4gIH1cblxuICAvLyAkRmxvd0ZpeE1lXG4gIHJldHVybiBmbGF0dGVuKGludGVybGVhdmUoc3R5bGVzLCBpbnRlcnBvbGF0aW9ucykpO1xufVxuXG4vLyBcblxuZnVuY3Rpb24gY29uc3RydWN0V2l0aE9wdGlvbnMoY29tcG9uZW50Q29uc3RydWN0b3IsIHRhZykge1xuICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogRU1QVFlfT0JKRUNUO1xuXG4gIGlmICghaXNWYWxpZEVsZW1lbnRUeXBlKHRhZykpIHtcbiAgICB0aHJvdyBuZXcgU3R5bGVkQ29tcG9uZW50c0Vycm9yKDEsIFN0cmluZyh0YWcpKTtcbiAgfVxuXG4gIC8qIFRoaXMgaXMgY2FsbGFibGUgZGlyZWN0bHkgYXMgYSB0ZW1wbGF0ZSBmdW5jdGlvbiAqL1xuICAvLyAkRmxvd0ZpeE1lOiBOb3QgdHlwZWQgdG8gYXZvaWQgZGVzdHJ1Y3R1cmluZyBhcmd1bWVudHNcbiAgdmFyIHRlbXBsYXRlRnVuY3Rpb24gPSBmdW5jdGlvbiB0ZW1wbGF0ZUZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBjb21wb25lbnRDb25zdHJ1Y3Rvcih0YWcsIG9wdGlvbnMsIGNzcy5hcHBseSh1bmRlZmluZWQsIGFyZ3VtZW50cykpO1xuICB9O1xuXG4gIC8qIElmIGNvbmZpZyBtZXRob2RzIGFyZSBjYWxsZWQsIHdyYXAgdXAgYSBuZXcgdGVtcGxhdGUgZnVuY3Rpb24gYW5kIG1lcmdlIG9wdGlvbnMgKi9cbiAgdGVtcGxhdGVGdW5jdGlvbi53aXRoQ29uZmlnID0gZnVuY3Rpb24gKGNvbmZpZykge1xuICAgIHJldHVybiBjb25zdHJ1Y3RXaXRoT3B0aW9ucyhjb21wb25lbnRDb25zdHJ1Y3RvciwgdGFnLCBfZXh0ZW5kcyh7fSwgb3B0aW9ucywgY29uZmlnKSk7XG4gIH07XG5cbiAgLyogTW9kaWZ5L2luamVjdCBuZXcgcHJvcHMgYXQgcnVudGltZSAqL1xuICB0ZW1wbGF0ZUZ1bmN0aW9uLmF0dHJzID0gZnVuY3Rpb24gKGF0dHJzKSB7XG4gICAgcmV0dXJuIGNvbnN0cnVjdFdpdGhPcHRpb25zKGNvbXBvbmVudENvbnN0cnVjdG9yLCB0YWcsIF9leHRlbmRzKHt9LCBvcHRpb25zLCB7XG4gICAgICBhdHRyczogQXJyYXkucHJvdG90eXBlLmNvbmNhdChvcHRpb25zLmF0dHJzLCBhdHRycykuZmlsdGVyKEJvb2xlYW4pXG4gICAgfSkpO1xuICB9O1xuXG4gIHJldHVybiB0ZW1wbGF0ZUZ1bmN0aW9uO1xufVxuXG4vLyBcbi8vIFNvdXJjZTogaHR0cHM6Ly9naXRodWIuY29tL2dhcnljb3VydC9tdXJtdXJoYXNoLWpzL2Jsb2IvbWFzdGVyL211cm11cmhhc2gyX2djLmpzXG5mdW5jdGlvbiBtdXJtdXJoYXNoKGMpIHtcbiAgZm9yICh2YXIgZSA9IGMubGVuZ3RoIHwgMCwgYSA9IGUgfCAwLCBkID0gMCwgYjsgZSA+PSA0Oykge1xuICAgIGIgPSBjLmNoYXJDb2RlQXQoZCkgJiAyNTUgfCAoYy5jaGFyQ29kZUF0KCsrZCkgJiAyNTUpIDw8IDggfCAoYy5jaGFyQ29kZUF0KCsrZCkgJiAyNTUpIDw8IDE2IHwgKGMuY2hhckNvZGVBdCgrK2QpICYgMjU1KSA8PCAyNCwgYiA9IDE1NDA0ODM0NzcgKiAoYiAmIDY1NTM1KSArICgoMTU0MDQ4MzQ3NyAqIChiID4+PiAxNikgJiA2NTUzNSkgPDwgMTYpLCBiIF49IGIgPj4+IDI0LCBiID0gMTU0MDQ4MzQ3NyAqIChiICYgNjU1MzUpICsgKCgxNTQwNDgzNDc3ICogKGIgPj4+IDE2KSAmIDY1NTM1KSA8PCAxNiksIGEgPSAxNTQwNDgzNDc3ICogKGEgJiA2NTUzNSkgKyAoKDE1NDA0ODM0NzcgKiAoYSA+Pj4gMTYpICYgNjU1MzUpIDw8IDE2KSBeIGIsIGUgLT0gNCwgKytkO1xuICB9XG4gIHN3aXRjaCAoZSkge1xuICAgIGNhc2UgMzpcbiAgICAgIGEgXj0gKGMuY2hhckNvZGVBdChkICsgMikgJiAyNTUpIDw8IDE2O1xuICAgIGNhc2UgMjpcbiAgICAgIGEgXj0gKGMuY2hhckNvZGVBdChkICsgMSkgJiAyNTUpIDw8IDg7XG4gICAgY2FzZSAxOlxuICAgICAgYSBePSBjLmNoYXJDb2RlQXQoZCkgJiAyNTUsIGEgPSAxNTQwNDgzNDc3ICogKGEgJiA2NTUzNSkgKyAoKDE1NDA0ODM0NzcgKiAoYSA+Pj4gMTYpICYgNjU1MzUpIDw8IDE2KTtcbiAgfVxuICBhIF49IGEgPj4+IDEzO1xuICBhID0gMTU0MDQ4MzQ3NyAqIChhICYgNjU1MzUpICsgKCgxNTQwNDgzNDc3ICogKGEgPj4+IDE2KSAmIDY1NTM1KSA8PCAxNik7XG4gIHJldHVybiAoYSBeIGEgPj4+IDE1KSA+Pj4gMDtcbn1cblxuLy8gXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1iaXR3aXNlICovXG5cbi8qIFRoaXMgaXMgdGhlIFwiY2FwYWNpdHlcIiBvZiBvdXIgYWxwaGFiZXQgaS5lLiAyeDI2IGZvciBhbGwgbGV0dGVycyBwbHVzIHRoZWlyIGNhcGl0YWxpc2VkXG4gKiBjb3VudGVycGFydHMgKi9cbnZhciBjaGFyc0xlbmd0aCA9IDUyO1xuXG4vKiBzdGFydCBhdCA3NSBmb3IgJ2EnIHVudGlsICd6JyAoMjUpIGFuZCB0aGVuIHN0YXJ0IGF0IDY1IGZvciBjYXBpdGFsaXNlZCBsZXR0ZXJzICovXG52YXIgZ2V0QWxwaGFiZXRpY0NoYXIgPSBmdW5jdGlvbiBnZXRBbHBoYWJldGljQ2hhcihjb2RlKSB7XG4gIHJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGNvZGUgKyAoY29kZSA+IDI1ID8gMzkgOiA5NykpO1xufTtcblxuLyogaW5wdXQgYSBudW1iZXIsIHVzdWFsbHkgYSBoYXNoIGFuZCBjb252ZXJ0IGl0IHRvIGJhc2UtNTIgKi9cbmZ1bmN0aW9uIGdlbmVyYXRlQWxwaGFiZXRpY05hbWUoY29kZSkge1xuICB2YXIgbmFtZSA9ICcnO1xuICB2YXIgeCA9IHZvaWQgMDtcblxuICAvKiBnZXQgYSBjaGFyIGFuZCBkaXZpZGUgYnkgYWxwaGFiZXQtbGVuZ3RoICovXG4gIGZvciAoeCA9IGNvZGU7IHggPiBjaGFyc0xlbmd0aDsgeCA9IE1hdGguZmxvb3IoeCAvIGNoYXJzTGVuZ3RoKSkge1xuICAgIG5hbWUgPSBnZXRBbHBoYWJldGljQ2hhcih4ICUgY2hhcnNMZW5ndGgpICsgbmFtZTtcbiAgfVxuXG4gIHJldHVybiBnZXRBbHBoYWJldGljQ2hhcih4ICUgY2hhcnNMZW5ndGgpICsgbmFtZTtcbn1cblxuLy8gXG5cbmZ1bmN0aW9uIGhhc0Z1bmN0aW9uT2JqZWN0S2V5KG9iaikge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZ3VhcmQtZm9yLWluLCBuby1yZXN0cmljdGVkLXN5bnRheFxuICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgaWYgKGlzRnVuY3Rpb24ob2JqW2tleV0pKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5cbmZ1bmN0aW9uIGlzU3RhdGljUnVsZXMocnVsZXMsIGF0dHJzKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcnVsZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICB2YXIgcnVsZSA9IHJ1bGVzW2ldO1xuXG4gICAgLy8gcmVjdXJzaXZlIGNhc2VcbiAgICBpZiAoQXJyYXkuaXNBcnJheShydWxlKSAmJiAhaXNTdGF0aWNSdWxlcyhydWxlLCBhdHRycykpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9IGVsc2UgaWYgKGlzRnVuY3Rpb24ocnVsZSkgJiYgIWlzU3R5bGVkQ29tcG9uZW50KHJ1bGUpKSB7XG4gICAgICAvLyBmdW5jdGlvbnMgYXJlIGFsbG93ZWQgdG8gYmUgc3RhdGljIGlmIHRoZXkncmUganVzdCBiZWluZ1xuICAgICAgLy8gdXNlZCB0byBnZXQgdGhlIGNsYXNzbmFtZSBvZiBhIG5lc3RlZCBzdHlsZWQgY29tcG9uZW50XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgaWYgKGF0dHJzLnNvbWUoZnVuY3Rpb24gKHgpIHtcbiAgICByZXR1cm4gaXNGdW5jdGlvbih4KSB8fCBoYXNGdW5jdGlvbk9iamVjdEtleSh4KTtcbiAgfSkpIHJldHVybiBmYWxzZTtcblxuICByZXR1cm4gdHJ1ZTtcbn1cblxuLy8gXG5cbnZhciBpc0hNUkVuYWJsZWQgPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5ob3Q7XG5cbi8qIGNvbWJpbmVzIGhhc2hTdHIgKG11cm11cmhhc2gpIGFuZCBuYW1lR2VuZXJhdG9yIGZvciBjb252ZW5pZW5jZSAqL1xudmFyIGhhc2hlciA9IGZ1bmN0aW9uIGhhc2hlcihzdHIpIHtcbiAgcmV0dXJuIGdlbmVyYXRlQWxwaGFiZXRpY05hbWUobXVybXVyaGFzaChzdHIpKTtcbn07XG5cbi8qXG4gQ29tcG9uZW50U3R5bGUgaXMgYWxsIHRoZSBDU1Mtc3BlY2lmaWMgc3R1ZmYsIG5vdFxuIHRoZSBSZWFjdC1zcGVjaWZpYyBzdHVmZi5cbiAqL1xuXG52YXIgQ29tcG9uZW50U3R5bGUgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIENvbXBvbmVudFN0eWxlKHJ1bGVzLCBhdHRycywgY29tcG9uZW50SWQpIHtcbiAgICBjbGFzc0NhbGxDaGVjayh0aGlzLCBDb21wb25lbnRTdHlsZSk7XG5cbiAgICB0aGlzLnJ1bGVzID0gcnVsZXM7XG4gICAgdGhpcy5pc1N0YXRpYyA9ICFpc0hNUkVuYWJsZWQgJiYgaXNTdGF0aWNSdWxlcyhydWxlcywgYXR0cnMpO1xuICAgIHRoaXMuY29tcG9uZW50SWQgPSBjb21wb25lbnRJZDtcblxuICAgIGlmICghU3R5bGVTaGVldC5tYXN0ZXIuaGFzSWQoY29tcG9uZW50SWQpKSB7XG4gICAgICBTdHlsZVNoZWV0Lm1hc3Rlci5kZWZlcnJlZEluamVjdChjb21wb25lbnRJZCwgW10pO1xuICAgIH1cbiAgfVxuXG4gIC8qXG4gICAgICogRmxhdHRlbnMgYSBydWxlIHNldCBpbnRvIHZhbGlkIENTU1xuICAgICAqIEhhc2hlcyBpdCwgd3JhcHMgdGhlIHdob2xlIGNodW5rIGluIGEgLmhhc2gxMjM0IHt9XG4gICAgICogUmV0dXJucyB0aGUgaGFzaCB0byBiZSBpbmplY3RlZCBvbiByZW5kZXIoKVxuICAgICAqICovXG5cblxuICBDb21wb25lbnRTdHlsZS5wcm90b3R5cGUuZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXMgPSBmdW5jdGlvbiBnZW5lcmF0ZUFuZEluamVjdFN0eWxlcyhleGVjdXRpb25Db250ZXh0LCBzdHlsZVNoZWV0KSB7XG4gICAgdmFyIGlzU3RhdGljID0gdGhpcy5pc1N0YXRpYyxcbiAgICAgICAgY29tcG9uZW50SWQgPSB0aGlzLmNvbXBvbmVudElkLFxuICAgICAgICBsYXN0Q2xhc3NOYW1lID0gdGhpcy5sYXN0Q2xhc3NOYW1lO1xuXG4gICAgaWYgKElTX0JST1dTRVIgJiYgaXNTdGF0aWMgJiYgdHlwZW9mIGxhc3RDbGFzc05hbWUgPT09ICdzdHJpbmcnICYmIHN0eWxlU2hlZXQuaGFzTmFtZUZvcklkKGNvbXBvbmVudElkLCBsYXN0Q2xhc3NOYW1lKSkge1xuICAgICAgcmV0dXJuIGxhc3RDbGFzc05hbWU7XG4gICAgfVxuXG4gICAgdmFyIGZsYXRDU1MgPSBmbGF0dGVuKHRoaXMucnVsZXMsIGV4ZWN1dGlvbkNvbnRleHQsIHN0eWxlU2hlZXQpO1xuICAgIHZhciBuYW1lID0gaGFzaGVyKHRoaXMuY29tcG9uZW50SWQgKyBmbGF0Q1NTLmpvaW4oJycpKTtcbiAgICBpZiAoIXN0eWxlU2hlZXQuaGFzTmFtZUZvcklkKGNvbXBvbmVudElkLCBuYW1lKSkge1xuICAgICAgc3R5bGVTaGVldC5pbmplY3QodGhpcy5jb21wb25lbnRJZCwgc3RyaW5naWZ5UnVsZXMoZmxhdENTUywgJy4nICsgbmFtZSwgdW5kZWZpbmVkLCBjb21wb25lbnRJZCksIG5hbWUpO1xuICAgIH1cblxuICAgIHRoaXMubGFzdENsYXNzTmFtZSA9IG5hbWU7XG4gICAgcmV0dXJuIG5hbWU7XG4gIH07XG5cbiAgQ29tcG9uZW50U3R5bGUuZ2VuZXJhdGVOYW1lID0gZnVuY3Rpb24gZ2VuZXJhdGVOYW1lKHN0cikge1xuICAgIHJldHVybiBoYXNoZXIoc3RyKTtcbiAgfTtcblxuICByZXR1cm4gQ29tcG9uZW50U3R5bGU7XG59KCk7XG5cbi8vIFxuXG52YXIgTElNSVQgPSAyMDA7XG5cbnZhciBjcmVhdGVXYXJuVG9vTWFueUNsYXNzZXMgPSAoZnVuY3Rpb24gKGRpc3BsYXlOYW1lKSB7XG4gIHZhciBnZW5lcmF0ZWRDbGFzc2VzID0ge307XG4gIHZhciB3YXJuaW5nU2VlbiA9IGZhbHNlO1xuXG4gIHJldHVybiBmdW5jdGlvbiAoY2xhc3NOYW1lKSB7XG4gICAgaWYgKCF3YXJuaW5nU2Vlbikge1xuICAgICAgZ2VuZXJhdGVkQ2xhc3Nlc1tjbGFzc05hbWVdID0gdHJ1ZTtcbiAgICAgIGlmIChPYmplY3Qua2V5cyhnZW5lcmF0ZWRDbGFzc2VzKS5sZW5ndGggPj0gTElNSVQpIHtcbiAgICAgICAgLy8gVW5hYmxlIHRvIGZpbmQgbGF0ZXN0UnVsZSBpbiB0ZXN0IGVudmlyb25tZW50LlxuICAgICAgICAvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlLCBwcmVmZXItdGVtcGxhdGUgKi9cbiAgICAgICAgY29uc29sZS53YXJuKCdPdmVyICcgKyBMSU1JVCArICcgY2xhc3NlcyB3ZXJlIGdlbmVyYXRlZCBmb3IgY29tcG9uZW50ICcgKyBkaXNwbGF5TmFtZSArICcuIFxcbicgKyAnQ29uc2lkZXIgdXNpbmcgdGhlIGF0dHJzIG1ldGhvZCwgdG9nZXRoZXIgd2l0aCBhIHN0eWxlIG9iamVjdCBmb3IgZnJlcXVlbnRseSBjaGFuZ2VkIHN0eWxlcy5cXG4nICsgJ0V4YW1wbGU6XFxuJyArICcgIGNvbnN0IENvbXBvbmVudCA9IHN0eWxlZC5kaXYuYXR0cnMoe1xcbicgKyAnICAgIHN0eWxlOiAoeyBiYWNrZ3JvdW5kIH0pID0+ICh7XFxuJyArICcgICAgICBiYWNrZ3JvdW5kLFxcbicgKyAnICAgIH0pLFxcbicgKyAnICB9KWB3aWR0aDogMTAwJTtgXFxuXFxuJyArICcgIDxDb21wb25lbnQgLz4nKTtcbiAgICAgICAgd2FybmluZ1NlZW4gPSB0cnVlO1xuICAgICAgICBnZW5lcmF0ZWRDbGFzc2VzID0ge307XG4gICAgICB9XG4gICAgfVxuICB9O1xufSk7XG5cbi8vIFxuXG52YXIgZGV0ZXJtaW5lVGhlbWUgPSAoZnVuY3Rpb24gKHByb3BzLCBmYWxsYmFja1RoZW1lKSB7XG4gIHZhciBkZWZhdWx0UHJvcHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IEVNUFRZX09CSkVDVDtcblxuICAvLyBQcm9wcyBzaG91bGQgdGFrZSBwcmVjZWRlbmNlIG92ZXIgVGhlbWVQcm92aWRlciwgd2hpY2ggc2hvdWxkIHRha2UgcHJlY2VkZW5jZSBvdmVyXG4gIC8vIGRlZmF1bHRQcm9wcywgYnV0IFJlYWN0IGF1dG9tYXRpY2FsbHkgcHV0cyBkZWZhdWx0UHJvcHMgb24gcHJvcHMuXG5cbiAgLyogZXNsaW50LWRpc2FibGUgcmVhY3QvcHJvcC10eXBlcywgZmxvd3R5cGUtZXJyb3JzL3Nob3ctZXJyb3JzICovXG4gIHZhciBpc0RlZmF1bHRUaGVtZSA9IGRlZmF1bHRQcm9wcyA/IHByb3BzLnRoZW1lID09PSBkZWZhdWx0UHJvcHMudGhlbWUgOiBmYWxzZTtcbiAgdmFyIHRoZW1lID0gcHJvcHMudGhlbWUgJiYgIWlzRGVmYXVsdFRoZW1lID8gcHJvcHMudGhlbWUgOiBmYWxsYmFja1RoZW1lIHx8IGRlZmF1bHRQcm9wcy50aGVtZTtcbiAgLyogZXNsaW50LWVuYWJsZSAqL1xuXG4gIHJldHVybiB0aGVtZTtcbn0pO1xuXG4vLyBcbnZhciBlc2NhcGVSZWdleCA9IC9bW1xcXS4jKiQ+PCt+PXxeOigpLFwiJ2AtXSsvZztcbnZhciBkYXNoZXNBdEVuZHMgPSAvKF4tfC0kKS9nO1xuXG4vKipcbiAqIFRPRE86IEV4cGxvcmUgdXNpbmcgQ1NTLmVzY2FwZSB3aGVuIGl0IGJlY29tZXMgbW9yZSBhdmFpbGFibGVcbiAqIGluIGV2ZXJncmVlbiBicm93c2Vycy5cbiAqL1xuZnVuY3Rpb24gZXNjYXBlKHN0cikge1xuICByZXR1cm4gc3RyXG4gIC8vIFJlcGxhY2UgYWxsIHBvc3NpYmxlIENTUyBzZWxlY3RvcnNcbiAgLnJlcGxhY2UoZXNjYXBlUmVnZXgsICctJylcblxuICAvLyBSZW1vdmUgZXh0cmFuZW91cyBoeXBoZW5zIGF0IHRoZSBzdGFydCBhbmQgZW5kXG4gIC5yZXBsYWNlKGRhc2hlc0F0RW5kcywgJycpO1xufVxuXG4vLyBcblxuZnVuY3Rpb24gaXNUYWcodGFyZ2V0KSB7XG4gIHJldHVybiB0eXBlb2YgdGFyZ2V0ID09PSAnc3RyaW5nJyAmJiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IHRhcmdldC5jaGFyQXQoMCkgPT09IHRhcmdldC5jaGFyQXQoMCkudG9Mb3dlckNhc2UoKSA6IHRydWUpO1xufVxuXG4vLyBcblxuZnVuY3Rpb24gZ2VuZXJhdGVEaXNwbGF5TmFtZSh0YXJnZXQpIHtcbiAgLy8gJEZsb3dGaXhNZVxuICByZXR1cm4gaXNUYWcodGFyZ2V0KSA/ICdzdHlsZWQuJyArIHRhcmdldCA6ICdTdHlsZWQoJyArIGdldENvbXBvbmVudE5hbWUodGFyZ2V0KSArICcpJztcbn1cblxudmFyIF9UWVBFX1NUQVRJQ1M7XG5cbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcbiAgY29udGV4dFR5cGVzOiB0cnVlLFxuICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZSxcbiAgdHlwZTogdHJ1ZVxufTtcblxudmFyIEtOT1dOX1NUQVRJQ1MgPSB7XG4gIG5hbWU6IHRydWUsXG4gIGxlbmd0aDogdHJ1ZSxcbiAgcHJvdG90eXBlOiB0cnVlLFxuICBjYWxsZXI6IHRydWUsXG4gIGNhbGxlZTogdHJ1ZSxcbiAgYXJndW1lbnRzOiB0cnVlLFxuICBhcml0eTogdHJ1ZVxufTtcblxudmFyIFRZUEVfU1RBVElDUyA9IChfVFlQRV9TVEFUSUNTID0ge30sIF9UWVBFX1NUQVRJQ1NbRm9yd2FyZFJlZl0gPSB7XG4gICQkdHlwZW9mOiB0cnVlLFxuICByZW5kZXI6IHRydWVcbn0sIF9UWVBFX1NUQVRJQ1MpO1xuXG52YXIgZGVmaW5lUHJvcGVydHkkMSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSxcbiAgICBnZXRPd25Qcm9wZXJ0eU5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMsXG4gICAgX09iamVjdCRnZXRPd25Qcm9wZXJ0ID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyxcbiAgICBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBfT2JqZWN0JGdldE93blByb3BlcnQgPT09IHVuZGVmaW5lZCA/IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIFtdO1xufSA6IF9PYmplY3QkZ2V0T3duUHJvcGVydCxcbiAgICBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yLFxuICAgIGdldFByb3RvdHlwZU9mID0gT2JqZWN0LmdldFByb3RvdHlwZU9mLFxuICAgIG9iamVjdFByb3RvdHlwZSA9IE9iamVjdC5wcm90b3R5cGU7XG52YXIgYXJyYXlQcm90b3R5cGUgPSBBcnJheS5wcm90b3R5cGU7XG5cblxuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuXG4gICAgdmFyIGluaGVyaXRlZENvbXBvbmVudCA9IGdldFByb3RvdHlwZU9mKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIGluaGVyaXRlZENvbXBvbmVudCwgYmxhY2tsaXN0KTtcbiAgICB9XG5cbiAgICB2YXIga2V5cyA9IGFycmF5UHJvdG90eXBlLmNvbmNhdChnZXRPd25Qcm9wZXJ0eU5hbWVzKHNvdXJjZUNvbXBvbmVudCksXG4gICAgLy8gJEZsb3dGaXhNZVxuICAgIGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcblxuICAgIHZhciB0YXJnZXRTdGF0aWNzID0gVFlQRV9TVEFUSUNTW3RhcmdldENvbXBvbmVudC4kJHR5cGVvZl0gfHwgUkVBQ1RfU1RBVElDUztcblxuICAgIHZhciBzb3VyY2VTdGF0aWNzID0gVFlQRV9TVEFUSUNTW3NvdXJjZUNvbXBvbmVudC4kJHR5cGVvZl0gfHwgUkVBQ1RfU1RBVElDUztcblxuICAgIHZhciBpID0ga2V5cy5sZW5ndGg7XG4gICAgdmFyIGRlc2NyaXB0b3IgPSB2b2lkIDA7XG4gICAgdmFyIGtleSA9IHZvaWQgMDtcblxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wbHVzcGx1c1xuICAgIHdoaWxlIChpLS0pIHtcbiAgICAgIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmIChcbiAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgICFLTk9XTl9TVEFUSUNTW2tleV0gJiYgIShibGFja2xpc3QgJiYgYmxhY2tsaXN0W2tleV0pICYmICEoc291cmNlU3RhdGljcyAmJiBzb3VyY2VTdGF0aWNzW2tleV0pICYmXG4gICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICBkZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZUNvbXBvbmVudCwga2V5KTtcblxuICAgICAgICBpZiAoZGVzY3JpcHRvcikge1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgICBkZWZpbmVQcm9wZXJ0eSQxKHRhcmdldENvbXBvbmVudCwga2V5LCBkZXNjcmlwdG9yKTtcbiAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAvKiBmYWlsIHNpbGVudGx5ICovXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbi8vIFxuZnVuY3Rpb24gaXNEZXJpdmVkUmVhY3RDb21wb25lbnQoZm4pIHtcbiAgcmV0dXJuICEhKGZuICYmIGZuLnByb3RvdHlwZSAmJiBmbi5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudCk7XG59XG5cbi8vIFxuLy8gSGVscGVyIHRvIGNhbGwgYSBnaXZlbiBmdW5jdGlvbiwgb25seSBvbmNlXG52YXIgb25jZSA9IChmdW5jdGlvbiAoY2IpIHtcbiAgdmFyIGNhbGxlZCA9IGZhbHNlO1xuXG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKCFjYWxsZWQpIHtcbiAgICAgIGNhbGxlZCA9IHRydWU7XG4gICAgICBjYi5hcHBseSh1bmRlZmluZWQsIGFyZ3VtZW50cyk7XG4gICAgfVxuICB9O1xufSk7XG5cbi8vIFxuXG52YXIgVGhlbWVDb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuXG52YXIgVGhlbWVDb25zdW1lciA9IFRoZW1lQ29udGV4dC5Db25zdW1lcjtcblxuLyoqXG4gKiBQcm92aWRlIGEgdGhlbWUgdG8gYW4gZW50aXJlIHJlYWN0IGNvbXBvbmVudCB0cmVlIHZpYSBjb250ZXh0XG4gKi9cblxudmFyIFRoZW1lUHJvdmlkZXIgPSBmdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICBpbmhlcml0cyhUaGVtZVByb3ZpZGVyLCBfQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBUaGVtZVByb3ZpZGVyKHByb3BzKSB7XG4gICAgY2xhc3NDYWxsQ2hlY2sodGhpcywgVGhlbWVQcm92aWRlcik7XG5cbiAgICB2YXIgX3RoaXMgPSBwb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9Db21wb25lbnQuY2FsbCh0aGlzLCBwcm9wcykpO1xuXG4gICAgX3RoaXMuZ2V0Q29udGV4dCA9IG1lbW9pemUoX3RoaXMuZ2V0Q29udGV4dC5iaW5kKF90aGlzKSk7XG4gICAgX3RoaXMucmVuZGVySW5uZXIgPSBfdGhpcy5yZW5kZXJJbm5lci5iaW5kKF90aGlzKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBUaGVtZVByb3ZpZGVyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgaWYgKCF0aGlzLnByb3BzLmNoaWxkcmVuKSByZXR1cm4gbnVsbDtcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgVGhlbWVDb250ZXh0LkNvbnN1bWVyLFxuICAgICAgbnVsbCxcbiAgICAgIHRoaXMucmVuZGVySW5uZXJcbiAgICApO1xuICB9O1xuXG4gIFRoZW1lUHJvdmlkZXIucHJvdG90eXBlLnJlbmRlcklubmVyID0gZnVuY3Rpb24gcmVuZGVySW5uZXIob3V0ZXJUaGVtZSkge1xuICAgIHZhciBjb250ZXh0ID0gdGhpcy5nZXRDb250ZXh0KHRoaXMucHJvcHMudGhlbWUsIG91dGVyVGhlbWUpO1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICBUaGVtZUNvbnRleHQuUHJvdmlkZXIsXG4gICAgICB7IHZhbHVlOiBjb250ZXh0IH0sXG4gICAgICBSZWFjdC5DaGlsZHJlbi5vbmx5KHRoaXMucHJvcHMuY2hpbGRyZW4pXG4gICAgKTtcbiAgfTtcblxuICAvKipcbiAgICogR2V0IHRoZSB0aGVtZSBmcm9tIHRoZSBwcm9wcywgc3VwcG9ydGluZyBib3RoIChvdXRlclRoZW1lKSA9PiB7fVxuICAgKiBhcyB3ZWxsIGFzIG9iamVjdCBub3RhdGlvblxuICAgKi9cblxuXG4gIFRoZW1lUHJvdmlkZXIucHJvdG90eXBlLmdldFRoZW1lID0gZnVuY3Rpb24gZ2V0VGhlbWUodGhlbWUsIG91dGVyVGhlbWUpIHtcbiAgICBpZiAoaXNGdW5jdGlvbih0aGVtZSkpIHtcbiAgICAgIHZhciBtZXJnZWRUaGVtZSA9IHRoZW1lKG91dGVyVGhlbWUpO1xuXG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiAobWVyZ2VkVGhlbWUgPT09IG51bGwgfHwgQXJyYXkuaXNBcnJheShtZXJnZWRUaGVtZSkgfHwgKHR5cGVvZiBtZXJnZWRUaGVtZSA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YobWVyZ2VkVGhlbWUpKSAhPT0gJ29iamVjdCcpKSB7XG4gICAgICAgIHRocm93IG5ldyBTdHlsZWRDb21wb25lbnRzRXJyb3IoNyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBtZXJnZWRUaGVtZTtcbiAgICB9XG5cbiAgICBpZiAodGhlbWUgPT09IG51bGwgfHwgQXJyYXkuaXNBcnJheSh0aGVtZSkgfHwgKHR5cGVvZiB0aGVtZSA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YodGhlbWUpKSAhPT0gJ29iamVjdCcpIHtcbiAgICAgIHRocm93IG5ldyBTdHlsZWRDb21wb25lbnRzRXJyb3IoOCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIF9leHRlbmRzKHt9LCBvdXRlclRoZW1lLCB0aGVtZSk7XG4gIH07XG5cbiAgVGhlbWVQcm92aWRlci5wcm90b3R5cGUuZ2V0Q29udGV4dCA9IGZ1bmN0aW9uIGdldENvbnRleHQodGhlbWUsIG91dGVyVGhlbWUpIHtcbiAgICByZXR1cm4gdGhpcy5nZXRUaGVtZSh0aGVtZSwgb3V0ZXJUaGVtZSk7XG4gIH07XG5cbiAgcmV0dXJuIFRoZW1lUHJvdmlkZXI7XG59KENvbXBvbmVudCk7XG5cbi8vIFxuXG52YXIgU2VydmVyU3R5bGVTaGVldCA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gU2VydmVyU3R5bGVTaGVldCgpIHtcbiAgICBjbGFzc0NhbGxDaGVjayh0aGlzLCBTZXJ2ZXJTdHlsZVNoZWV0KTtcblxuICAgIC8qIFRoZSBtYXN0ZXIgc2hlZXQgbWlnaHQgYmUgcmVzZXQsIHNvIGtlZXAgYSByZWZlcmVuY2UgaGVyZSAqL1xuICAgIHRoaXMubWFzdGVyU2hlZXQgPSBTdHlsZVNoZWV0Lm1hc3RlcjtcbiAgICB0aGlzLmluc3RhbmNlID0gdGhpcy5tYXN0ZXJTaGVldC5jbG9uZSgpO1xuICAgIHRoaXMuc2VhbGVkID0gZmFsc2U7XG4gIH1cblxuICAvKipcbiAgICogTWFyayB0aGUgU2VydmVyU3R5bGVTaGVldCBhcyBiZWluZyBmdWxseSBlbWl0dGVkIGFuZCBtYW51YWxseSBHQyBpdCBmcm9tIHRoZVxuICAgKiBTdHlsZVNoZWV0IHNpbmdsZXRvbi5cbiAgICovXG5cblxuICBTZXJ2ZXJTdHlsZVNoZWV0LnByb3RvdHlwZS5zZWFsID0gZnVuY3Rpb24gc2VhbCgpIHtcbiAgICBpZiAoIXRoaXMuc2VhbGVkKSB7XG4gICAgICAvKiBSZW1vdmUgc2VhbGVkIFN0eWxlU2hlZXRzIGZyb20gdGhlIG1hc3RlciBzaGVldCAqL1xuICAgICAgdmFyIGluZGV4ID0gdGhpcy5tYXN0ZXJTaGVldC5jbG9uZXMuaW5kZXhPZih0aGlzLmluc3RhbmNlKTtcbiAgICAgIHRoaXMubWFzdGVyU2hlZXQuY2xvbmVzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICB0aGlzLnNlYWxlZCA9IHRydWU7XG4gICAgfVxuICB9O1xuXG4gIFNlcnZlclN0eWxlU2hlZXQucHJvdG90eXBlLmNvbGxlY3RTdHlsZXMgPSBmdW5jdGlvbiBjb2xsZWN0U3R5bGVzKGNoaWxkcmVuKSB7XG4gICAgaWYgKHRoaXMuc2VhbGVkKSB7XG4gICAgICB0aHJvdyBuZXcgU3R5bGVkQ29tcG9uZW50c0Vycm9yKDIpO1xuICAgIH1cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgU3R5bGVTaGVldE1hbmFnZXIsXG4gICAgICB7IHNoZWV0OiB0aGlzLmluc3RhbmNlIH0sXG4gICAgICBjaGlsZHJlblxuICAgICk7XG4gIH07XG5cbiAgU2VydmVyU3R5bGVTaGVldC5wcm90b3R5cGUuZ2V0U3R5bGVUYWdzID0gZnVuY3Rpb24gZ2V0U3R5bGVUYWdzKCkge1xuICAgIHRoaXMuc2VhbCgpO1xuICAgIHJldHVybiB0aGlzLmluc3RhbmNlLnRvSFRNTCgpO1xuICB9O1xuXG4gIFNlcnZlclN0eWxlU2hlZXQucHJvdG90eXBlLmdldFN0eWxlRWxlbWVudCA9IGZ1bmN0aW9uIGdldFN0eWxlRWxlbWVudCgpIHtcbiAgICB0aGlzLnNlYWwoKTtcbiAgICByZXR1cm4gdGhpcy5pbnN0YW5jZS50b1JlYWN0RWxlbWVudHMoKTtcbiAgfTtcblxuICBTZXJ2ZXJTdHlsZVNoZWV0LnByb3RvdHlwZS5pbnRlcmxlYXZlV2l0aE5vZGVTdHJlYW0gPSBmdW5jdGlvbiBpbnRlcmxlYXZlV2l0aE5vZGVTdHJlYW0ocmVhZGFibGVTdHJlYW0pIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAge1xuICAgICAgdGhyb3cgbmV3IFN0eWxlZENvbXBvbmVudHNFcnJvcigzKTtcbiAgICB9XG5cbiAgICAvKiB0aGUgdGFnIGluZGV4IGtlZXBzIHRyYWNrIG9mIHdoaWNoIHRhZ3MgaGF2ZSBhbHJlYWR5IGJlZW4gZW1pdHRlZCAqL1xuICAgIHZhciBpbnN0YW5jZSA9IHRoaXMuaW5zdGFuY2U7XG5cbiAgICB2YXIgaW5zdGFuY2VUYWdJbmRleCA9IDA7XG5cbiAgICB2YXIgc3RyZWFtQXR0ciA9IFNDX1NUUkVBTV9BVFRSICsgJz1cInRydWVcIic7XG5cbiAgICB2YXIgdHJhbnNmb3JtZXIgPSBuZXcgc3RyZWFtLlRyYW5zZm9ybSh7XG4gICAgICB0cmFuc2Zvcm06IGZ1bmN0aW9uIGFwcGVuZFN0eWxlQ2h1bmtzKGNodW5rLCAvKiBlbmNvZGluZyAqL18sIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciB0YWdzID0gaW5zdGFuY2UudGFncztcblxuICAgICAgICB2YXIgaHRtbCA9ICcnO1xuXG4gICAgICAgIC8qIHJldHJpZXZlIGh0bWwgZm9yIGVhY2ggbmV3IHN0eWxlIHRhZyAqL1xuICAgICAgICBmb3IgKDsgaW5zdGFuY2VUYWdJbmRleCA8IHRhZ3MubGVuZ3RoOyBpbnN0YW5jZVRhZ0luZGV4ICs9IDEpIHtcbiAgICAgICAgICB2YXIgdGFnID0gdGFnc1tpbnN0YW5jZVRhZ0luZGV4XTtcbiAgICAgICAgICBodG1sICs9IHRhZy50b0hUTUwoc3RyZWFtQXR0cik7XG4gICAgICAgIH1cblxuICAgICAgICAvKiBmb3JjZSBvdXIgU3R5bGVTaGVldHMgdG8gZW1pdCBlbnRpcmVseSBuZXcgdGFncyAqL1xuICAgICAgICBpbnN0YW5jZS5zZWFsQWxsVGFncygpO1xuXG4gICAgICAgIC8qIHByZXBlbmQgc3R5bGUgaHRtbCB0byBjaHVuayAqL1xuICAgICAgICB0aGlzLnB1c2goaHRtbCArIGNodW5rKTtcbiAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJlYWRhYmxlU3RyZWFtLm9uKCdlbmQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gX3RoaXMuc2VhbCgpO1xuICAgIH0pO1xuICAgIHJlYWRhYmxlU3RyZWFtLm9uKCdlcnJvcicsIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgIF90aGlzLnNlYWwoKTtcblxuICAgICAgLy8gZm9yd2FyZCB0aGUgZXJyb3IgdG8gdGhlIHRyYW5zZm9ybSBzdHJlYW1cbiAgICAgIHRyYW5zZm9ybWVyLmVtaXQoJ2Vycm9yJywgZXJyKTtcbiAgICB9KTtcblxuICAgIHJldHVybiByZWFkYWJsZVN0cmVhbS5waXBlKHRyYW5zZm9ybWVyKTtcbiAgfTtcblxuICByZXR1cm4gU2VydmVyU3R5bGVTaGVldDtcbn0oKTtcblxuLy8gXG5cbnZhciBTdHlsZVNoZWV0Q29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcblxudmFyIFN0eWxlU2hlZXRDb25zdW1lciA9IFN0eWxlU2hlZXRDb250ZXh0LkNvbnN1bWVyO1xuXG52YXIgU3R5bGVTaGVldE1hbmFnZXIgPSBmdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICBpbmhlcml0cyhTdHlsZVNoZWV0TWFuYWdlciwgX0NvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU3R5bGVTaGVldE1hbmFnZXIocHJvcHMpIHtcbiAgICBjbGFzc0NhbGxDaGVjayh0aGlzLCBTdHlsZVNoZWV0TWFuYWdlcik7XG5cbiAgICB2YXIgX3RoaXMgPSBwb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9Db21wb25lbnQuY2FsbCh0aGlzLCBwcm9wcykpO1xuXG4gICAgX3RoaXMuZ2V0Q29udGV4dCA9IG1lbW9pemUoX3RoaXMuZ2V0Q29udGV4dCk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgU3R5bGVTaGVldE1hbmFnZXIucHJvdG90eXBlLmdldENvbnRleHQgPSBmdW5jdGlvbiBnZXRDb250ZXh0KHNoZWV0LCB0YXJnZXQpIHtcbiAgICBpZiAoc2hlZXQpIHtcbiAgICAgIHJldHVybiBzaGVldDtcbiAgICB9IGVsc2UgaWYgKHRhcmdldCkge1xuICAgICAgcmV0dXJuIG5ldyBTdHlsZVNoZWV0KHRhcmdldCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBTdHlsZWRDb21wb25lbnRzRXJyb3IoNCk7XG4gICAgfVxuICB9O1xuXG4gIFN0eWxlU2hlZXRNYW5hZ2VyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF9wcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIGNoaWxkcmVuID0gX3Byb3BzLmNoaWxkcmVuLFxuICAgICAgICBzaGVldCA9IF9wcm9wcy5zaGVldCxcbiAgICAgICAgdGFyZ2V0ID0gX3Byb3BzLnRhcmdldDtcblxuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICBTdHlsZVNoZWV0Q29udGV4dC5Qcm92aWRlcixcbiAgICAgIHsgdmFsdWU6IHRoaXMuZ2V0Q29udGV4dChzaGVldCwgdGFyZ2V0KSB9LFxuICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IFJlYWN0LkNoaWxkcmVuLm9ubHkoY2hpbGRyZW4pIDogY2hpbGRyZW5cbiAgICApO1xuICB9O1xuXG4gIHJldHVybiBTdHlsZVNoZWV0TWFuYWdlcjtcbn0oQ29tcG9uZW50KTtcbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IFN0eWxlU2hlZXRNYW5hZ2VyLnByb3BUeXBlcyA9IHtcbiAgc2hlZXQ6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5pbnN0YW5jZU9mKFN0eWxlU2hlZXQpLCBQcm9wVHlwZXMuaW5zdGFuY2VPZihTZXJ2ZXJTdHlsZVNoZWV0KV0pLFxuXG4gIHRhcmdldDogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBhcHBlbmRDaGlsZDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxuICB9KVxufSA6IHZvaWQgMDtcblxuLy8gXG5cbnZhciBkaWRXYXJuQWJvdXRDbGFzc05hbWVVc2FnZSA9IG5ldyBTZXQoKTtcblxudmFyIGNsYXNzTmFtZVVzYWdlQ2hlY2tJbmplY3RvciA9IChmdW5jdGlvbiAodGFyZ2V0KSB7XG4gIHZhciBlbGVtZW50Q2xhc3NOYW1lID0gJyc7XG5cbiAgdmFyIHRhcmdldENETSA9IHRhcmdldC5jb21wb25lbnREaWRNb3VudDtcblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgdGFyZ2V0LmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgaWYgKHR5cGVvZiB0YXJnZXRDRE0gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRhcmdldENETS5jYWxsKHRoaXMpO1xuICAgIH1cblxuICAgIHZhciBmb3J3YXJkVGFyZ2V0ID0gdGhpcy5wcm9wcy5mb3J3YXJkZWRDb21wb25lbnQudGFyZ2V0O1xuXG4gICAgaWYgKHRhcmdldC5wcm9wcyAmJiB0YXJnZXQucHJvcHMuc3VwcHJlc3NDbGFzc05hbWVXYXJuaW5nIHx8IHRhcmdldC5hdHRycyAmJiB0YXJnZXQuYXR0cnMuc3VwcHJlc3NDbGFzc05hbWVXYXJuaW5nIHx8IGRpZFdhcm5BYm91dENsYXNzTmFtZVVzYWdlLmhhcyhmb3J3YXJkVGFyZ2V0KSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGRpZFdhcm5BYm91dENsYXNzTmFtZVVzYWdlLmFkZChmb3J3YXJkVGFyZ2V0KTtcblxuICAgIHZhciBjbGFzc05hbWVzID0gZWxlbWVudENsYXNzTmFtZS5yZXBsYWNlKC8gKy9nLCAnICcpLnRyaW0oKS5zcGxpdCgnICcpO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9uby1maW5kLWRvbS1ub2RlXG4gICAgdmFyIG5vZGUgPSBSZWFjdERPTS5maW5kRE9NTm9kZSh0aGlzKTtcbiAgICB2YXIgc2VsZWN0b3IgPSBjbGFzc05hbWVzLm1hcChmdW5jdGlvbiAocykge1xuICAgICAgcmV0dXJuICcuJyArIHM7XG4gICAgfSkuam9pbignJyk7XG5cbiAgICBpZiAobm9kZSAmJiBub2RlLm5vZGVUeXBlID09PSAxICYmICFjbGFzc05hbWVzLmV2ZXJ5KGZ1bmN0aW9uIChjbGFzc05hbWUpIHtcbiAgICAgIHJldHVybiBub2RlLmNsYXNzTGlzdCAmJiBub2RlLmNsYXNzTGlzdC5jb250YWlucyhjbGFzc05hbWUpO1xuICAgIH0pICYmICFub2RlLnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpKSB7XG4gICAgICBjb25zb2xlLndhcm4oJ0l0IGxvb2tzIGxpa2UgeW91XFwndmUgd3JhcHBlZCBzdHlsZWQoKSBhcm91bmQgeW91ciBSZWFjdCBjb21wb25lbnQgKCcgKyBnZXRDb21wb25lbnROYW1lKGZvcndhcmRUYXJnZXQpICsgJyksIGJ1dCB0aGUgY2xhc3NOYW1lIHByb3AgaXMgbm90IGJlaW5nIHBhc3NlZCBkb3duIHRvIGEgY2hpbGQuIE5vIHN0eWxlcyB3aWxsIGJlIHJlbmRlcmVkIHVubGVzcyBjbGFzc05hbWUgaXMgY29tcG9zZWQgd2l0aGluIHlvdXIgUmVhY3QgY29tcG9uZW50LicpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgcHJldlJlbmRlcklubmVyID0gdGFyZ2V0LnJlbmRlcklubmVyO1xuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICB0YXJnZXQucmVuZGVySW5uZXIgPSBmdW5jdGlvbiByZW5kZXJJbm5lcigpIHtcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICB2YXIgZWxlbWVudCA9IHByZXZSZW5kZXJJbm5lci5hcHBseSh0aGlzLCBhcmdzKTtcblxuICAgIGVsZW1lbnRDbGFzc05hbWUgPSBlbGVtZW50LnByb3BzLmNsYXNzTmFtZTtcblxuICAgIHJldHVybiBlbGVtZW50O1xuICB9O1xufSk7XG5cbi8vIFxuXG52YXIgaWRlbnRpZmllcnMgPSB7fTtcblxuLyogV2UgZGVwZW5kIG9uIGNvbXBvbmVudHMgaGF2aW5nIHVuaXF1ZSBJRHMgKi9cbmZ1bmN0aW9uIGdlbmVyYXRlSWQoX0NvbXBvbmVudFN0eWxlLCBfZGlzcGxheU5hbWUsIHBhcmVudENvbXBvbmVudElkKSB7XG4gIHZhciBkaXNwbGF5TmFtZSA9IHR5cGVvZiBfZGlzcGxheU5hbWUgIT09ICdzdHJpbmcnID8gJ3NjJyA6IGVzY2FwZShfZGlzcGxheU5hbWUpO1xuXG4gIC8qKlxuICAgKiBUaGlzIGVuc3VyZXMgdW5pcXVlbmVzcyBpZiB0d28gY29tcG9uZW50cyBoYXBwZW4gdG8gc2hhcmVcbiAgICogdGhlIHNhbWUgZGlzcGxheU5hbWUuXG4gICAqL1xuICB2YXIgbnIgPSAoaWRlbnRpZmllcnNbZGlzcGxheU5hbWVdIHx8IDApICsgMTtcbiAgaWRlbnRpZmllcnNbZGlzcGxheU5hbWVdID0gbnI7XG5cbiAgdmFyIGNvbXBvbmVudElkID0gZGlzcGxheU5hbWUgKyAnLScgKyBfQ29tcG9uZW50U3R5bGUuZ2VuZXJhdGVOYW1lKGRpc3BsYXlOYW1lICsgbnIpO1xuXG4gIHJldHVybiBwYXJlbnRDb21wb25lbnRJZCA/IHBhcmVudENvbXBvbmVudElkICsgJy0nICsgY29tcG9uZW50SWQgOiBjb21wb25lbnRJZDtcbn1cblxuLy8gJEZsb3dGaXhNZVxuXG52YXIgU3R5bGVkQ29tcG9uZW50ID0gZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgaW5oZXJpdHMoU3R5bGVkQ29tcG9uZW50LCBfQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTdHlsZWRDb21wb25lbnQoKSB7XG4gICAgY2xhc3NDYWxsQ2hlY2sodGhpcywgU3R5bGVkQ29tcG9uZW50KTtcblxuICAgIHZhciBfdGhpcyA9IHBvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX0NvbXBvbmVudC5jYWxsKHRoaXMpKTtcblxuICAgIF90aGlzLmF0dHJzID0ge307XG5cbiAgICBfdGhpcy5yZW5kZXJPdXRlciA9IF90aGlzLnJlbmRlck91dGVyLmJpbmQoX3RoaXMpO1xuICAgIF90aGlzLnJlbmRlcklubmVyID0gX3RoaXMucmVuZGVySW5uZXIuYmluZChfdGhpcyk7XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgX3RoaXMud2FybklubmVyUmVmID0gb25jZShmdW5jdGlvbiAoZGlzcGxheU5hbWUpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgICAgIGNvbnNvbGUud2FybignVGhlIFwiaW5uZXJSZWZcIiBBUEkgaGFzIGJlZW4gcmVtb3ZlZCBpbiBzdHlsZWQtY29tcG9uZW50cyB2NCBpbiBmYXZvciBvZiBSZWFjdCAxNiByZWYgZm9yd2FyZGluZywgdXNlIFwicmVmXCIgaW5zdGVhZCBsaWtlIGEgdHlwaWNhbCBjb21wb25lbnQuIFwiaW5uZXJSZWZcIiB3YXMgZGV0ZWN0ZWQgb24gY29tcG9uZW50IFwiJyArIGRpc3BsYXlOYW1lICsgJ1wiLicpXG4gICAgICAgICk7XG4gICAgICB9KTtcblxuICAgICAgX3RoaXMud2FybkF0dHJzRm5PYmplY3RLZXlEZXByZWNhdGVkID0gb25jZShmdW5jdGlvbiAoa2V5LCBkaXNwbGF5TmFtZSkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgICAgY29uc29sZS53YXJuKCdGdW5jdGlvbnMgYXMgb2JqZWN0LWZvcm0gYXR0cnMoe30pIGtleXMgYXJlIG5vdyBkZXByZWNhdGVkIGFuZCB3aWxsIGJlIHJlbW92ZWQgaW4gYSBmdXR1cmUgdmVyc2lvbiBvZiBzdHlsZWQtY29tcG9uZW50cy4gU3dpdGNoIHRvIHRoZSBuZXcgYXR0cnMocHJvcHMgPT4gKHt9KSkgc3ludGF4IGluc3RlYWQgZm9yIGVhc2llciBhbmQgbW9yZSBwb3dlcmZ1bCBjb21wb3NpdGlvbi4gVGhlIGF0dHJzIGtleSBpbiBxdWVzdGlvbiBpcyBcIicgKyBrZXkgKyAnXCIgb24gY29tcG9uZW50IFwiJyArIGRpc3BsYXlOYW1lICsgJ1wiLicpXG4gICAgICAgICk7XG4gICAgICB9KTtcblxuICAgICAgX3RoaXMud2Fybk5vblN0eWxlZENvbXBvbmVudEF0dHJzT2JqZWN0S2V5ID0gb25jZShmdW5jdGlvbiAoa2V5LCBkaXNwbGF5TmFtZSkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgICAgY29uc29sZS53YXJuKCdJdCBsb29rcyBsaWtlIHlvdVxcJ3ZlIHVzZWQgYSBub24gc3R5bGVkLWNvbXBvbmVudCBhcyB0aGUgdmFsdWUgZm9yIHRoZSBcIicgKyBrZXkgKyAnXCIgcHJvcCBpbiBhbiBvYmplY3QtZm9ybSBhdHRycyBjb25zdHJ1Y3RvciBvZiBcIicgKyBkaXNwbGF5TmFtZSArICdcIi5cXG4nICsgJ1lvdSBzaG91bGQgdXNlIHRoZSBuZXcgZnVuY3Rpb24tZm9ybSBhdHRycyBjb25zdHJ1Y3RvciB3aGljaCBhdm9pZHMgdGhpcyBpc3N1ZTogYXR0cnMocHJvcHMgPT4gKHsgeW91clN0dWZmIH0pKVxcbicgKyBcIlRvIGNvbnRpbnVlIHVzaW5nIHRoZSBkZXByZWNhdGVkIG9iamVjdCBzeW50YXgsIHlvdSdsbCBuZWVkIHRvIHdyYXAgeW91ciBjb21wb25lbnQgcHJvcCBpbiBhIGZ1bmN0aW9uIHRvIG1ha2UgaXQgYXZhaWxhYmxlIGluc2lkZSB0aGUgc3R5bGVkIGNvbXBvbmVudCAoeW91J2xsIHN0aWxsIGdldCB0aGUgZGVwcmVjYXRpb24gd2FybmluZyB0aG91Z2guKVxcblwiICsgKCdGb3IgZXhhbXBsZSwgeyAnICsga2V5ICsgJzogKCkgPT4gSW5uZXJDb21wb25lbnQgfSBpbnN0ZWFkIG9mIHsgJyArIGtleSArICc6IElubmVyQ29tcG9uZW50IH0nKSlcbiAgICAgICAgKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIElTX0JST1dTRVIpIHtcbiAgICAgIGNsYXNzTmFtZVVzYWdlQ2hlY2tJbmplY3RvcihfdGhpcyk7XG4gICAgfVxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIFN0eWxlZENvbXBvbmVudC5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgU3R5bGVTaGVldENvbnN1bWVyLFxuICAgICAgbnVsbCxcbiAgICAgIHRoaXMucmVuZGVyT3V0ZXJcbiAgICApO1xuICB9O1xuXG4gIFN0eWxlZENvbXBvbmVudC5wcm90b3R5cGUucmVuZGVyT3V0ZXIgPSBmdW5jdGlvbiByZW5kZXJPdXRlcigpIHtcbiAgICB2YXIgc3R5bGVTaGVldCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogU3R5bGVTaGVldC5tYXN0ZXI7XG5cbiAgICB0aGlzLnN0eWxlU2hlZXQgPSBzdHlsZVNoZWV0O1xuXG4gICAgLy8gTm8gbmVlZCB0byBzdWJzY3JpYmUgYSBzdGF0aWMgY29tcG9uZW50IHRvIHRoZW1lIGNoYW5nZXMsIGl0IHdvbid0IGNoYW5nZSBhbnl0aGluZ1xuICAgIGlmICh0aGlzLnByb3BzLmZvcndhcmRlZENvbXBvbmVudC5jb21wb25lbnRTdHlsZS5pc1N0YXRpYykgcmV0dXJuIHRoaXMucmVuZGVySW5uZXIoKTtcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgVGhlbWVDb25zdW1lcixcbiAgICAgIG51bGwsXG4gICAgICB0aGlzLnJlbmRlcklubmVyXG4gICAgKTtcbiAgfTtcblxuICBTdHlsZWRDb21wb25lbnQucHJvdG90eXBlLnJlbmRlcklubmVyID0gZnVuY3Rpb24gcmVuZGVySW5uZXIodGhlbWUpIHtcbiAgICB2YXIgX3Byb3BzJGZvcndhcmRlZENvbXBvID0gdGhpcy5wcm9wcy5mb3J3YXJkZWRDb21wb25lbnQsXG4gICAgICAgIGNvbXBvbmVudFN0eWxlID0gX3Byb3BzJGZvcndhcmRlZENvbXBvLmNvbXBvbmVudFN0eWxlLFxuICAgICAgICBkZWZhdWx0UHJvcHMgPSBfcHJvcHMkZm9yd2FyZGVkQ29tcG8uZGVmYXVsdFByb3BzLFxuICAgICAgICBkaXNwbGF5TmFtZSA9IF9wcm9wcyRmb3J3YXJkZWRDb21wby5kaXNwbGF5TmFtZSxcbiAgICAgICAgZm9sZGVkQ29tcG9uZW50SWRzID0gX3Byb3BzJGZvcndhcmRlZENvbXBvLmZvbGRlZENvbXBvbmVudElkcyxcbiAgICAgICAgc3R5bGVkQ29tcG9uZW50SWQgPSBfcHJvcHMkZm9yd2FyZGVkQ29tcG8uc3R5bGVkQ29tcG9uZW50SWQsXG4gICAgICAgIHRhcmdldCA9IF9wcm9wcyRmb3J3YXJkZWRDb21wby50YXJnZXQ7XG5cblxuICAgIHZhciBnZW5lcmF0ZWRDbGFzc05hbWUgPSB2b2lkIDA7XG4gICAgaWYgKGNvbXBvbmVudFN0eWxlLmlzU3RhdGljKSB7XG4gICAgICBnZW5lcmF0ZWRDbGFzc05hbWUgPSB0aGlzLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzKEVNUFRZX09CSkVDVCwgdGhpcy5wcm9wcyk7XG4gICAgfSBlbHNlIGlmICh0aGVtZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBnZW5lcmF0ZWRDbGFzc05hbWUgPSB0aGlzLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzKGRldGVybWluZVRoZW1lKHRoaXMucHJvcHMsIHRoZW1lLCBkZWZhdWx0UHJvcHMpLCB0aGlzLnByb3BzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZ2VuZXJhdGVkQ2xhc3NOYW1lID0gdGhpcy5nZW5lcmF0ZUFuZEluamVjdFN0eWxlcyh0aGlzLnByb3BzLnRoZW1lIHx8IEVNUFRZX09CSkVDVCwgdGhpcy5wcm9wcyk7XG4gICAgfVxuXG4gICAgdmFyIGVsZW1lbnRUb0JlQ3JlYXRlZCA9IHRoaXMucHJvcHMuYXMgfHwgdGhpcy5hdHRycy5hcyB8fCB0YXJnZXQ7XG4gICAgdmFyIGlzVGFyZ2V0VGFnID0gaXNUYWcoZWxlbWVudFRvQmVDcmVhdGVkKTtcblxuICAgIHZhciBwcm9wc0ZvckVsZW1lbnQgPSB7fTtcbiAgICB2YXIgY29tcHV0ZWRQcm9wcyA9IF9leHRlbmRzKHt9LCB0aGlzLmF0dHJzLCB0aGlzLnByb3BzKTtcblxuICAgIHZhciBrZXkgPSB2b2lkIDA7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGd1YXJkLWZvci1pblxuICAgIGZvciAoa2V5IGluIGNvbXB1dGVkUHJvcHMpIHtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGtleSA9PT0gJ2lubmVyUmVmJyAmJiBpc1RhcmdldFRhZykge1xuICAgICAgICB0aGlzLndhcm5Jbm5lclJlZihkaXNwbGF5TmFtZSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChrZXkgPT09ICdmb3J3YXJkZWRDb21wb25lbnQnIHx8IGtleSA9PT0gJ2FzJykgY29udGludWU7ZWxzZSBpZiAoa2V5ID09PSAnZm9yd2FyZGVkUmVmJykgcHJvcHNGb3JFbGVtZW50LnJlZiA9IGNvbXB1dGVkUHJvcHNba2V5XTtlbHNlIGlmICghaXNUYXJnZXRUYWcgfHwgdmFsaWRBdHRyKGtleSkpIHtcbiAgICAgICAgLy8gRG9uJ3QgcGFzcyB0aHJvdWdoIG5vbiBIVE1MIHRhZ3MgdGhyb3VnaCB0byBIVE1MIGVsZW1lbnRzXG4gICAgICAgIHByb3BzRm9yRWxlbWVudFtrZXldID0gY29tcHV0ZWRQcm9wc1trZXldO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0aGlzLnByb3BzLnN0eWxlICYmIHRoaXMuYXR0cnMuc3R5bGUpIHtcbiAgICAgIHByb3BzRm9yRWxlbWVudC5zdHlsZSA9IF9leHRlbmRzKHt9LCB0aGlzLmF0dHJzLnN0eWxlLCB0aGlzLnByb3BzLnN0eWxlKTtcbiAgICB9XG5cbiAgICBwcm9wc0ZvckVsZW1lbnQuY2xhc3NOYW1lID0gQXJyYXkucHJvdG90eXBlLmNvbmNhdChmb2xkZWRDb21wb25lbnRJZHMsIHRoaXMucHJvcHMuY2xhc3NOYW1lLCBzdHlsZWRDb21wb25lbnRJZCwgdGhpcy5hdHRycy5jbGFzc05hbWUsIGdlbmVyYXRlZENsYXNzTmFtZSkuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJyAnKTtcblxuICAgIHJldHVybiBjcmVhdGVFbGVtZW50KGVsZW1lbnRUb0JlQ3JlYXRlZCwgcHJvcHNGb3JFbGVtZW50KTtcbiAgfTtcblxuICBTdHlsZWRDb21wb25lbnQucHJvdG90eXBlLmJ1aWxkRXhlY3V0aW9uQ29udGV4dCA9IGZ1bmN0aW9uIGJ1aWxkRXhlY3V0aW9uQ29udGV4dCh0aGVtZSwgcHJvcHMsIGF0dHJzKSB7XG4gICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICB2YXIgY29udGV4dCA9IF9leHRlbmRzKHt9LCBwcm9wcywgeyB0aGVtZTogdGhlbWUgfSk7XG5cbiAgICBpZiAoIWF0dHJzLmxlbmd0aCkgcmV0dXJuIGNvbnRleHQ7XG5cbiAgICB0aGlzLmF0dHJzID0ge307XG5cbiAgICBhdHRycy5mb3JFYWNoKGZ1bmN0aW9uIChhdHRyRGVmKSB7XG4gICAgICB2YXIgcmVzb2x2ZWRBdHRyRGVmID0gYXR0ckRlZjtcbiAgICAgIHZhciBhdHRyRGVmV2FzRm4gPSBmYWxzZTtcbiAgICAgIHZhciBhdHRyID0gdm9pZCAwO1xuICAgICAgdmFyIGtleSA9IHZvaWQgMDtcblxuICAgICAgaWYgKGlzRnVuY3Rpb24ocmVzb2x2ZWRBdHRyRGVmKSkge1xuICAgICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICAgIHJlc29sdmVkQXR0ckRlZiA9IHJlc29sdmVkQXR0ckRlZihjb250ZXh0KTtcbiAgICAgICAgYXR0ckRlZldhc0ZuID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgLyogZXNsaW50LWRpc2FibGUgZ3VhcmQtZm9yLWluICovXG4gICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICBmb3IgKGtleSBpbiByZXNvbHZlZEF0dHJEZWYpIHtcbiAgICAgICAgYXR0ciA9IHJlc29sdmVkQXR0ckRlZltrZXldO1xuXG4gICAgICAgIGlmICghYXR0ckRlZldhc0ZuKSB7XG4gICAgICAgICAgaWYgKGlzRnVuY3Rpb24oYXR0cikgJiYgIWlzRGVyaXZlZFJlYWN0Q29tcG9uZW50KGF0dHIpICYmICFpc1N0eWxlZENvbXBvbmVudChhdHRyKSkge1xuICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgICAgX3RoaXMyLndhcm5BdHRyc0ZuT2JqZWN0S2V5RGVwcmVjYXRlZChrZXksIHByb3BzLmZvcndhcmRlZENvbXBvbmVudC5kaXNwbGF5TmFtZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGF0dHIgPSBhdHRyKGNvbnRleHQpO1xuXG4gICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBSZWFjdC5pc1ZhbGlkRWxlbWVudChhdHRyKSkge1xuICAgICAgICAgICAgICBfdGhpczIud2Fybk5vblN0eWxlZENvbXBvbmVudEF0dHJzT2JqZWN0S2V5KGtleSwgcHJvcHMuZm9yd2FyZGVkQ29tcG9uZW50LmRpc3BsYXlOYW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBfdGhpczIuYXR0cnNba2V5XSA9IGF0dHI7XG4gICAgICAgIGNvbnRleHRba2V5XSA9IGF0dHI7XG4gICAgICB9XG4gICAgICAvKiBlc2xpbnQtZW5hYmxlICovXG4gICAgfSk7XG5cbiAgICByZXR1cm4gY29udGV4dDtcbiAgfTtcblxuICBTdHlsZWRDb21wb25lbnQucHJvdG90eXBlLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzID0gZnVuY3Rpb24gZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXModGhlbWUsIHByb3BzKSB7XG4gICAgdmFyIF9wcm9wcyRmb3J3YXJkZWRDb21wbzIgPSBwcm9wcy5mb3J3YXJkZWRDb21wb25lbnQsXG4gICAgICAgIGF0dHJzID0gX3Byb3BzJGZvcndhcmRlZENvbXBvMi5hdHRycyxcbiAgICAgICAgY29tcG9uZW50U3R5bGUgPSBfcHJvcHMkZm9yd2FyZGVkQ29tcG8yLmNvbXBvbmVudFN0eWxlLFxuICAgICAgICB3YXJuVG9vTWFueUNsYXNzZXMgPSBfcHJvcHMkZm9yd2FyZGVkQ29tcG8yLndhcm5Ub29NYW55Q2xhc3NlcztcblxuICAgIC8vIHN0YXRpY2FsbHkgc3R5bGVkLWNvbXBvbmVudHMgZG9uJ3QgbmVlZCB0byBidWlsZCBhbiBleGVjdXRpb24gY29udGV4dCBvYmplY3QsXG4gICAgLy8gYW5kIHNob3VsZG4ndCBiZSBpbmNyZWFzaW5nIHRoZSBudW1iZXIgb2YgY2xhc3MgbmFtZXNcblxuICAgIGlmIChjb21wb25lbnRTdHlsZS5pc1N0YXRpYyAmJiAhYXR0cnMubGVuZ3RoKSB7XG4gICAgICByZXR1cm4gY29tcG9uZW50U3R5bGUuZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXMoRU1QVFlfT0JKRUNULCB0aGlzLnN0eWxlU2hlZXQpO1xuICAgIH1cblxuICAgIHZhciBjbGFzc05hbWUgPSBjb21wb25lbnRTdHlsZS5nZW5lcmF0ZUFuZEluamVjdFN0eWxlcyh0aGlzLmJ1aWxkRXhlY3V0aW9uQ29udGV4dCh0aGVtZSwgcHJvcHMsIGF0dHJzKSwgdGhpcy5zdHlsZVNoZWV0KTtcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHdhcm5Ub29NYW55Q2xhc3Nlcykgd2FyblRvb01hbnlDbGFzc2VzKGNsYXNzTmFtZSk7XG5cbiAgICByZXR1cm4gY2xhc3NOYW1lO1xuICB9O1xuXG4gIHJldHVybiBTdHlsZWRDb21wb25lbnQ7XG59KENvbXBvbmVudCk7XG5cbmZ1bmN0aW9uIGNyZWF0ZVN0eWxlZENvbXBvbmVudCh0YXJnZXQsIG9wdGlvbnMsIHJ1bGVzKSB7XG4gIHZhciBpc1RhcmdldFN0eWxlZENvbXAgPSBpc1N0eWxlZENvbXBvbmVudCh0YXJnZXQpO1xuICB2YXIgaXNDbGFzcyA9ICFpc1RhZyh0YXJnZXQpO1xuXG4gIHZhciBfb3B0aW9ucyRkaXNwbGF5TmFtZSA9IG9wdGlvbnMuZGlzcGxheU5hbWUsXG4gICAgICBkaXNwbGF5TmFtZSA9IF9vcHRpb25zJGRpc3BsYXlOYW1lID09PSB1bmRlZmluZWQgPyBnZW5lcmF0ZURpc3BsYXlOYW1lKHRhcmdldCkgOiBfb3B0aW9ucyRkaXNwbGF5TmFtZSxcbiAgICAgIF9vcHRpb25zJGNvbXBvbmVudElkID0gb3B0aW9ucy5jb21wb25lbnRJZCxcbiAgICAgIGNvbXBvbmVudElkID0gX29wdGlvbnMkY29tcG9uZW50SWQgPT09IHVuZGVmaW5lZCA/IGdlbmVyYXRlSWQoQ29tcG9uZW50U3R5bGUsIG9wdGlvbnMuZGlzcGxheU5hbWUsIG9wdGlvbnMucGFyZW50Q29tcG9uZW50SWQpIDogX29wdGlvbnMkY29tcG9uZW50SWQsXG4gICAgICBfb3B0aW9ucyRQYXJlbnRDb21wb24gPSBvcHRpb25zLlBhcmVudENvbXBvbmVudCxcbiAgICAgIFBhcmVudENvbXBvbmVudCA9IF9vcHRpb25zJFBhcmVudENvbXBvbiA9PT0gdW5kZWZpbmVkID8gU3R5bGVkQ29tcG9uZW50IDogX29wdGlvbnMkUGFyZW50Q29tcG9uLFxuICAgICAgX29wdGlvbnMkYXR0cnMgPSBvcHRpb25zLmF0dHJzLFxuICAgICAgYXR0cnMgPSBfb3B0aW9ucyRhdHRycyA9PT0gdW5kZWZpbmVkID8gRU1QVFlfQVJSQVkgOiBfb3B0aW9ucyRhdHRycztcblxuXG4gIHZhciBzdHlsZWRDb21wb25lbnRJZCA9IG9wdGlvbnMuZGlzcGxheU5hbWUgJiYgb3B0aW9ucy5jb21wb25lbnRJZCA/IGVzY2FwZShvcHRpb25zLmRpc3BsYXlOYW1lKSArICctJyArIG9wdGlvbnMuY29tcG9uZW50SWQgOiBvcHRpb25zLmNvbXBvbmVudElkIHx8IGNvbXBvbmVudElkO1xuXG4gIC8vIGZvbGQgdGhlIHVuZGVybHlpbmcgU3R5bGVkQ29tcG9uZW50IGF0dHJzIHVwIChpbXBsaWNpdCBleHRlbmQpXG4gIHZhciBmaW5hbEF0dHJzID1cbiAgLy8gJEZsb3dGaXhNZVxuICBpc1RhcmdldFN0eWxlZENvbXAgJiYgdGFyZ2V0LmF0dHJzID8gQXJyYXkucHJvdG90eXBlLmNvbmNhdCh0YXJnZXQuYXR0cnMsIGF0dHJzKS5maWx0ZXIoQm9vbGVhbikgOiBhdHRycztcblxuICB2YXIgY29tcG9uZW50U3R5bGUgPSBuZXcgQ29tcG9uZW50U3R5bGUoaXNUYXJnZXRTdHlsZWRDb21wID8gLy8gZm9sZCB0aGUgdW5kZXJseWluZyBTdHlsZWRDb21wb25lbnQgcnVsZXMgdXAgKGltcGxpY2l0IGV4dGVuZClcbiAgLy8gJEZsb3dGaXhNZVxuICB0YXJnZXQuY29tcG9uZW50U3R5bGUucnVsZXMuY29uY2F0KHJ1bGVzKSA6IHJ1bGVzLCBmaW5hbEF0dHJzLCBzdHlsZWRDb21wb25lbnRJZCk7XG5cbiAgLyoqXG4gICAqIGZvcndhcmRSZWYgY3JlYXRlcyBhIG5ldyBpbnRlcmltIGNvbXBvbmVudCwgd2hpY2ggd2UnbGwgdGFrZSBhZHZhbnRhZ2Ugb2ZcbiAgICogaW5zdGVhZCBvZiBleHRlbmRpbmcgUGFyZW50Q29tcG9uZW50IHRvIGNyZWF0ZSBfYW5vdGhlcl8gaW50ZXJpbSBjbGFzc1xuICAgKi9cbiAgdmFyIFdyYXBwZWRTdHlsZWRDb21wb25lbnQgPSBSZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIChwcm9wcywgcmVmKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUGFyZW50Q29tcG9uZW50LCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHsgZm9yd2FyZGVkQ29tcG9uZW50OiBXcmFwcGVkU3R5bGVkQ29tcG9uZW50LCBmb3J3YXJkZWRSZWY6IHJlZiB9KSk7XG4gIH0pO1xuXG4gIC8vICRGbG93Rml4TWVcbiAgV3JhcHBlZFN0eWxlZENvbXBvbmVudC5hdHRycyA9IGZpbmFsQXR0cnM7XG4gIC8vICRGbG93Rml4TWVcbiAgV3JhcHBlZFN0eWxlZENvbXBvbmVudC5jb21wb25lbnRTdHlsZSA9IGNvbXBvbmVudFN0eWxlO1xuICBXcmFwcGVkU3R5bGVkQ29tcG9uZW50LmRpc3BsYXlOYW1lID0gZGlzcGxheU5hbWU7XG5cbiAgLy8gJEZsb3dGaXhNZVxuICBXcmFwcGVkU3R5bGVkQ29tcG9uZW50LmZvbGRlZENvbXBvbmVudElkcyA9IGlzVGFyZ2V0U3R5bGVkQ29tcCA/IC8vICRGbG93Rml4TWVcbiAgQXJyYXkucHJvdG90eXBlLmNvbmNhdCh0YXJnZXQuZm9sZGVkQ29tcG9uZW50SWRzLCB0YXJnZXQuc3R5bGVkQ29tcG9uZW50SWQpIDogRU1QVFlfQVJSQVk7XG5cbiAgLy8gJEZsb3dGaXhNZVxuICBXcmFwcGVkU3R5bGVkQ29tcG9uZW50LnN0eWxlZENvbXBvbmVudElkID0gc3R5bGVkQ29tcG9uZW50SWQ7XG5cbiAgLy8gZm9sZCB0aGUgdW5kZXJseWluZyBTdHlsZWRDb21wb25lbnQgdGFyZ2V0IHVwIHNpbmNlIHdlIGZvbGRlZCB0aGUgc3R5bGVzXG4gIC8vICRGbG93Rml4TWVcbiAgV3JhcHBlZFN0eWxlZENvbXBvbmVudC50YXJnZXQgPSBpc1RhcmdldFN0eWxlZENvbXAgPyB0YXJnZXQudGFyZ2V0IDogdGFyZ2V0O1xuXG4gIC8vICRGbG93Rml4TWVcbiAgV3JhcHBlZFN0eWxlZENvbXBvbmVudC53aXRoQ29tcG9uZW50ID0gZnVuY3Rpb24gd2l0aENvbXBvbmVudCh0YWcpIHtcbiAgICB2YXIgcHJldmlvdXNDb21wb25lbnRJZCA9IG9wdGlvbnMuY29tcG9uZW50SWQsXG4gICAgICAgIG9wdGlvbnNUb0NvcHkgPSBvYmplY3RXaXRob3V0UHJvcGVydGllcyhvcHRpb25zLCBbJ2NvbXBvbmVudElkJ10pO1xuXG5cbiAgICB2YXIgbmV3Q29tcG9uZW50SWQgPSBwcmV2aW91c0NvbXBvbmVudElkICYmIHByZXZpb3VzQ29tcG9uZW50SWQgKyAnLScgKyAoaXNUYWcodGFnKSA/IHRhZyA6IGVzY2FwZShnZXRDb21wb25lbnROYW1lKHRhZykpKTtcblxuICAgIHZhciBuZXdPcHRpb25zID0gX2V4dGVuZHMoe30sIG9wdGlvbnNUb0NvcHksIHtcbiAgICAgIGF0dHJzOiBmaW5hbEF0dHJzLFxuICAgICAgY29tcG9uZW50SWQ6IG5ld0NvbXBvbmVudElkLFxuICAgICAgUGFyZW50Q29tcG9uZW50OiBQYXJlbnRDb21wb25lbnRcbiAgICB9KTtcblxuICAgIHJldHVybiBjcmVhdGVTdHlsZWRDb21wb25lbnQodGFnLCBuZXdPcHRpb25zLCBydWxlcyk7XG4gIH07XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyAkRmxvd0ZpeE1lXG4gICAgV3JhcHBlZFN0eWxlZENvbXBvbmVudC53YXJuVG9vTWFueUNsYXNzZXMgPSBjcmVhdGVXYXJuVG9vTWFueUNsYXNzZXMoZGlzcGxheU5hbWUpO1xuICB9XG5cbiAgLy8gJEZsb3dGaXhNZVxuICBXcmFwcGVkU3R5bGVkQ29tcG9uZW50LnRvU3RyaW5nID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiAnLicgKyBXcmFwcGVkU3R5bGVkQ29tcG9uZW50LnN0eWxlZENvbXBvbmVudElkO1xuICB9O1xuXG4gIGlmIChpc0NsYXNzKSB7XG4gICAgaG9pc3ROb25SZWFjdFN0YXRpY3MoV3JhcHBlZFN0eWxlZENvbXBvbmVudCwgdGFyZ2V0LCB7XG4gICAgICAvLyBhbGwgU0Mtc3BlY2lmaWMgdGhpbmdzIHNob3VsZCBub3QgYmUgaG9pc3RlZFxuICAgICAgYXR0cnM6IHRydWUsXG4gICAgICBjb21wb25lbnRTdHlsZTogdHJ1ZSxcbiAgICAgIGRpc3BsYXlOYW1lOiB0cnVlLFxuICAgICAgZm9sZGVkQ29tcG9uZW50SWRzOiB0cnVlLFxuICAgICAgc3R5bGVkQ29tcG9uZW50SWQ6IHRydWUsXG4gICAgICB0YXJnZXQ6IHRydWUsXG4gICAgICB3aXRoQ29tcG9uZW50OiB0cnVlXG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gV3JhcHBlZFN0eWxlZENvbXBvbmVudDtcbn1cblxuLy8gXG4vLyBUaGFua3MgdG8gUmVhY3RET01GYWN0b3JpZXMgZm9yIHRoaXMgaGFuZHkgbGlzdCFcblxudmFyIGRvbUVsZW1lbnRzID0gWydhJywgJ2FiYnInLCAnYWRkcmVzcycsICdhcmVhJywgJ2FydGljbGUnLCAnYXNpZGUnLCAnYXVkaW8nLCAnYicsICdiYXNlJywgJ2JkaScsICdiZG8nLCAnYmlnJywgJ2Jsb2NrcXVvdGUnLCAnYm9keScsICdicicsICdidXR0b24nLCAnY2FudmFzJywgJ2NhcHRpb24nLCAnY2l0ZScsICdjb2RlJywgJ2NvbCcsICdjb2xncm91cCcsICdkYXRhJywgJ2RhdGFsaXN0JywgJ2RkJywgJ2RlbCcsICdkZXRhaWxzJywgJ2RmbicsICdkaWFsb2cnLCAnZGl2JywgJ2RsJywgJ2R0JywgJ2VtJywgJ2VtYmVkJywgJ2ZpZWxkc2V0JywgJ2ZpZ2NhcHRpb24nLCAnZmlndXJlJywgJ2Zvb3RlcicsICdmb3JtJywgJ2gxJywgJ2gyJywgJ2gzJywgJ2g0JywgJ2g1JywgJ2g2JywgJ2hlYWQnLCAnaGVhZGVyJywgJ2hncm91cCcsICdocicsICdodG1sJywgJ2knLCAnaWZyYW1lJywgJ2ltZycsICdpbnB1dCcsICdpbnMnLCAna2JkJywgJ2tleWdlbicsICdsYWJlbCcsICdsZWdlbmQnLCAnbGknLCAnbGluaycsICdtYWluJywgJ21hcCcsICdtYXJrJywgJ21hcnF1ZWUnLCAnbWVudScsICdtZW51aXRlbScsICdtZXRhJywgJ21ldGVyJywgJ25hdicsICdub3NjcmlwdCcsICdvYmplY3QnLCAnb2wnLCAnb3B0Z3JvdXAnLCAnb3B0aW9uJywgJ291dHB1dCcsICdwJywgJ3BhcmFtJywgJ3BpY3R1cmUnLCAncHJlJywgJ3Byb2dyZXNzJywgJ3EnLCAncnAnLCAncnQnLCAncnVieScsICdzJywgJ3NhbXAnLCAnc2NyaXB0JywgJ3NlY3Rpb24nLCAnc2VsZWN0JywgJ3NtYWxsJywgJ3NvdXJjZScsICdzcGFuJywgJ3N0cm9uZycsICdzdHlsZScsICdzdWInLCAnc3VtbWFyeScsICdzdXAnLCAndGFibGUnLCAndGJvZHknLCAndGQnLCAndGV4dGFyZWEnLCAndGZvb3QnLCAndGgnLCAndGhlYWQnLCAndGltZScsICd0aXRsZScsICd0cicsICd0cmFjaycsICd1JywgJ3VsJywgJ3ZhcicsICd2aWRlbycsICd3YnInLFxuXG4vLyBTVkdcbidjaXJjbGUnLCAnY2xpcFBhdGgnLCAnZGVmcycsICdlbGxpcHNlJywgJ2ZvcmVpZ25PYmplY3QnLCAnZycsICdpbWFnZScsICdsaW5lJywgJ2xpbmVhckdyYWRpZW50JywgJ21hc2snLCAncGF0aCcsICdwYXR0ZXJuJywgJ3BvbHlnb24nLCAncG9seWxpbmUnLCAncmFkaWFsR3JhZGllbnQnLCAncmVjdCcsICdzdG9wJywgJ3N2ZycsICd0ZXh0JywgJ3RzcGFuJ107XG5cbi8vIFxuXG52YXIgc3R5bGVkID0gZnVuY3Rpb24gc3R5bGVkKHRhZykge1xuICByZXR1cm4gY29uc3RydWN0V2l0aE9wdGlvbnMoY3JlYXRlU3R5bGVkQ29tcG9uZW50LCB0YWcpO1xufTtcblxuLy8gU2hvcnRoYW5kcyBmb3IgYWxsIHZhbGlkIEhUTUwgRWxlbWVudHNcbmRvbUVsZW1lbnRzLmZvckVhY2goZnVuY3Rpb24gKGRvbUVsZW1lbnQpIHtcbiAgc3R5bGVkW2RvbUVsZW1lbnRdID0gc3R5bGVkKGRvbUVsZW1lbnQpO1xufSk7XG5cbi8vIFxuXG52YXIgR2xvYmFsU3R5bGUgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEdsb2JhbFN0eWxlKHJ1bGVzLCBjb21wb25lbnRJZCkge1xuICAgIGNsYXNzQ2FsbENoZWNrKHRoaXMsIEdsb2JhbFN0eWxlKTtcblxuICAgIHRoaXMucnVsZXMgPSBydWxlcztcbiAgICB0aGlzLmNvbXBvbmVudElkID0gY29tcG9uZW50SWQ7XG4gICAgdGhpcy5pc1N0YXRpYyA9IGlzU3RhdGljUnVsZXMocnVsZXMsIEVNUFRZX0FSUkFZKTtcblxuICAgIGlmICghU3R5bGVTaGVldC5tYXN0ZXIuaGFzSWQoY29tcG9uZW50SWQpKSB7XG4gICAgICBTdHlsZVNoZWV0Lm1hc3Rlci5kZWZlcnJlZEluamVjdChjb21wb25lbnRJZCwgW10pO1xuICAgIH1cbiAgfVxuXG4gIEdsb2JhbFN0eWxlLnByb3RvdHlwZS5jcmVhdGVTdHlsZXMgPSBmdW5jdGlvbiBjcmVhdGVTdHlsZXMoZXhlY3V0aW9uQ29udGV4dCwgc3R5bGVTaGVldCkge1xuICAgIHZhciBmbGF0Q1NTID0gZmxhdHRlbih0aGlzLnJ1bGVzLCBleGVjdXRpb25Db250ZXh0LCBzdHlsZVNoZWV0KTtcbiAgICB2YXIgY3NzID0gc3RyaW5naWZ5UnVsZXMoZmxhdENTUywgJycpO1xuXG4gICAgc3R5bGVTaGVldC5pbmplY3QodGhpcy5jb21wb25lbnRJZCwgY3NzKTtcbiAgfTtcblxuICBHbG9iYWxTdHlsZS5wcm90b3R5cGUucmVtb3ZlU3R5bGVzID0gZnVuY3Rpb24gcmVtb3ZlU3R5bGVzKHN0eWxlU2hlZXQpIHtcbiAgICB2YXIgY29tcG9uZW50SWQgPSB0aGlzLmNvbXBvbmVudElkO1xuXG4gICAgaWYgKHN0eWxlU2hlZXQuaGFzSWQoY29tcG9uZW50SWQpKSB7XG4gICAgICBzdHlsZVNoZWV0LnJlbW92ZShjb21wb25lbnRJZCk7XG4gICAgfVxuICB9O1xuXG4gIC8vIFRPRE86IG92ZXJ3cml0ZSBpbi1wbGFjZSBpbnN0ZWFkIG9mIHJlbW92ZStjcmVhdGU/XG5cblxuICBHbG9iYWxTdHlsZS5wcm90b3R5cGUucmVuZGVyU3R5bGVzID0gZnVuY3Rpb24gcmVuZGVyU3R5bGVzKGV4ZWN1dGlvbkNvbnRleHQsIHN0eWxlU2hlZXQpIHtcbiAgICB0aGlzLnJlbW92ZVN0eWxlcyhzdHlsZVNoZWV0KTtcbiAgICB0aGlzLmNyZWF0ZVN0eWxlcyhleGVjdXRpb25Db250ZXh0LCBzdHlsZVNoZWV0KTtcbiAgfTtcblxuICByZXR1cm4gR2xvYmFsU3R5bGU7XG59KCk7XG5cbi8vIFxuXG4vLyBwbGFjZSBvdXIgY2FjaGUgaW50byBzaGFyZWQgY29udGV4dCBzbyBpdCdsbCBwZXJzaXN0IGJldHdlZW4gSE1Sc1xuaWYgKElTX0JST1dTRVIpIHtcbiAgd2luZG93LnNjQ0dTSE1SQ2FjaGUgPSB7fTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlR2xvYmFsU3R5bGUoc3RyaW5ncykge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgaW50ZXJwb2xhdGlvbnMgPSBBcnJheShfbGVuID4gMSA/IF9sZW4gLSAxIDogMCksIF9rZXkgPSAxOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgaW50ZXJwb2xhdGlvbnNbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgdmFyIHJ1bGVzID0gY3NzLmFwcGx5KHVuZGVmaW5lZCwgW3N0cmluZ3NdLmNvbmNhdChpbnRlcnBvbGF0aW9ucykpO1xuICB2YXIgaWQgPSAnc2MtZ2xvYmFsLScgKyBtdXJtdXJoYXNoKEpTT04uc3RyaW5naWZ5KHJ1bGVzKSk7XG4gIHZhciBzdHlsZSA9IG5ldyBHbG9iYWxTdHlsZShydWxlcywgaWQpO1xuXG4gIHZhciBHbG9iYWxTdHlsZUNvbXBvbmVudCA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gICAgaW5oZXJpdHMoR2xvYmFsU3R5bGVDb21wb25lbnQsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gR2xvYmFsU3R5bGVDb21wb25lbnQoKSB7XG4gICAgICBjbGFzc0NhbGxDaGVjayh0aGlzLCBHbG9iYWxTdHlsZUNvbXBvbmVudCk7XG5cbiAgICAgIHZhciBfdGhpcyA9IHBvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5jYWxsKHRoaXMpKTtcblxuICAgICAgdmFyIF90aGlzJGNvbnN0cnVjdG9yID0gX3RoaXMuY29uc3RydWN0b3IsXG4gICAgICAgICAgZ2xvYmFsU3R5bGUgPSBfdGhpcyRjb25zdHJ1Y3Rvci5nbG9iYWxTdHlsZSxcbiAgICAgICAgICBzdHlsZWRDb21wb25lbnRJZCA9IF90aGlzJGNvbnN0cnVjdG9yLnN0eWxlZENvbXBvbmVudElkO1xuXG5cbiAgICAgIGlmIChJU19CUk9XU0VSKSB7XG4gICAgICAgIHdpbmRvdy5zY0NHU0hNUkNhY2hlW3N0eWxlZENvbXBvbmVudElkXSA9ICh3aW5kb3cuc2NDR1NITVJDYWNoZVtzdHlsZWRDb21wb25lbnRJZF0gfHwgMCkgKyAxO1xuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIFRoaXMgZml4ZXMgSE1SIGNvbXBhdGliaWxpdHkuIERvbid0IGFzayBtZSB3aHksIGJ1dCB0aGlzIGNvbWJpbmF0aW9uIG9mXG4gICAgICAgKiBjYWNoaW5nIHRoZSBjbG9zdXJlIHZhcmlhYmxlcyB2aWEgc3RhdGljcyBhbmQgdGhlbiBwZXJzaXN0aW5nIHRoZSBzdGF0aWNzIGluXG4gICAgICAgKiBzdGF0ZSB3b3JrcyBhY3Jvc3MgSE1SIHdoZXJlIG5vIG90aGVyIGNvbWJpbmF0aW9uIGRpZC4gwq9cXF8o44OEKV8vwq9cbiAgICAgICAqL1xuICAgICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICAgIGdsb2JhbFN0eWxlOiBnbG9iYWxTdHlsZSxcbiAgICAgICAgc3R5bGVkQ29tcG9uZW50SWQ6IHN0eWxlZENvbXBvbmVudElkXG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cblxuICAgIEdsb2JhbFN0eWxlQ29tcG9uZW50LnByb3RvdHlwZS5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgaWYgKHdpbmRvdy5zY0NHU0hNUkNhY2hlW3RoaXMuc3RhdGUuc3R5bGVkQ29tcG9uZW50SWRdKSB7XG4gICAgICAgIHdpbmRvdy5zY0NHU0hNUkNhY2hlW3RoaXMuc3RhdGUuc3R5bGVkQ29tcG9uZW50SWRdIC09IDE7XG4gICAgICB9XG4gICAgICAvKipcbiAgICAgICAqIERlcGVuZGluZyBvbiB0aGUgb3JkZXIgXCJyZW5kZXJcIiBpcyBjYWxsZWQgdGhpcyBjYW4gY2F1c2UgdGhlIHN0eWxlcyB0byBiZSBsb3N0XG4gICAgICAgKiB1bnRpbCB0aGUgbmV4dCByZW5kZXIgcGFzcyBvZiB0aGUgcmVtYWluaW5nIGluc3RhbmNlLCB3aGljaCBtYXlcbiAgICAgICAqIG5vdCBiZSBpbW1lZGlhdGUuXG4gICAgICAgKi9cbiAgICAgIGlmICh3aW5kb3cuc2NDR1NITVJDYWNoZVt0aGlzLnN0YXRlLnN0eWxlZENvbXBvbmVudElkXSA9PT0gMCkge1xuICAgICAgICB0aGlzLnN0YXRlLmdsb2JhbFN0eWxlLnJlbW92ZVN0eWxlcyh0aGlzLnN0eWxlU2hlZXQpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBHbG9iYWxTdHlsZUNvbXBvbmVudC5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIFJlYWN0LkNoaWxkcmVuLmNvdW50KHRoaXMucHJvcHMuY2hpbGRyZW4pKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgIGNvbnNvbGUud2FybignVGhlIGdsb2JhbCBzdHlsZSBjb21wb25lbnQgJyArIHRoaXMuc3RhdGUuc3R5bGVkQ29tcG9uZW50SWQgKyAnIHdhcyBnaXZlbiBjaGlsZCBKU1guIGNyZWF0ZUdsb2JhbFN0eWxlIGRvZXMgbm90IHJlbmRlciBjaGlsZHJlbi4nKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgIFN0eWxlU2hlZXRDb25zdW1lcixcbiAgICAgICAgbnVsbCxcbiAgICAgICAgZnVuY3Rpb24gKHN0eWxlU2hlZXQpIHtcbiAgICAgICAgICBfdGhpczIuc3R5bGVTaGVldCA9IHN0eWxlU2hlZXQgfHwgU3R5bGVTaGVldC5tYXN0ZXI7XG5cbiAgICAgICAgICB2YXIgZ2xvYmFsU3R5bGUgPSBfdGhpczIuc3RhdGUuZ2xvYmFsU3R5bGU7XG5cblxuICAgICAgICAgIGlmIChnbG9iYWxTdHlsZS5pc1N0YXRpYykge1xuICAgICAgICAgICAgZ2xvYmFsU3R5bGUucmVuZGVyU3R5bGVzKFNUQVRJQ19FWEVDVVRJT05fQ09OVEVYVCwgX3RoaXMyLnN0eWxlU2hlZXQpO1xuXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgIFRoZW1lQ29uc3VtZXIsXG4gICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgIGZ1bmN0aW9uICh0aGVtZSkge1xuICAgICAgICAgICAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgICAgICAgICAgICB2YXIgZGVmYXVsdFByb3BzID0gX3RoaXMyLmNvbnN0cnVjdG9yLmRlZmF1bHRQcm9wcztcblxuXG4gICAgICAgICAgICAgICAgdmFyIGNvbnRleHQgPSBfZXh0ZW5kcyh7fSwgX3RoaXMyLnByb3BzKTtcblxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdGhlbWUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICBjb250ZXh0LnRoZW1lID0gZGV0ZXJtaW5lVGhlbWUoX3RoaXMyLnByb3BzLCB0aGVtZSwgZGVmYXVsdFByb3BzKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBnbG9iYWxTdHlsZS5yZW5kZXJTdHlsZXMoY29udGV4dCwgX3RoaXMyLnN0eWxlU2hlZXQpO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICApO1xuICAgIH07XG5cbiAgICByZXR1cm4gR2xvYmFsU3R5bGVDb21wb25lbnQ7XG4gIH0oUmVhY3QuQ29tcG9uZW50KTtcblxuICBHbG9iYWxTdHlsZUNvbXBvbmVudC5nbG9iYWxTdHlsZSA9IHN0eWxlO1xuICBHbG9iYWxTdHlsZUNvbXBvbmVudC5zdHlsZWRDb21wb25lbnRJZCA9IGlkO1xuXG5cbiAgcmV0dXJuIEdsb2JhbFN0eWxlQ29tcG9uZW50O1xufVxuXG4vLyBcblxudmFyIHJlcGxhY2VXaGl0ZXNwYWNlID0gZnVuY3Rpb24gcmVwbGFjZVdoaXRlc3BhY2Uoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvXFxzfFxcXFxuL2csICcnKTtcbn07XG5cbmZ1bmN0aW9uIGtleWZyYW1lcyhzdHJpbmdzKSB7XG4gIC8qIFdhcm5pbmcgaWYgeW91J3ZlIHVzZWQga2V5ZnJhbWVzIG9uIFJlYWN0IE5hdGl2ZSAqL1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJiBuYXZpZ2F0b3IucHJvZHVjdCA9PT0gJ1JlYWN0TmF0aXZlJykge1xuICAgIGNvbnNvbGUud2FybignYGtleWZyYW1lc2AgY2Fubm90IGJlIHVzZWQgb24gUmVhY3ROYXRpdmUsIG9ubHkgb24gdGhlIHdlYi4gVG8gZG8gYW5pbWF0aW9uIGluIFJlYWN0TmF0aXZlIHBsZWFzZSB1c2UgQW5pbWF0ZWQuJyk7XG4gIH1cblxuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgaW50ZXJwb2xhdGlvbnMgPSBBcnJheShfbGVuID4gMSA/IF9sZW4gLSAxIDogMCksIF9rZXkgPSAxOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgaW50ZXJwb2xhdGlvbnNbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgdmFyIHJ1bGVzID0gY3NzLmFwcGx5KHVuZGVmaW5lZCwgW3N0cmluZ3NdLmNvbmNhdChpbnRlcnBvbGF0aW9ucykpO1xuXG4gIHZhciBuYW1lID0gZ2VuZXJhdGVBbHBoYWJldGljTmFtZShtdXJtdXJoYXNoKHJlcGxhY2VXaGl0ZXNwYWNlKEpTT04uc3RyaW5naWZ5KHJ1bGVzKSkpKTtcblxuICByZXR1cm4gbmV3IEtleWZyYW1lcyhuYW1lLCBzdHJpbmdpZnlSdWxlcyhydWxlcywgbmFtZSwgJ0BrZXlmcmFtZXMnKSk7XG59XG5cbi8vIFxuXG52YXIgd2l0aFRoZW1lID0gKGZ1bmN0aW9uIChDb21wb25lbnQkJDEpIHtcbiAgdmFyIFdpdGhUaGVtZSA9IFJlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gKHByb3BzLCByZWYpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgIFRoZW1lQ29uc3VtZXIsXG4gICAgICBudWxsLFxuICAgICAgZnVuY3Rpb24gKHRoZW1lKSB7XG4gICAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgICAgdmFyIGRlZmF1bHRQcm9wcyA9IENvbXBvbmVudCQkMS5kZWZhdWx0UHJvcHM7XG5cbiAgICAgICAgdmFyIHRoZW1lUHJvcCA9IGRldGVybWluZVRoZW1lKHByb3BzLCB0aGVtZSwgZGVmYXVsdFByb3BzKTtcblxuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB0aGVtZVByb3AgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgICAgY29uc29sZS53YXJuKCdbd2l0aFRoZW1lXSBZb3UgYXJlIG5vdCB1c2luZyBhIFRoZW1lUHJvdmlkZXIgbm9yIHBhc3NpbmcgYSB0aGVtZSBwcm9wIG9yIGEgdGhlbWUgaW4gZGVmYXVsdFByb3BzIGluIGNvbXBvbmVudCBjbGFzcyBcIicgKyBnZXRDb21wb25lbnROYW1lKENvbXBvbmVudCQkMSkgKyAnXCInKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCQkMSwgX2V4dGVuZHMoe30sIHByb3BzLCB7IHRoZW1lOiB0aGVtZVByb3AsIHJlZjogcmVmIH0pKTtcbiAgICAgIH1cbiAgICApO1xuICB9KTtcblxuICBob2lzdE5vblJlYWN0U3RhdGljcyhXaXRoVGhlbWUsIENvbXBvbmVudCQkMSk7XG5cbiAgV2l0aFRoZW1lLmRpc3BsYXlOYW1lID0gJ1dpdGhUaGVtZSgnICsgZ2V0Q29tcG9uZW50TmFtZShDb21wb25lbnQkJDEpICsgJyknO1xuXG4gIHJldHVybiBXaXRoVGhlbWU7XG59KTtcblxuLy8gXG5cbi8qIGVzbGludC1kaXNhYmxlICovXG52YXIgX19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0hBVU5URURfQllfU1BPT0tZX0dIT1NUUyA9IHtcbiAgU3R5bGVTaGVldDogU3R5bGVTaGVldFxufTtcblxuLy8gXG5cbi8qIFdhcm5pbmcgaWYgeW91J3ZlIGltcG9ydGVkIHRoaXMgZmlsZSBvbiBSZWFjdCBOYXRpdmUgKi9cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIG5hdmlnYXRvci5wcm9kdWN0ID09PSAnUmVhY3ROYXRpdmUnKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gIGNvbnNvbGUud2FybihcIkl0IGxvb2tzIGxpa2UgeW91J3ZlIGltcG9ydGVkICdzdHlsZWQtY29tcG9uZW50cycgb24gUmVhY3QgTmF0aXZlLlxcblwiICsgXCJQZXJoYXBzIHlvdSdyZSBsb29raW5nIHRvIGltcG9ydCAnc3R5bGVkLWNvbXBvbmVudHMvbmF0aXZlJz9cXG5cIiArICdSZWFkIG1vcmUgYWJvdXQgdGhpcyBhdCBodHRwczovL3d3dy5zdHlsZWQtY29tcG9uZW50cy5jb20vZG9jcy9iYXNpY3MjcmVhY3QtbmF0aXZlJyk7XG59XG5cbi8qIFdhcm5pbmcgaWYgdGhlcmUgYXJlIHNldmVyYWwgaW5zdGFuY2VzIG9mIHN0eWxlZC1jb21wb25lbnRzICovXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Rlc3QnICYmIHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBuYXZpZ2F0b3IudXNlckFnZW50ID09PSAnc3RyaW5nJyAmJiBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ05vZGUuanMnKSA9PT0gLTEgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdqc2RvbScpID09PSAtMSkge1xuICB3aW5kb3dbJ19fc3R5bGVkLWNvbXBvbmVudHMtaW5pdF9fJ10gPSB3aW5kb3dbJ19fc3R5bGVkLWNvbXBvbmVudHMtaW5pdF9fJ10gfHwgMDtcblxuICBpZiAod2luZG93WydfX3N0eWxlZC1jb21wb25lbnRzLWluaXRfXyddID09PSAxKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICBjb25zb2xlLndhcm4oXCJJdCBsb29rcyBsaWtlIHRoZXJlIGFyZSBzZXZlcmFsIGluc3RhbmNlcyBvZiAnc3R5bGVkLWNvbXBvbmVudHMnIGluaXRpYWxpemVkIGluIHRoaXMgYXBwbGljYXRpb24uIFwiICsgJ1RoaXMgbWF5IGNhdXNlIGR5bmFtaWMgc3R5bGVzIG5vdCByZW5kZXJpbmcgcHJvcGVybHksIGVycm9ycyBoYXBwZW5pbmcgZHVyaW5nIHJlaHlkcmF0aW9uIHByb2Nlc3MgJyArICdhbmQgbWFrZXMgeW91ciBhcHBsaWNhdGlvbiBiaWdnZXIgd2l0aG91dCBhIGdvb2QgcmVhc29uLlxcblxcbicgKyAnU2VlIGh0dHBzOi8vcy1jLnNoLzJCQVh6ZWQgZm9yIG1vcmUgaW5mby4nKTtcbiAgfVxuXG4gIHdpbmRvd1snX19zdHlsZWQtY29tcG9uZW50cy1pbml0X18nXSArPSAxO1xufVxuXG4vL1xuXG5leHBvcnQgZGVmYXVsdCBzdHlsZWQ7XG5leHBvcnQgeyBjc3MsIGtleWZyYW1lcywgY3JlYXRlR2xvYmFsU3R5bGUsIGlzU3R5bGVkQ29tcG9uZW50LCBUaGVtZUNvbnN1bWVyLCBUaGVtZUNvbnRleHQsIFRoZW1lUHJvdmlkZXIsIHdpdGhUaGVtZSwgU2VydmVyU3R5bGVTaGVldCwgU3R5bGVTaGVldE1hbmFnZXIsIF9fRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9IQVVOVEVEX0JZX1NQT09LWV9HSE9TVFMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0eWxlZC1jb21wb25lbnRzLmJyb3dzZXIuZXNtLmpzLm1hcFxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogVXNlIGludmFyaWFudCgpIHRvIGFzc2VydCBzdGF0ZSB3aGljaCB5b3VyIHByb2dyYW0gYXNzdW1lcyB0byBiZSB0cnVlLlxuICpcbiAqIFByb3ZpZGUgc3ByaW50Zi1zdHlsZSBmb3JtYXQgKG9ubHkgJXMgaXMgc3VwcG9ydGVkKSBhbmQgYXJndW1lbnRzXG4gKiB0byBwcm92aWRlIGluZm9ybWF0aW9uIGFib3V0IHdoYXQgYnJva2UgYW5kIHdoYXQgeW91IHdlcmVcbiAqIGV4cGVjdGluZy5cbiAqXG4gKiBUaGUgaW52YXJpYW50IG1lc3NhZ2Ugd2lsbCBiZSBzdHJpcHBlZCBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGludmFyaWFudFxuICogd2lsbCByZW1haW4gdG8gZW5zdXJlIGxvZ2ljIGRvZXMgbm90IGRpZmZlciBpbiBwcm9kdWN0aW9uLlxuICovXG5cbnZhciBpbnZhcmlhbnQgPSBmdW5jdGlvbihjb25kaXRpb24sIGZvcm1hdCwgYSwgYiwgYywgZCwgZSwgZikge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhcmlhbnQgcmVxdWlyZXMgYW4gZXJyb3IgbWVzc2FnZSBhcmd1bWVudCcpO1xuICAgIH1cbiAgfVxuXG4gIGlmICghY29uZGl0aW9uKSB7XG4gICAgdmFyIGVycm9yO1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoXG4gICAgICAgICdNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCAnICtcbiAgICAgICAgJ2ZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuJ1xuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFyZ3MgPSBbYSwgYiwgYywgZCwgZSwgZl07XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoXG4gICAgICAgIGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbigpIHsgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107IH0pXG4gICAgICApO1xuICAgICAgZXJyb3IubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB9XG5cbiAgICBlcnJvci5mcmFtZXNUb1BvcCA9IDE7IC8vIHdlIGRvbid0IGNhcmUgYWJvdXQgaW52YXJpYW50J3Mgb3duIGZyYW1lXG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gaW52YXJpYW50O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU2ltaWxhciB0byBpbnZhcmlhbnQgYnV0IG9ubHkgbG9ncyBhIHdhcm5pbmcgaWYgdGhlIGNvbmRpdGlvbiBpcyBub3QgbWV0LlxuICogVGhpcyBjYW4gYmUgdXNlZCB0byBsb2cgaXNzdWVzIGluIGRldmVsb3BtZW50IGVudmlyb25tZW50cyBpbiBjcml0aWNhbFxuICogcGF0aHMuIFJlbW92aW5nIHRoZSBsb2dnaW5nIGNvZGUgZm9yIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzIHdpbGwga2VlcCB0aGVcbiAqIHNhbWUgbG9naWMgYW5kIGZvbGxvdyB0aGUgc2FtZSBjb2RlIHBhdGhzLlxuICovXG5cbnZhciBfX0RFVl9fID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJztcblxudmFyIHdhcm5pbmcgPSBmdW5jdGlvbigpIHt9O1xuXG5pZiAoX19ERVZfXykge1xuICB2YXIgcHJpbnRXYXJuaW5nID0gZnVuY3Rpb24gcHJpbnRXYXJuaW5nKGZvcm1hdCwgYXJncykge1xuICAgIHZhciBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIGFyZ3MgPSBuZXcgQXJyYXkobGVuID4gMSA/IGxlbiAtIDEgOiAwKTtcbiAgICBmb3IgKHZhciBrZXkgPSAxOyBrZXkgPCBsZW47IGtleSsrKSB7XG4gICAgICBhcmdzW2tleSAtIDFdID0gYXJndW1lbnRzW2tleV07XG4gICAgfVxuICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgdmFyIG1lc3NhZ2UgPSAnV2FybmluZzogJyArXG4gICAgICBmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBhcmdzW2FyZ0luZGV4KytdO1xuICAgICAgfSk7XG4gICAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgIC8vIC0tLSBXZWxjb21lIHRvIGRlYnVnZ2luZyBSZWFjdCAtLS1cbiAgICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgeW91IGNhbiB1c2UgdGhpcyBzdGFja1xuICAgICAgLy8gdG8gZmluZCB0aGUgY2FsbHNpdGUgdGhhdCBjYXVzZWQgdGhpcyB3YXJuaW5nIHRvIGZpcmUuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gICAgfSBjYXRjaCAoeCkge31cbiAgfVxuXG4gIHdhcm5pbmcgPSBmdW5jdGlvbihjb25kaXRpb24sIGZvcm1hdCwgYXJncykge1xuICAgIHZhciBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIGFyZ3MgPSBuZXcgQXJyYXkobGVuID4gMiA/IGxlbiAtIDIgOiAwKTtcbiAgICBmb3IgKHZhciBrZXkgPSAyOyBrZXkgPCBsZW47IGtleSsrKSB7XG4gICAgICBhcmdzW2tleSAtIDJdID0gYXJndW1lbnRzW2tleV07XG4gICAgfVxuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgICdgd2FybmluZyhjb25kaXRpb24sIGZvcm1hdCwgLi4uYXJncylgIHJlcXVpcmVzIGEgd2FybmluZyAnICtcbiAgICAgICAgICAnbWVzc2FnZSBhcmd1bWVudCdcbiAgICAgICk7XG4gICAgfVxuICAgIGlmICghY29uZGl0aW9uKSB7XG4gICAgICBwcmludFdhcm5pbmcuYXBwbHkobnVsbCwgW2Zvcm1hdF0uY29uY2F0KGFyZ3MpKTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gd2FybmluZztcbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiIWZ1bmN0aW9uKGUpe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPWUobnVsbCk6XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShlKG51bGwpKTp3aW5kb3cuc3R5bGlzPWUobnVsbCl9KGZ1bmN0aW9uIGUoYSl7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9L15cXDArL2csYz0vW1xcMFxcclxcZl0vZyxzPS86ICovZyx0PS96b298Z3JhLyxpPS8oWyw6IF0pKHRyYW5zZm9ybSkvZyxmPS8sK1xccyooPyFbXihdKlspXSkvZyxuPS8gK1xccyooPyFbXihdKlspXSkvZyxsPS8gKltcXDBdICovZyxvPS8sXFxyKz8vZyxoPS8oW1xcdFxcclxcbiBdKSpcXGY/Ji9nLHU9LzpnbG9iYWxcXCgoKD86W15cXChcXClcXFtcXF1dKnxcXFsuKlxcXXxcXChbXlxcKFxcKV0qXFwpKSopXFwpL2csZD0vXFxXKy9nLGI9L0Aoa1xcdyspXFxzKihcXFMqKVxccyovLHA9Lzo6KHBsYWNlKS9nLGs9LzoocmVhZC1vbmx5KS9nLGc9L1xccysoPz1be1xcXTs9Oj5dKS9nLEE9LyhbW309Oj5dKVxccysvZyxDPS8oXFx7W157XSs/KTsoPz1cXH0pL2csdz0vXFxzezIsfS9nLHY9LyhbXlxcKF0pKDorKSAqL2csbT0vW3N2aF1cXHcrLVt0YmxyXXsyfS8seD0vXFwoXFxzKiguKilcXHMqXFwpL2csJD0vKFtcXHNcXFNdKj8pOy9nLHk9Ly1zZWxmfGZsZXgtL2csTz0vW15dKj8oOltycF1bZWxdYVtcXHctXSspW15dKi8saj0vc3RyZXRjaHw6XFxzKlxcdytcXC0oPzpjb250ZXxhdmFpbCkvLHo9LyhbXi1dKShpbWFnZS1zZXRcXCgpLyxOPVwiLXdlYmtpdC1cIixTPVwiLW1vei1cIixGPVwiLW1zLVwiLFc9NTkscT0xMjUsQj0xMjMsRD00MCxFPTQxLEc9OTEsSD05MyxJPTEwLEo9MTMsSz05LEw9NjQsTT0zMixQPTM4LFE9NDUsUj05NSxUPTQyLFU9NDQsVj01OCxYPTM5LFk9MzQsWj00NyxfPTYyLGVlPTQzLGFlPTEyNixyZT0wLGNlPTEyLHNlPTExLHRlPTEwNyxpZT0xMDksZmU9MTE1LG5lPTExMixsZT0xMTEsb2U9MTA1LGhlPTk5LHVlPTEwMCxkZT0xMTIsYmU9MSxwZT0xLGtlPTAsZ2U9MSxBZT0xLENlPTEsd2U9MCx2ZT0wLG1lPTAseGU9W10sJGU9W10seWU9MCxPZT1udWxsLGplPS0yLHplPS0xLE5lPTAsU2U9MSxGZT0yLFdlPTMscWU9MCxCZT0xLERlPVwiXCIsRWU9XCJcIixHZT1cIlwiO2Z1bmN0aW9uIEhlKGUsYSxzLHQsaSl7Zm9yKHZhciBmLG4sbz0wLGg9MCx1PTAsZD0wLGc9MCxBPTAsQz0wLHc9MCxtPTAsJD0wLHk9MCxPPTAsaj0wLHo9MCxSPTAsd2U9MCwkZT0wLE9lPTAsamU9MCx6ZT1zLmxlbmd0aCxKZT16ZS0xLFJlPVwiXCIsVGU9XCJcIixVZT1cIlwiLFZlPVwiXCIsWGU9XCJcIixZZT1cIlwiO1I8emU7KXtpZihDPXMuY2hhckNvZGVBdChSKSxSPT09SmUpaWYoaCtkK3UrbyE9PTApe2lmKDAhPT1oKUM9aD09PVo/STpaO2Q9dT1vPTAsemUrKyxKZSsrfWlmKGgrZCt1K289PT0wKXtpZihSPT09SmUpe2lmKHdlPjApVGU9VGUucmVwbGFjZShjLFwiXCIpO2lmKFRlLnRyaW0oKS5sZW5ndGg+MCl7c3dpdGNoKEMpe2Nhc2UgTTpjYXNlIEs6Y2FzZSBXOmNhc2UgSjpjYXNlIEk6YnJlYWs7ZGVmYXVsdDpUZSs9cy5jaGFyQXQoUil9Qz1XfX1pZigxPT09JGUpc3dpdGNoKEMpe2Nhc2UgQjpjYXNlIHE6Y2FzZSBXOmNhc2UgWTpjYXNlIFg6Y2FzZSBEOmNhc2UgRTpjYXNlIFU6JGU9MDtjYXNlIEs6Y2FzZSBKOmNhc2UgSTpjYXNlIE06YnJlYWs7ZGVmYXVsdDpmb3IoJGU9MCxqZT1SLGc9QyxSLS0sQz1XO2plPHplOylzd2l0Y2gocy5jaGFyQ29kZUF0KGplKyspKXtjYXNlIEk6Y2FzZSBKOmNhc2UgVzorK1IsQz1nLGplPXplO2JyZWFrO2Nhc2UgVjppZih3ZT4wKSsrUixDPWc7Y2FzZSBCOmplPXplfX1zd2l0Y2goQyl7Y2FzZSBCOmZvcihnPShUZT1UZS50cmltKCkpLmNoYXJDb2RlQXQoMCkseT0xLGplPSsrUjtSPHplOyl7c3dpdGNoKEM9cy5jaGFyQ29kZUF0KFIpKXtjYXNlIEI6eSsrO2JyZWFrO2Nhc2UgcTp5LS07YnJlYWs7Y2FzZSBaOnN3aXRjaChBPXMuY2hhckNvZGVBdChSKzEpKXtjYXNlIFQ6Y2FzZSBaOlI9UWUoQSxSLEplLHMpfWJyZWFrO2Nhc2UgRzpDKys7Y2FzZSBEOkMrKztjYXNlIFk6Y2FzZSBYOmZvcig7UisrPEplJiZzLmNoYXJDb2RlQXQoUikhPT1DOyk7fWlmKDA9PT15KWJyZWFrO1IrK31pZihVZT1zLnN1YnN0cmluZyhqZSxSKSxnPT09cmUpZz0oVGU9VGUucmVwbGFjZShyLFwiXCIpLnRyaW0oKSkuY2hhckNvZGVBdCgwKTtzd2l0Y2goZyl7Y2FzZSBMOmlmKHdlPjApVGU9VGUucmVwbGFjZShjLFwiXCIpO3N3aXRjaChBPVRlLmNoYXJDb2RlQXQoMSkpe2Nhc2UgdWU6Y2FzZSBpZTpjYXNlIGZlOmNhc2UgUTpmPWE7YnJlYWs7ZGVmYXVsdDpmPXhlfWlmKGplPShVZT1IZShhLGYsVWUsQSxpKzEpKS5sZW5ndGgsbWU+MCYmMD09PWplKWplPVRlLmxlbmd0aDtpZih5ZT4wKWlmKGY9SWUoeGUsVGUsT2UpLG49UGUoV2UsVWUsZixhLHBlLGJlLGplLEEsaSx0KSxUZT1mLmpvaW4oXCJcIiksdm9pZCAwIT09bilpZigwPT09KGplPShVZT1uLnRyaW0oKSkubGVuZ3RoKSlBPTAsVWU9XCJcIjtpZihqZT4wKXN3aXRjaChBKXtjYXNlIGZlOlRlPVRlLnJlcGxhY2UoeCxNZSk7Y2FzZSB1ZTpjYXNlIGllOmNhc2UgUTpVZT1UZStcIntcIitVZStcIn1cIjticmVhaztjYXNlIHRlOmlmKFVlPShUZT1UZS5yZXBsYWNlKGIsXCIkMSAkMlwiKyhCZT4wP0RlOlwiXCIpKSkrXCJ7XCIrVWUrXCJ9XCIsMT09PUFlfHwyPT09QWUmJkxlKFwiQFwiK1VlLDMpKVVlPVwiQFwiK04rVWUrXCJAXCIrVWU7ZWxzZSBVZT1cIkBcIitVZTticmVhaztkZWZhdWx0OmlmKFVlPVRlK1VlLHQ9PT1kZSlWZSs9VWUsVWU9XCJcIn1lbHNlIFVlPVwiXCI7YnJlYWs7ZGVmYXVsdDpVZT1IZShhLEllKGEsVGUsT2UpLFVlLHQsaSsxKX1YZSs9VWUsTz0wLCRlPTAsej0wLHdlPTAsT2U9MCxqPTAsVGU9XCJcIixVZT1cIlwiLEM9cy5jaGFyQ29kZUF0KCsrUik7YnJlYWs7Y2FzZSBxOmNhc2UgVzppZigoamU9KFRlPSh3ZT4wP1RlLnJlcGxhY2UoYyxcIlwiKTpUZSkudHJpbSgpKS5sZW5ndGgpPjEpe2lmKDA9PT16KWlmKChnPVRlLmNoYXJDb2RlQXQoMCkpPT09UXx8Zz45NiYmZzwxMjMpamU9KFRlPVRlLnJlcGxhY2UoXCIgXCIsXCI6XCIpKS5sZW5ndGg7aWYoeWU+MClpZih2b2lkIDAhPT0obj1QZShTZSxUZSxhLGUscGUsYmUsVmUubGVuZ3RoLHQsaSx0KSkpaWYoMD09PShqZT0oVGU9bi50cmltKCkpLmxlbmd0aCkpVGU9XCJcXDBcXDBcIjtzd2l0Y2goZz1UZS5jaGFyQ29kZUF0KDApLEE9VGUuY2hhckNvZGVBdCgxKSxnKXtjYXNlIHJlOmJyZWFrO2Nhc2UgTDppZihBPT09b2V8fEE9PT1oZSl7WWUrPVRlK3MuY2hhckF0KFIpO2JyZWFrfWRlZmF1bHQ6aWYoVGUuY2hhckNvZGVBdChqZS0xKT09PVYpYnJlYWs7VmUrPUtlKFRlLGcsQSxUZS5jaGFyQ29kZUF0KDIpKX19Tz0wLCRlPTAsej0wLHdlPTAsT2U9MCxUZT1cIlwiLEM9cy5jaGFyQ29kZUF0KCsrUil9fXN3aXRjaChDKXtjYXNlIEo6Y2FzZSBJOmlmKGgrZCt1K28rdmU9PT0wKXN3aXRjaCgkKXtjYXNlIEU6Y2FzZSBYOmNhc2UgWTpjYXNlIEw6Y2FzZSBhZTpjYXNlIF86Y2FzZSBUOmNhc2UgZWU6Y2FzZSBaOmNhc2UgUTpjYXNlIFY6Y2FzZSBVOmNhc2UgVzpjYXNlIEI6Y2FzZSBxOmJyZWFrO2RlZmF1bHQ6aWYoej4wKSRlPTF9aWYoaD09PVopaD0wO2Vsc2UgaWYoZ2UrTz09PTAmJnQhPT10ZSYmVGUubGVuZ3RoPjApd2U9MSxUZSs9XCJcXDBcIjtpZih5ZSpxZT4wKVBlKE5lLFRlLGEsZSxwZSxiZSxWZS5sZW5ndGgsdCxpLHQpO2JlPTEscGUrKzticmVhaztjYXNlIFc6Y2FzZSBxOmlmKGgrZCt1K289PT0wKXtiZSsrO2JyZWFrfWRlZmF1bHQ6c3dpdGNoKGJlKyssUmU9cy5jaGFyQXQoUiksQyl7Y2FzZSBLOmNhc2UgTTppZihkK28raD09PTApc3dpdGNoKHcpe2Nhc2UgVTpjYXNlIFY6Y2FzZSBLOmNhc2UgTTpSZT1cIlwiO2JyZWFrO2RlZmF1bHQ6aWYoQyE9PU0pUmU9XCIgXCJ9YnJlYWs7Y2FzZSByZTpSZT1cIlxcXFwwXCI7YnJlYWs7Y2FzZSBjZTpSZT1cIlxcXFxmXCI7YnJlYWs7Y2FzZSBzZTpSZT1cIlxcXFx2XCI7YnJlYWs7Y2FzZSBQOmlmKGQraCtvPT09MCYmZ2U+MClPZT0xLHdlPTEsUmU9XCJcXGZcIitSZTticmVhaztjYXNlIDEwODppZihkK2grbytrZT09PTAmJno+MClzd2l0Y2goUi16KXtjYXNlIDI6aWYodz09PW5lJiZzLmNoYXJDb2RlQXQoUi0zKT09PVYpa2U9dztjYXNlIDg6aWYobT09PWxlKWtlPW19YnJlYWs7Y2FzZSBWOmlmKGQraCtvPT09MCl6PVI7YnJlYWs7Y2FzZSBVOmlmKGgrdStkK289PT0wKXdlPTEsUmUrPVwiXFxyXCI7YnJlYWs7Y2FzZSBZOmNhc2UgWDppZigwPT09aClkPWQ9PT1DPzA6MD09PWQ/QzpkO2JyZWFrO2Nhc2UgRzppZihkK2grdT09PTApbysrO2JyZWFrO2Nhc2UgSDppZihkK2grdT09PTApby0tO2JyZWFrO2Nhc2UgRTppZihkK2grbz09PTApdS0tO2JyZWFrO2Nhc2UgRDppZihkK2grbz09PTApe2lmKDA9PT1PKXN3aXRjaCgyKncrMyptKXtjYXNlIDUzMzpicmVhaztkZWZhdWx0Onk9MCxPPTF9dSsrfWJyZWFrO2Nhc2UgTDppZihoK3UrZCtvK3oraj09PTApaj0xO2JyZWFrO2Nhc2UgVDpjYXNlIFo6aWYoZCtvK3U+MClicmVhaztzd2l0Y2goaCl7Y2FzZSAwOnN3aXRjaCgyKkMrMypzLmNoYXJDb2RlQXQoUisxKSl7Y2FzZSAyMzU6aD1aO2JyZWFrO2Nhc2UgMjIwOmplPVIsaD1UfWJyZWFrO2Nhc2UgVDppZihDPT09WiYmdz09PVQmJmplKzIhPT1SKXtpZigzMz09PXMuY2hhckNvZGVBdChqZSsyKSlWZSs9cy5zdWJzdHJpbmcoamUsUisxKTtSZT1cIlwiLGg9MH19fWlmKDA9PT1oKXtpZihnZStkK28raj09PTAmJnQhPT10ZSYmQyE9PVcpc3dpdGNoKEMpe2Nhc2UgVTpjYXNlIGFlOmNhc2UgXzpjYXNlIGVlOmNhc2UgRTpjYXNlIEQ6aWYoMD09PU8pe3N3aXRjaCh3KXtjYXNlIEs6Y2FzZSBNOmNhc2UgSTpjYXNlIEo6UmUrPVwiXFwwXCI7YnJlYWs7ZGVmYXVsdDpSZT1cIlxcMFwiK1JlKyhDPT09VT9cIlwiOlwiXFwwXCIpfXdlPTF9ZWxzZSBzd2l0Y2goQyl7Y2FzZSBEOmlmKHorNz09PVImJjEwOD09PXcpej0wO089Kyt5O2JyZWFrO2Nhc2UgRTppZigwPT0oTz0tLXkpKXdlPTEsUmUrPVwiXFwwXCJ9YnJlYWs7Y2FzZSBLOmNhc2UgTTpzd2l0Y2godyl7Y2FzZSByZTpjYXNlIEI6Y2FzZSBxOmNhc2UgVzpjYXNlIFU6Y2FzZSBjZTpjYXNlIEs6Y2FzZSBNOmNhc2UgSTpjYXNlIEo6YnJlYWs7ZGVmYXVsdDppZigwPT09Tyl3ZT0xLFJlKz1cIlxcMFwifX1pZihUZSs9UmUsQyE9PU0mJkMhPT1LKSQ9Q319bT13LHc9QyxSKyt9aWYoamU9VmUubGVuZ3RoLG1lPjApaWYoMD09PWplJiYwPT09WGUubGVuZ3RoJiYwPT09YVswXS5sZW5ndGg9PWZhbHNlKWlmKHQhPT1pZXx8MT09PWEubGVuZ3RoJiYoZ2U+MD9FZTpHZSk9PT1hWzBdKWplPWEuam9pbihcIixcIikubGVuZ3RoKzI7aWYoamU+MCl7aWYoZj0wPT09Z2UmJnQhPT10ZT9mdW5jdGlvbihlKXtmb3IodmFyIGEscixzPTAsdD1lLmxlbmd0aCxpPUFycmF5KHQpO3M8dDsrK3Mpe2Zvcih2YXIgZj1lW3NdLnNwbGl0KGwpLG49XCJcIixvPTAsaD0wLHU9MCxkPTAsYj1mLmxlbmd0aDtvPGI7KytvKXtpZigwPT09KGg9KHI9ZltvXSkubGVuZ3RoKSYmYj4xKWNvbnRpbnVlO2lmKHU9bi5jaGFyQ29kZUF0KG4ubGVuZ3RoLTEpLGQ9ci5jaGFyQ29kZUF0KDApLGE9XCJcIiwwIT09bylzd2l0Y2godSl7Y2FzZSBUOmNhc2UgYWU6Y2FzZSBfOmNhc2UgZWU6Y2FzZSBNOmNhc2UgRDpicmVhaztkZWZhdWx0OmE9XCIgXCJ9c3dpdGNoKGQpe2Nhc2UgUDpyPWErRWU7Y2FzZSBhZTpjYXNlIF86Y2FzZSBlZTpjYXNlIE06Y2FzZSBFOmNhc2UgRDpicmVhaztjYXNlIEc6cj1hK3IrRWU7YnJlYWs7Y2FzZSBWOnN3aXRjaCgyKnIuY2hhckNvZGVBdCgxKSszKnIuY2hhckNvZGVBdCgyKSl7Y2FzZSA1MzA6aWYoQ2U+MCl7cj1hK3Iuc3Vic3RyaW5nKDgsaC0xKTticmVha31kZWZhdWx0OmlmKG88MXx8ZltvLTFdLmxlbmd0aDwxKXI9YStFZStyfWJyZWFrO2Nhc2UgVTphPVwiXCI7ZGVmYXVsdDppZihoPjEmJnIuaW5kZXhPZihcIjpcIik+MClyPWErci5yZXBsYWNlKHYsXCIkMVwiK0VlK1wiJDJcIik7ZWxzZSByPWErcitFZX1uKz1yfWlbc109bi5yZXBsYWNlKGMsXCJcIikudHJpbSgpfXJldHVybiBpfShhKTphLHllPjApaWYodm9pZCAwIT09KG49UGUoRmUsVmUsZixlLHBlLGJlLGplLHQsaSx0KSkmJjA9PT0oVmU9bikubGVuZ3RoKXJldHVybiBZZStWZStYZTtpZihWZT1mLmpvaW4oXCIsXCIpK1wie1wiK1ZlK1wifVwiLEFlKmtlIT0wKXtpZigyPT09QWUmJiFMZShWZSwyKSlrZT0wO3N3aXRjaChrZSl7Y2FzZSBsZTpWZT1WZS5yZXBsYWNlKGssXCI6XCIrUytcIiQxXCIpK1ZlO2JyZWFrO2Nhc2UgbmU6VmU9VmUucmVwbGFjZShwLFwiOjpcIitOK1wiaW5wdXQtJDFcIikrVmUucmVwbGFjZShwLFwiOjpcIitTK1wiJDFcIikrVmUucmVwbGFjZShwLFwiOlwiK0YrXCJpbnB1dC0kMVwiKStWZX1rZT0wfX1yZXR1cm4gWWUrVmUrWGV9ZnVuY3Rpb24gSWUoZSxhLHIpe3ZhciBjPWEudHJpbSgpLnNwbGl0KG8pLHM9Yyx0PWMubGVuZ3RoLGk9ZS5sZW5ndGg7c3dpdGNoKGkpe2Nhc2UgMDpjYXNlIDE6Zm9yKHZhciBmPTAsbj0wPT09aT9cIlwiOmVbMF0rXCIgXCI7Zjx0OysrZilzW2ZdPUplKG4sc1tmXSxyLGkpLnRyaW0oKTticmVhaztkZWZhdWx0OmY9MDt2YXIgbD0wO2ZvcihzPVtdO2Y8dDsrK2YpZm9yKHZhciBoPTA7aDxpOysraClzW2wrK109SmUoZVtoXStcIiBcIixjW2ZdLHIsaSkudHJpbSgpfXJldHVybiBzfWZ1bmN0aW9uIEplKGUsYSxyLGMpe3ZhciBzPWEsdD1zLmNoYXJDb2RlQXQoMCk7aWYodDwzMyl0PShzPXMudHJpbSgpKS5jaGFyQ29kZUF0KDApO3N3aXRjaCh0KXtjYXNlIFA6c3dpdGNoKGdlK2Mpe2Nhc2UgMDpjYXNlIDE6aWYoMD09PWUudHJpbSgpLmxlbmd0aClicmVhaztkZWZhdWx0OnJldHVybiBzLnJlcGxhY2UoaCxcIiQxXCIrZS50cmltKCkpfWJyZWFrO2Nhc2UgVjpzd2l0Y2gocy5jaGFyQ29kZUF0KDEpKXtjYXNlIDEwMzppZihDZT4wJiZnZT4wKXJldHVybiBzLnJlcGxhY2UodSxcIiQxXCIpLnJlcGxhY2UoaCxcIiQxXCIrR2UpO2JyZWFrO2RlZmF1bHQ6cmV0dXJuIGUudHJpbSgpK3MucmVwbGFjZShoLFwiJDFcIitlLnRyaW0oKSl9ZGVmYXVsdDppZihyKmdlPjAmJnMuaW5kZXhPZihcIlxcZlwiKT4wKXJldHVybiBzLnJlcGxhY2UoaCwoZS5jaGFyQ29kZUF0KDApPT09Vj9cIlwiOlwiJDFcIikrZS50cmltKCkpfXJldHVybiBlK3N9ZnVuY3Rpb24gS2UoZSxhLHIsYyl7dmFyIGwsbz0wLGg9ZStcIjtcIix1PTIqYSszKnIrNCpjO2lmKDk0ND09PXUpcmV0dXJuIGZ1bmN0aW9uKGUpe3ZhciBhPWUubGVuZ3RoLHI9ZS5pbmRleE9mKFwiOlwiLDkpKzEsYz1lLnN1YnN0cmluZygwLHIpLnRyaW0oKSxzPWUuc3Vic3RyaW5nKHIsYS0xKS50cmltKCk7c3dpdGNoKGUuY2hhckNvZGVBdCg5KSpCZSl7Y2FzZSAwOmJyZWFrO2Nhc2UgUTppZigxMTAhPT1lLmNoYXJDb2RlQXQoMTApKWJyZWFrO2RlZmF1bHQ6Zm9yKHZhciB0PXMuc3BsaXQoKHM9XCJcIixmKSksaT0wLHI9MCxhPXQubGVuZ3RoO2k8YTtyPTAsKytpKXtmb3IodmFyIGw9dFtpXSxvPWwuc3BsaXQobik7bD1vW3JdOyl7dmFyIGg9bC5jaGFyQ29kZUF0KDApO2lmKDE9PT1CZSYmKGg+TCYmaDw5MHx8aD45NiYmaDwxMjN8fGg9PT1SfHxoPT09USYmbC5jaGFyQ29kZUF0KDEpIT09USkpc3dpdGNoKGlzTmFOKHBhcnNlRmxvYXQobCkpKygtMSE9PWwuaW5kZXhPZihcIihcIikpKXtjYXNlIDE6c3dpdGNoKGwpe2Nhc2VcImluZmluaXRlXCI6Y2FzZVwiYWx0ZXJuYXRlXCI6Y2FzZVwiYmFja3dhcmRzXCI6Y2FzZVwicnVubmluZ1wiOmNhc2VcIm5vcm1hbFwiOmNhc2VcImZvcndhcmRzXCI6Y2FzZVwiYm90aFwiOmNhc2VcIm5vbmVcIjpjYXNlXCJsaW5lYXJcIjpjYXNlXCJlYXNlXCI6Y2FzZVwiZWFzZS1pblwiOmNhc2VcImVhc2Utb3V0XCI6Y2FzZVwiZWFzZS1pbi1vdXRcIjpjYXNlXCJwYXVzZWRcIjpjYXNlXCJyZXZlcnNlXCI6Y2FzZVwiYWx0ZXJuYXRlLXJldmVyc2VcIjpjYXNlXCJpbmhlcml0XCI6Y2FzZVwiaW5pdGlhbFwiOmNhc2VcInVuc2V0XCI6Y2FzZVwic3RlcC1zdGFydFwiOmNhc2VcInN0ZXAtZW5kXCI6YnJlYWs7ZGVmYXVsdDpsKz1EZX19b1tyKytdPWx9cys9KDA9PT1pP1wiXCI6XCIsXCIpK28uam9pbihcIiBcIil9fWlmKHM9YytzK1wiO1wiLDE9PT1BZXx8Mj09PUFlJiZMZShzLDEpKXJldHVybiBOK3MrcztyZXR1cm4gc30oaCk7ZWxzZSBpZigwPT09QWV8fDI9PT1BZSYmIUxlKGgsMSkpcmV0dXJuIGg7c3dpdGNoKHUpe2Nhc2UgMTAxNTpyZXR1cm4gOTc9PT1oLmNoYXJDb2RlQXQoMTApP04raCtoOmg7Y2FzZSA5NTE6cmV0dXJuIDExNj09PWguY2hhckNvZGVBdCgzKT9OK2graDpoO2Nhc2UgOTYzOnJldHVybiAxMTA9PT1oLmNoYXJDb2RlQXQoNSk/TitoK2g6aDtjYXNlIDEwMDk6aWYoMTAwIT09aC5jaGFyQ29kZUF0KDQpKWJyZWFrO2Nhc2UgOTY5OmNhc2UgOTQyOnJldHVybiBOK2graDtjYXNlIDk3ODpyZXR1cm4gTitoK1MraCtoO2Nhc2UgMTAxOTpjYXNlIDk4MzpyZXR1cm4gTitoK1MraCtGK2graDtjYXNlIDg4MzppZihoLmNoYXJDb2RlQXQoOCk9PT1RKXJldHVybiBOK2graDtpZihoLmluZGV4T2YoXCJpbWFnZS1zZXQoXCIsMTEpPjApcmV0dXJuIGgucmVwbGFjZSh6LFwiJDFcIitOK1wiJDJcIikraDtyZXR1cm4gaDtjYXNlIDkzMjppZihoLmNoYXJDb2RlQXQoNCk9PT1RKXN3aXRjaChoLmNoYXJDb2RlQXQoNSkpe2Nhc2UgMTAzOnJldHVybiBOK1wiYm94LVwiK2gucmVwbGFjZShcIi1ncm93XCIsXCJcIikrTitoK0YraC5yZXBsYWNlKFwiZ3Jvd1wiLFwicG9zaXRpdmVcIikraDtjYXNlIDExNTpyZXR1cm4gTitoK0YraC5yZXBsYWNlKFwic2hyaW5rXCIsXCJuZWdhdGl2ZVwiKStoO2Nhc2UgOTg6cmV0dXJuIE4raCtGK2gucmVwbGFjZShcImJhc2lzXCIsXCJwcmVmZXJyZWQtc2l6ZVwiKStofXJldHVybiBOK2grRitoK2g7Y2FzZSA5NjQ6cmV0dXJuIE4raCtGK1wiZmxleC1cIitoK2g7Y2FzZSAxMDIzOmlmKDk5IT09aC5jaGFyQ29kZUF0KDgpKWJyZWFrO3JldHVybiBsPWguc3Vic3RyaW5nKGguaW5kZXhPZihcIjpcIiwxNSkpLnJlcGxhY2UoXCJmbGV4LVwiLFwiXCIpLnJlcGxhY2UoXCJzcGFjZS1iZXR3ZWVuXCIsXCJqdXN0aWZ5XCIpLE4rXCJib3gtcGFja1wiK2wrTitoK0YrXCJmbGV4LXBhY2tcIitsK2g7Y2FzZSAxMDA1OnJldHVybiB0LnRlc3QoaCk/aC5yZXBsYWNlKHMsXCI6XCIrTikraC5yZXBsYWNlKHMsXCI6XCIrUykraDpoO2Nhc2UgMWUzOnN3aXRjaChvPShsPWguc3Vic3RyaW5nKDEzKS50cmltKCkpLmluZGV4T2YoXCItXCIpKzEsbC5jaGFyQ29kZUF0KDApK2wuY2hhckNvZGVBdChvKSl7Y2FzZSAyMjY6bD1oLnJlcGxhY2UobSxcInRiXCIpO2JyZWFrO2Nhc2UgMjMyOmw9aC5yZXBsYWNlKG0sXCJ0Yi1ybFwiKTticmVhaztjYXNlIDIyMDpsPWgucmVwbGFjZShtLFwibHJcIik7YnJlYWs7ZGVmYXVsdDpyZXR1cm4gaH1yZXR1cm4gTitoK0YrbCtoO2Nhc2UgMTAxNzppZigtMT09PWguaW5kZXhPZihcInN0aWNreVwiLDkpKXJldHVybiBoO2Nhc2UgOTc1OnN3aXRjaChvPShoPWUpLmxlbmd0aC0xMCx1PShsPSgzMz09PWguY2hhckNvZGVBdChvKT9oLnN1YnN0cmluZygwLG8pOmgpLnN1YnN0cmluZyhlLmluZGV4T2YoXCI6XCIsNykrMSkudHJpbSgpKS5jaGFyQ29kZUF0KDApKygwfGwuY2hhckNvZGVBdCg3KSkpe2Nhc2UgMjAzOmlmKGwuY2hhckNvZGVBdCg4KTwxMTEpYnJlYWs7Y2FzZSAxMTU6aD1oLnJlcGxhY2UobCxOK2wpK1wiO1wiK2g7YnJlYWs7Y2FzZSAyMDc6Y2FzZSAxMDI6aD1oLnJlcGxhY2UobCxOKyh1PjEwMj9cImlubGluZS1cIjpcIlwiKStcImJveFwiKStcIjtcIitoLnJlcGxhY2UobCxOK2wpK1wiO1wiK2gucmVwbGFjZShsLEYrbCtcImJveFwiKStcIjtcIitofXJldHVybiBoK1wiO1wiO2Nhc2UgOTM4OmlmKGguY2hhckNvZGVBdCg1KT09PVEpc3dpdGNoKGguY2hhckNvZGVBdCg2KSl7Y2FzZSAxMDU6cmV0dXJuIGw9aC5yZXBsYWNlKFwiLWl0ZW1zXCIsXCJcIiksTitoK04rXCJib3gtXCIrbCtGK1wiZmxleC1cIitsK2g7Y2FzZSAxMTU6cmV0dXJuIE4raCtGK1wiZmxleC1pdGVtLVwiK2gucmVwbGFjZSh5LFwiXCIpK2g7ZGVmYXVsdDpyZXR1cm4gTitoK0YrXCJmbGV4LWxpbmUtcGFja1wiK2gucmVwbGFjZShcImFsaWduLWNvbnRlbnRcIixcIlwiKS5yZXBsYWNlKHksXCJcIikraH1icmVhaztjYXNlIDk3MzpjYXNlIDk4OTppZihoLmNoYXJDb2RlQXQoMykhPT1RfHwxMjI9PT1oLmNoYXJDb2RlQXQoNCkpYnJlYWs7Y2FzZSA5MzE6Y2FzZSA5NTM6aWYodHJ1ZT09PWoudGVzdChlKSlpZigxMTU9PT0obD1lLnN1YnN0cmluZyhlLmluZGV4T2YoXCI6XCIpKzEpKS5jaGFyQ29kZUF0KDApKXJldHVybiBLZShlLnJlcGxhY2UoXCJzdHJldGNoXCIsXCJmaWxsLWF2YWlsYWJsZVwiKSxhLHIsYykucmVwbGFjZShcIjpmaWxsLWF2YWlsYWJsZVwiLFwiOnN0cmV0Y2hcIik7ZWxzZSByZXR1cm4gaC5yZXBsYWNlKGwsTitsKStoLnJlcGxhY2UobCxTK2wucmVwbGFjZShcImZpbGwtXCIsXCJcIikpK2g7YnJlYWs7Y2FzZSA5NjI6aWYoaD1OK2grKDEwMj09PWguY2hhckNvZGVBdCg1KT9GK2g6XCJcIikraCxyK2M9PT0yMTEmJjEwNT09PWguY2hhckNvZGVBdCgxMykmJmguaW5kZXhPZihcInRyYW5zZm9ybVwiLDEwKT4wKXJldHVybiBoLnN1YnN0cmluZygwLGguaW5kZXhPZihcIjtcIiwyNykrMSkucmVwbGFjZShpLFwiJDFcIitOK1wiJDJcIikraH1yZXR1cm4gaH1mdW5jdGlvbiBMZShlLGEpe3ZhciByPWUuaW5kZXhPZigxPT09YT9cIjpcIjpcIntcIiksYz1lLnN1YnN0cmluZygwLDMhPT1hP3I6MTApLHM9ZS5zdWJzdHJpbmcocisxLGUubGVuZ3RoLTEpO3JldHVybiBPZSgyIT09YT9jOmMucmVwbGFjZShPLFwiJDFcIikscyxhKX1mdW5jdGlvbiBNZShlLGEpe3ZhciByPUtlKGEsYS5jaGFyQ29kZUF0KDApLGEuY2hhckNvZGVBdCgxKSxhLmNoYXJDb2RlQXQoMikpO3JldHVybiByIT09YStcIjtcIj9yLnJlcGxhY2UoJCxcIiBvciAoJDEpXCIpLnN1YnN0cmluZyg0KTpcIihcIithK1wiKVwifWZ1bmN0aW9uIFBlKGUsYSxyLGMscyx0LGksZixuLGwpe2Zvcih2YXIgbyxoPTAsdT1hO2g8eWU7KytoKXN3aXRjaChvPSRlW2hdLmNhbGwoVGUsZSx1LHIsYyxzLHQsaSxmLG4sbCkpe2Nhc2Ugdm9pZCAwOmNhc2UgZmFsc2U6Y2FzZSB0cnVlOmNhc2UgbnVsbDpicmVhaztkZWZhdWx0OnU9b31pZih1IT09YSlyZXR1cm4gdX1mdW5jdGlvbiBRZShlLGEscixjKXtmb3IodmFyIHM9YSsxO3M8cjsrK3Mpc3dpdGNoKGMuY2hhckNvZGVBdChzKSl7Y2FzZSBaOmlmKGU9PT1UKWlmKGMuY2hhckNvZGVBdChzLTEpPT09VCYmYSsyIT09cylyZXR1cm4gcysxO2JyZWFrO2Nhc2UgSTppZihlPT09WilyZXR1cm4gcysxfXJldHVybiBzfWZ1bmN0aW9uIFJlKGUpe2Zvcih2YXIgYSBpbiBlKXt2YXIgcj1lW2FdO3N3aXRjaChhKXtjYXNlXCJrZXlmcmFtZVwiOkJlPTB8cjticmVhaztjYXNlXCJnbG9iYWxcIjpDZT0wfHI7YnJlYWs7Y2FzZVwiY2FzY2FkZVwiOmdlPTB8cjticmVhaztjYXNlXCJjb21wcmVzc1wiOndlPTB8cjticmVhaztjYXNlXCJzZW1pY29sb25cIjp2ZT0wfHI7YnJlYWs7Y2FzZVwicHJlc2VydmVcIjptZT0wfHI7YnJlYWs7Y2FzZVwicHJlZml4XCI6aWYoT2U9bnVsbCwhcilBZT0wO2Vsc2UgaWYoXCJmdW5jdGlvblwiIT10eXBlb2YgcilBZT0xO2Vsc2UgQWU9MixPZT1yfX1yZXR1cm4gUmV9ZnVuY3Rpb24gVGUoYSxyKXtpZih2b2lkIDAhPT10aGlzJiZ0aGlzLmNvbnN0cnVjdG9yPT09VGUpcmV0dXJuIGUoYSk7dmFyIHM9YSx0PXMuY2hhckNvZGVBdCgwKTtpZih0PDMzKXQ9KHM9cy50cmltKCkpLmNoYXJDb2RlQXQoMCk7aWYoQmU+MClEZT1zLnJlcGxhY2UoZCx0PT09Rz9cIlwiOlwiLVwiKTtpZih0PTEsMT09PWdlKUdlPXM7ZWxzZSBFZT1zO3ZhciBpLGY9W0dlXTtpZih5ZT4wKWlmKHZvaWQgMCE9PShpPVBlKHplLHIsZixmLHBlLGJlLDAsMCwwLDApKSYmXCJzdHJpbmdcIj09dHlwZW9mIGkpcj1pO3ZhciBuPUhlKHhlLGYsciwwLDApO2lmKHllPjApaWYodm9pZCAwIT09KGk9UGUoamUsbixmLGYscGUsYmUsbi5sZW5ndGgsMCwwLDApKSYmXCJzdHJpbmdcIiE9dHlwZW9mKG49aSkpdD0wO3JldHVybiBEZT1cIlwiLEdlPVwiXCIsRWU9XCJcIixrZT0wLHBlPTEsYmU9MSx3ZSp0PT0wP246bi5yZXBsYWNlKGMsXCJcIikucmVwbGFjZShnLFwiXCIpLnJlcGxhY2UoQSxcIiQxXCIpLnJlcGxhY2UoQyxcIiQxXCIpLnJlcGxhY2UodyxcIiBcIil9aWYoVGUudXNlPWZ1bmN0aW9uIGUoYSl7c3dpdGNoKGEpe2Nhc2Ugdm9pZCAwOmNhc2UgbnVsbDp5ZT0kZS5sZW5ndGg9MDticmVhaztkZWZhdWx0OmlmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGEpJGVbeWUrK109YTtlbHNlIGlmKFwib2JqZWN0XCI9PXR5cGVvZiBhKWZvcih2YXIgcj0wLGM9YS5sZW5ndGg7cjxjOysrcillKGFbcl0pO2Vsc2UgcWU9MHwhIWF9cmV0dXJuIGV9LFRlLnNldD1SZSx2b2lkIDAhPT1hKVJlKGEpO3JldHVybiBUZX0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3R5bGlzLm1pbi5qcy5tYXAiLCJ2YXIgc2ltcGxlSXNFcXVhbCA9IGZ1bmN0aW9uIHNpbXBsZUlzRXF1YWwoYSwgYikge1xuICByZXR1cm4gYSA9PT0gYjtcbn07XG5cbmZ1bmN0aW9uIGluZGV4IChyZXN1bHRGbiwgaXNFcXVhbCkge1xuICBpZiAoaXNFcXVhbCA9PT0gdm9pZCAwKSB7XG4gICAgaXNFcXVhbCA9IHNpbXBsZUlzRXF1YWw7XG4gIH1cblxuICB2YXIgbGFzdFRoaXM7XG4gIHZhciBsYXN0QXJncyA9IFtdO1xuICB2YXIgbGFzdFJlc3VsdDtcbiAgdmFyIGNhbGxlZE9uY2UgPSBmYWxzZTtcblxuICB2YXIgaXNOZXdBcmdFcXVhbFRvTGFzdCA9IGZ1bmN0aW9uIGlzTmV3QXJnRXF1YWxUb0xhc3QobmV3QXJnLCBpbmRleCkge1xuICAgIHJldHVybiBpc0VxdWFsKG5ld0FyZywgbGFzdEFyZ3NbaW5kZXhdLCBpbmRleCk7XG4gIH07XG5cbiAgdmFyIHJlc3VsdCA9IGZ1bmN0aW9uIHJlc3VsdCgpIHtcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgbmV3QXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIG5ld0FyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgaWYgKGNhbGxlZE9uY2UgJiYgbGFzdFRoaXMgPT09IHRoaXMgJiYgbmV3QXJncy5sZW5ndGggPT09IGxhc3RBcmdzLmxlbmd0aCAmJiBuZXdBcmdzLmV2ZXJ5KGlzTmV3QXJnRXF1YWxUb0xhc3QpKSB7XG4gICAgICByZXR1cm4gbGFzdFJlc3VsdDtcbiAgICB9XG5cbiAgICBsYXN0UmVzdWx0ID0gcmVzdWx0Rm4uYXBwbHkodGhpcywgbmV3QXJncyk7XG4gICAgY2FsbGVkT25jZSA9IHRydWU7XG4gICAgbGFzdFRoaXMgPSB0aGlzO1xuICAgIGxhc3RBcmdzID0gbmV3QXJncztcbiAgICByZXR1cm4gbGFzdFJlc3VsdDtcbiAgfTtcblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBpbmRleDtcbiIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCIoZnVuY3Rpb24gKGZhY3RvcnkpIHtcblx0dHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnID8gKG1vZHVsZVsnZXhwb3J0cyddID0gZmFjdG9yeSgpKSA6XG5cdFx0dHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmVbJ2FtZCddID8gZGVmaW5lKGZhY3RvcnkoKSkgOlxuXHRcdFx0KHdpbmRvd1snc3R5bGlzUnVsZVNoZWV0J10gPSBmYWN0b3J5KCkpXG59KGZ1bmN0aW9uICgpIHtcblxuXHQndXNlIHN0cmljdCdcblxuXHRyZXR1cm4gZnVuY3Rpb24gKGluc2VydFJ1bGUpIHtcblx0XHR2YXIgZGVsaW1pdGVyID0gJy8qfCovJ1xuXHRcdHZhciBuZWVkbGUgPSBkZWxpbWl0ZXIrJ30nXG5cblx0XHRmdW5jdGlvbiB0b1NoZWV0IChibG9jaykge1xuXHRcdFx0aWYgKGJsb2NrKVxuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdGluc2VydFJ1bGUoYmxvY2sgKyAnfScpXG5cdFx0XHRcdH0gY2F0Y2ggKGUpIHt9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGZ1bmN0aW9uIHJ1bGVTaGVldCAoY29udGV4dCwgY29udGVudCwgc2VsZWN0b3JzLCBwYXJlbnRzLCBsaW5lLCBjb2x1bW4sIGxlbmd0aCwgbnMsIGRlcHRoLCBhdCkge1xuXHRcdFx0c3dpdGNoIChjb250ZXh0KSB7XG5cdFx0XHRcdC8vIHByb3BlcnR5XG5cdFx0XHRcdGNhc2UgMTpcblx0XHRcdFx0XHQvLyBAaW1wb3J0XG5cdFx0XHRcdFx0aWYgKGRlcHRoID09PSAwICYmIGNvbnRlbnQuY2hhckNvZGVBdCgwKSA9PT0gNjQpXG5cdFx0XHRcdFx0XHRyZXR1cm4gaW5zZXJ0UnVsZShjb250ZW50Kyc7JyksICcnXG5cdFx0XHRcdFx0YnJlYWtcblx0XHRcdFx0Ly8gc2VsZWN0b3Jcblx0XHRcdFx0Y2FzZSAyOlxuXHRcdFx0XHRcdGlmIChucyA9PT0gMClcblx0XHRcdFx0XHRcdHJldHVybiBjb250ZW50ICsgZGVsaW1pdGVyXG5cdFx0XHRcdFx0YnJlYWtcblx0XHRcdFx0Ly8gYXQtcnVsZVxuXHRcdFx0XHRjYXNlIDM6XG5cdFx0XHRcdFx0c3dpdGNoIChucykge1xuXHRcdFx0XHRcdFx0Ly8gQGZvbnQtZmFjZSwgQHBhZ2Vcblx0XHRcdFx0XHRcdGNhc2UgMTAyOlxuXHRcdFx0XHRcdFx0Y2FzZSAxMTI6XG5cdFx0XHRcdFx0XHRcdHJldHVybiBpbnNlcnRSdWxlKHNlbGVjdG9yc1swXStjb250ZW50KSwgJydcblx0XHRcdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0XHRcdHJldHVybiBjb250ZW50ICsgKGF0ID09PSAwID8gZGVsaW1pdGVyIDogJycpXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRjYXNlIC0yOlxuXHRcdFx0XHRcdGNvbnRlbnQuc3BsaXQobmVlZGxlKS5mb3JFYWNoKHRvU2hlZXQpXG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59KSlcbiIsInZhciB1bml0bGVzc0tleXMgPSB7XG4gIGFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiAxLFxuICBib3JkZXJJbWFnZU91dHNldDogMSxcbiAgYm9yZGVySW1hZ2VTbGljZTogMSxcbiAgYm9yZGVySW1hZ2VXaWR0aDogMSxcbiAgYm94RmxleDogMSxcbiAgYm94RmxleEdyb3VwOiAxLFxuICBib3hPcmRpbmFsR3JvdXA6IDEsXG4gIGNvbHVtbkNvdW50OiAxLFxuICBjb2x1bW5zOiAxLFxuICBmbGV4OiAxLFxuICBmbGV4R3JvdzogMSxcbiAgZmxleFBvc2l0aXZlOiAxLFxuICBmbGV4U2hyaW5rOiAxLFxuICBmbGV4TmVnYXRpdmU6IDEsXG4gIGZsZXhPcmRlcjogMSxcbiAgZ3JpZFJvdzogMSxcbiAgZ3JpZFJvd0VuZDogMSxcbiAgZ3JpZFJvd1NwYW46IDEsXG4gIGdyaWRSb3dTdGFydDogMSxcbiAgZ3JpZENvbHVtbjogMSxcbiAgZ3JpZENvbHVtbkVuZDogMSxcbiAgZ3JpZENvbHVtblNwYW46IDEsXG4gIGdyaWRDb2x1bW5TdGFydDogMSxcbiAgbXNHcmlkUm93OiAxLFxuICBtc0dyaWRSb3dTcGFuOiAxLFxuICBtc0dyaWRDb2x1bW46IDEsXG4gIG1zR3JpZENvbHVtblNwYW46IDEsXG4gIGZvbnRXZWlnaHQ6IDEsXG4gIGxpbmVIZWlnaHQ6IDEsXG4gIG9wYWNpdHk6IDEsXG4gIG9yZGVyOiAxLFxuICBvcnBoYW5zOiAxLFxuICB0YWJTaXplOiAxLFxuICB3aWRvd3M6IDEsXG4gIHpJbmRleDogMSxcbiAgem9vbTogMSxcbiAgV2Via2l0TGluZUNsYW1wOiAxLFxuICAvLyBTVkctcmVsYXRlZCBwcm9wZXJ0aWVzXG4gIGZpbGxPcGFjaXR5OiAxLFxuICBmbG9vZE9wYWNpdHk6IDEsXG4gIHN0b3BPcGFjaXR5OiAxLFxuICBzdHJva2VEYXNoYXJyYXk6IDEsXG4gIHN0cm9rZURhc2hvZmZzZXQ6IDEsXG4gIHN0cm9rZU1pdGVybGltaXQ6IDEsXG4gIHN0cm9rZU9wYWNpdHk6IDEsXG4gIHN0cm9rZVdpZHRoOiAxXG59O1xuXG5leHBvcnQgZGVmYXVsdCB1bml0bGVzc0tleXM7XG4iLCJ2YXIgaXNhcnJheSA9IHJlcXVpcmUoJ2lzYXJyYXknKVxuXG4vKipcbiAqIEV4cG9zZSBgcGF0aFRvUmVnZXhwYC5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBwYXRoVG9SZWdleHBcbm1vZHVsZS5leHBvcnRzLnBhcnNlID0gcGFyc2Vcbm1vZHVsZS5leHBvcnRzLmNvbXBpbGUgPSBjb21waWxlXG5tb2R1bGUuZXhwb3J0cy50b2tlbnNUb0Z1bmN0aW9uID0gdG9rZW5zVG9GdW5jdGlvblxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9SZWdFeHAgPSB0b2tlbnNUb1JlZ0V4cFxuXG4vKipcbiAqIFRoZSBtYWluIHBhdGggbWF0Y2hpbmcgcmVnZXhwIHV0aWxpdHkuXG4gKlxuICogQHR5cGUge1JlZ0V4cH1cbiAqL1xudmFyIFBBVEhfUkVHRVhQID0gbmV3IFJlZ0V4cChbXG4gIC8vIE1hdGNoIGVzY2FwZWQgY2hhcmFjdGVycyB0aGF0IHdvdWxkIG90aGVyd2lzZSBhcHBlYXIgaW4gZnV0dXJlIG1hdGNoZXMuXG4gIC8vIFRoaXMgYWxsb3dzIHRoZSB1c2VyIHRvIGVzY2FwZSBzcGVjaWFsIGNoYXJhY3RlcnMgdGhhdCB3b24ndCB0cmFuc2Zvcm0uXG4gICcoXFxcXFxcXFwuKScsXG4gIC8vIE1hdGNoIEV4cHJlc3Mtc3R5bGUgcGFyYW1ldGVycyBhbmQgdW4tbmFtZWQgcGFyYW1ldGVycyB3aXRoIGEgcHJlZml4XG4gIC8vIGFuZCBvcHRpb25hbCBzdWZmaXhlcy4gTWF0Y2hlcyBhcHBlYXIgYXM6XG4gIC8vXG4gIC8vIFwiLzp0ZXN0KFxcXFxkKyk/XCIgPT4gW1wiL1wiLCBcInRlc3RcIiwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgXCI/XCIsIHVuZGVmaW5lZF1cbiAgLy8gXCIvcm91dGUoXFxcXGQrKVwiICA9PiBbdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkXVxuICAvLyBcIi8qXCIgICAgICAgICAgICA9PiBbXCIvXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCIqXCJdXG4gICcoW1xcXFwvLl0pPyg/Oig/OlxcXFw6KFxcXFx3KykoPzpcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKT98XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSkoWysqP10pP3woXFxcXCopKSdcbl0uam9pbignfCcpLCAnZycpXG5cbi8qKlxuICogUGFyc2UgYSBzdHJpbmcgZm9yIHRoZSByYXcgdG9rZW5zLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gb3B0aW9uc1xuICogQHJldHVybiB7IUFycmF5fVxuICovXG5mdW5jdGlvbiBwYXJzZSAoc3RyLCBvcHRpb25zKSB7XG4gIHZhciB0b2tlbnMgPSBbXVxuICB2YXIga2V5ID0gMFxuICB2YXIgaW5kZXggPSAwXG4gIHZhciBwYXRoID0gJydcbiAgdmFyIGRlZmF1bHREZWxpbWl0ZXIgPSBvcHRpb25zICYmIG9wdGlvbnMuZGVsaW1pdGVyIHx8ICcvJ1xuICB2YXIgcmVzXG5cbiAgd2hpbGUgKChyZXMgPSBQQVRIX1JFR0VYUC5leGVjKHN0cikpICE9IG51bGwpIHtcbiAgICB2YXIgbSA9IHJlc1swXVxuICAgIHZhciBlc2NhcGVkID0gcmVzWzFdXG4gICAgdmFyIG9mZnNldCA9IHJlcy5pbmRleFxuICAgIHBhdGggKz0gc3RyLnNsaWNlKGluZGV4LCBvZmZzZXQpXG4gICAgaW5kZXggPSBvZmZzZXQgKyBtLmxlbmd0aFxuXG4gICAgLy8gSWdub3JlIGFscmVhZHkgZXNjYXBlZCBzZXF1ZW5jZXMuXG4gICAgaWYgKGVzY2FwZWQpIHtcbiAgICAgIHBhdGggKz0gZXNjYXBlZFsxXVxuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICB2YXIgbmV4dCA9IHN0cltpbmRleF1cbiAgICB2YXIgcHJlZml4ID0gcmVzWzJdXG4gICAgdmFyIG5hbWUgPSByZXNbM11cbiAgICB2YXIgY2FwdHVyZSA9IHJlc1s0XVxuICAgIHZhciBncm91cCA9IHJlc1s1XVxuICAgIHZhciBtb2RpZmllciA9IHJlc1s2XVxuICAgIHZhciBhc3RlcmlzayA9IHJlc1s3XVxuXG4gICAgLy8gUHVzaCB0aGUgY3VycmVudCBwYXRoIG9udG8gdGhlIHRva2Vucy5cbiAgICBpZiAocGF0aCkge1xuICAgICAgdG9rZW5zLnB1c2gocGF0aClcbiAgICAgIHBhdGggPSAnJ1xuICAgIH1cblxuICAgIHZhciBwYXJ0aWFsID0gcHJlZml4ICE9IG51bGwgJiYgbmV4dCAhPSBudWxsICYmIG5leHQgIT09IHByZWZpeFxuICAgIHZhciByZXBlYXQgPSBtb2RpZmllciA9PT0gJysnIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgb3B0aW9uYWwgPSBtb2RpZmllciA9PT0gJz8nIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgZGVsaW1pdGVyID0gcmVzWzJdIHx8IGRlZmF1bHREZWxpbWl0ZXJcbiAgICB2YXIgcGF0dGVybiA9IGNhcHR1cmUgfHwgZ3JvdXBcblxuICAgIHRva2Vucy5wdXNoKHtcbiAgICAgIG5hbWU6IG5hbWUgfHwga2V5KyssXG4gICAgICBwcmVmaXg6IHByZWZpeCB8fCAnJyxcbiAgICAgIGRlbGltaXRlcjogZGVsaW1pdGVyLFxuICAgICAgb3B0aW9uYWw6IG9wdGlvbmFsLFxuICAgICAgcmVwZWF0OiByZXBlYXQsXG4gICAgICBwYXJ0aWFsOiBwYXJ0aWFsLFxuICAgICAgYXN0ZXJpc2s6ICEhYXN0ZXJpc2ssXG4gICAgICBwYXR0ZXJuOiBwYXR0ZXJuID8gZXNjYXBlR3JvdXAocGF0dGVybikgOiAoYXN0ZXJpc2sgPyAnLionIDogJ1teJyArIGVzY2FwZVN0cmluZyhkZWxpbWl0ZXIpICsgJ10rPycpXG4gICAgfSlcbiAgfVxuXG4gIC8vIE1hdGNoIGFueSBjaGFyYWN0ZXJzIHN0aWxsIHJlbWFpbmluZy5cbiAgaWYgKGluZGV4IDwgc3RyLmxlbmd0aCkge1xuICAgIHBhdGggKz0gc3RyLnN1YnN0cihpbmRleClcbiAgfVxuXG4gIC8vIElmIHRoZSBwYXRoIGV4aXN0cywgcHVzaCBpdCBvbnRvIHRoZSBlbmQuXG4gIGlmIChwYXRoKSB7XG4gICAgdG9rZW5zLnB1c2gocGF0aClcbiAgfVxuXG4gIHJldHVybiB0b2tlbnNcbn1cblxuLyoqXG4gKiBDb21waWxlIGEgc3RyaW5nIHRvIGEgdGVtcGxhdGUgZnVuY3Rpb24gZm9yIHRoZSBwYXRoLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gICAgICAgICAgICAgc3RyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFmdW5jdGlvbihPYmplY3Q9LCBPYmplY3Q9KX1cbiAqL1xuZnVuY3Rpb24gY29tcGlsZSAoc3RyLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb0Z1bmN0aW9uKHBhcnNlKHN0ciwgb3B0aW9ucykpXG59XG5cbi8qKlxuICogUHJldHRpZXIgZW5jb2Rpbmcgb2YgVVJJIHBhdGggc2VnbWVudHMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvW1xcLz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFbmNvZGUgdGhlIGFzdGVyaXNrIHBhcmFtZXRlci4gU2ltaWxhciB0byBgcHJldHR5YCwgYnV0IGFsbG93cyBzbGFzaGVzLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ31cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZW5jb2RlQXN0ZXJpc2sgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvWz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBtZXRob2QgZm9yIHRyYW5zZm9ybWluZyB0b2tlbnMgaW50byB0aGUgcGF0aCBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9GdW5jdGlvbiAodG9rZW5zKSB7XG4gIC8vIENvbXBpbGUgYWxsIHRoZSB0b2tlbnMgaW50byByZWdleHBzLlxuICB2YXIgbWF0Y2hlcyA9IG5ldyBBcnJheSh0b2tlbnMubGVuZ3RoKVxuXG4gIC8vIENvbXBpbGUgYWxsIHRoZSBwYXR0ZXJucyBiZWZvcmUgY29tcGlsYXRpb24uXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHR5cGVvZiB0b2tlbnNbaV0gPT09ICdvYmplY3QnKSB7XG4gICAgICBtYXRjaGVzW2ldID0gbmV3IFJlZ0V4cCgnXig/OicgKyB0b2tlbnNbaV0ucGF0dGVybiArICcpJCcpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChvYmosIG9wdHMpIHtcbiAgICB2YXIgcGF0aCA9ICcnXG4gICAgdmFyIGRhdGEgPSBvYmogfHwge31cbiAgICB2YXIgb3B0aW9ucyA9IG9wdHMgfHwge31cbiAgICB2YXIgZW5jb2RlID0gb3B0aW9ucy5wcmV0dHkgPyBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgOiBlbmNvZGVVUklDb21wb25lbnRcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cblxuICAgICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcGF0aCArPSB0b2tlblxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHZhciB2YWx1ZSA9IGRhdGFbdG9rZW4ubmFtZV1cbiAgICAgIHZhciBzZWdtZW50XG5cbiAgICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICAgIC8vIFByZXBlbmQgcGFydGlhbCBzZWdtZW50IHByZWZpeGVzLlxuICAgICAgICAgIGlmICh0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgICBwYXRoICs9IHRva2VuLnByZWZpeFxuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBiZSBkZWZpbmVkJylcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoaXNhcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCByZXBlYXQsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHZhbHVlKSArICdgJylcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbm90IGJlIGVtcHR5JylcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHZhbHVlLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgc2VnbWVudCA9IGVuY29kZSh2YWx1ZVtqXSlcblxuICAgICAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBhbGwgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeShzZWdtZW50KSArICdgJylcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBwYXRoICs9IChqID09PSAwID8gdG9rZW4ucHJlZml4IDogdG9rZW4uZGVsaW1pdGVyKSArIHNlZ21lbnRcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHNlZ21lbnQgPSB0b2tlbi5hc3RlcmlzayA/IGVuY29kZUFzdGVyaXNrKHZhbHVlKSA6IGVuY29kZSh2YWx1ZSlcblxuICAgICAgaWYgKCFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgXCInICsgc2VnbWVudCArICdcIicpXG4gICAgICB9XG5cbiAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4ICsgc2VnbWVudFxuICAgIH1cblxuICAgIHJldHVybiBwYXRoXG4gIH1cbn1cblxuLyoqXG4gKiBFc2NhcGUgYSByZWd1bGFyIGV4cHJlc3Npb24gc3RyaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZVN0cmluZyAoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXxcXC9cXFxcXSkvZywgJ1xcXFwkMScpXG59XG5cbi8qKlxuICogRXNjYXBlIHRoZSBjYXB0dXJpbmcgZ3JvdXAgYnkgZXNjYXBpbmcgc3BlY2lhbCBjaGFyYWN0ZXJzIGFuZCBtZWFuaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gZ3JvdXBcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZXNjYXBlR3JvdXAgKGdyb3VwKSB7XG4gIHJldHVybiBncm91cC5yZXBsYWNlKC8oWz0hOiRcXC8oKV0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEF0dGFjaCB0aGUga2V5cyBhcyBhIHByb3BlcnR5IG9mIHRoZSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IVJlZ0V4cH0gcmVcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGF0dGFjaEtleXMgKHJlLCBrZXlzKSB7XG4gIHJlLmtleXMgPSBrZXlzXG4gIHJldHVybiByZVxufVxuXG4vKipcbiAqIEdldCB0aGUgZmxhZ3MgZm9yIGEgcmVnZXhwIGZyb20gdGhlIG9wdGlvbnMuXG4gKlxuICogQHBhcmFtICB7T2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGZsYWdzIChvcHRpb25zKSB7XG4gIHJldHVybiBvcHRpb25zLnNlbnNpdGl2ZSA/ICcnIDogJ2knXG59XG5cbi8qKlxuICogUHVsbCBvdXQga2V5cyBmcm9tIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHJlZ2V4cFRvUmVnZXhwIChwYXRoLCBrZXlzKSB7XG4gIC8vIFVzZSBhIG5lZ2F0aXZlIGxvb2thaGVhZCB0byBtYXRjaCBvbmx5IGNhcHR1cmluZyBncm91cHMuXG4gIHZhciBncm91cHMgPSBwYXRoLnNvdXJjZS5tYXRjaCgvXFwoKD8hXFw/KS9nKVxuXG4gIGlmIChncm91cHMpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGdyb3Vwcy5sZW5ndGg7IGkrKykge1xuICAgICAga2V5cy5wdXNoKHtcbiAgICAgICAgbmFtZTogaSxcbiAgICAgICAgcHJlZml4OiBudWxsLFxuICAgICAgICBkZWxpbWl0ZXI6IG51bGwsXG4gICAgICAgIG9wdGlvbmFsOiBmYWxzZSxcbiAgICAgICAgcmVwZWF0OiBmYWxzZSxcbiAgICAgICAgcGFydGlhbDogZmFsc2UsXG4gICAgICAgIGFzdGVyaXNrOiBmYWxzZSxcbiAgICAgICAgcGF0dGVybjogbnVsbFxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhwYXRoLCBrZXlzKVxufVxuXG4vKipcbiAqIFRyYW5zZm9ybSBhbiBhcnJheSBpbnRvIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gIHBhdGhcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGFycmF5VG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgdmFyIHBhcnRzID0gW11cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHBhdGgubGVuZ3RoOyBpKyspIHtcbiAgICBwYXJ0cy5wdXNoKHBhdGhUb1JlZ2V4cChwYXRoW2ldLCBrZXlzLCBvcHRpb25zKS5zb3VyY2UpXG4gIH1cblxuICB2YXIgcmVnZXhwID0gbmV3IFJlZ0V4cCgnKD86JyArIHBhcnRzLmpvaW4oJ3wnKSArICcpJywgZmxhZ3Mob3B0aW9ucykpXG5cbiAgcmV0dXJuIGF0dGFjaEtleXMocmVnZXhwLCBrZXlzKVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIHBhdGggcmVnZXhwIGZyb20gc3RyaW5nIGlucHV0LlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHN0cmluZ1RvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb1JlZ0V4cChwYXJzZShwYXRoLCBvcHRpb25zKSwga2V5cywgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBmdW5jdGlvbiBmb3IgdGFraW5nIHRva2VucyBhbmQgcmV0dXJuaW5nIGEgUmVnRXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gICAgICAgICAgdG9rZW5zXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19IGtleXNcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9SZWdFeHAgKHRva2Vucywga2V5cywgb3B0aW9ucykge1xuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKVxuICAgIGtleXMgPSBbXVxuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cblxuICB2YXIgc3RyaWN0ID0gb3B0aW9ucy5zdHJpY3RcbiAgdmFyIGVuZCA9IG9wdGlvbnMuZW5kICE9PSBmYWxzZVxuICB2YXIgcm91dGUgPSAnJ1xuXG4gIC8vIEl0ZXJhdGUgb3ZlciB0aGUgdG9rZW5zIGFuZCBjcmVhdGUgb3VyIHJlZ2V4cCBzdHJpbmcuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG5cbiAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgcm91dGUgKz0gZXNjYXBlU3RyaW5nKHRva2VuKVxuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgcHJlZml4ID0gZXNjYXBlU3RyaW5nKHRva2VuLnByZWZpeClcbiAgICAgIHZhciBjYXB0dXJlID0gJyg/OicgKyB0b2tlbi5wYXR0ZXJuICsgJyknXG5cbiAgICAgIGtleXMucHVzaCh0b2tlbilcblxuICAgICAgaWYgKHRva2VuLnJlcGVhdCkge1xuICAgICAgICBjYXB0dXJlICs9ICcoPzonICsgcHJlZml4ICsgY2FwdHVyZSArICcpKidcbiAgICAgIH1cblxuICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgIGlmICghdG9rZW4ucGFydGlhbCkge1xuICAgICAgICAgIGNhcHR1cmUgPSAnKD86JyArIHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSk/J1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyk/J1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjYXB0dXJlID0gcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpJ1xuICAgICAgfVxuXG4gICAgICByb3V0ZSArPSBjYXB0dXJlXG4gICAgfVxuICB9XG5cbiAgdmFyIGRlbGltaXRlciA9IGVzY2FwZVN0cmluZyhvcHRpb25zLmRlbGltaXRlciB8fCAnLycpXG4gIHZhciBlbmRzV2l0aERlbGltaXRlciA9IHJvdXRlLnNsaWNlKC1kZWxpbWl0ZXIubGVuZ3RoKSA9PT0gZGVsaW1pdGVyXG5cbiAgLy8gSW4gbm9uLXN0cmljdCBtb2RlIHdlIGFsbG93IGEgc2xhc2ggYXQgdGhlIGVuZCBvZiBtYXRjaC4gSWYgdGhlIHBhdGggdG9cbiAgLy8gbWF0Y2ggYWxyZWFkeSBlbmRzIHdpdGggYSBzbGFzaCwgd2UgcmVtb3ZlIGl0IGZvciBjb25zaXN0ZW5jeS4gVGhlIHNsYXNoXG4gIC8vIGlzIHZhbGlkIGF0IHRoZSBlbmQgb2YgYSBwYXRoIG1hdGNoLCBub3QgaW4gdGhlIG1pZGRsZS4gVGhpcyBpcyBpbXBvcnRhbnRcbiAgLy8gaW4gbm9uLWVuZGluZyBtb2RlLCB3aGVyZSBcIi90ZXN0L1wiIHNob3VsZG4ndCBtYXRjaCBcIi90ZXN0Ly9yb3V0ZVwiLlxuICBpZiAoIXN0cmljdCkge1xuICAgIHJvdXRlID0gKGVuZHNXaXRoRGVsaW1pdGVyID8gcm91dGUuc2xpY2UoMCwgLWRlbGltaXRlci5sZW5ndGgpIDogcm91dGUpICsgJyg/OicgKyBkZWxpbWl0ZXIgKyAnKD89JCkpPydcbiAgfVxuXG4gIGlmIChlbmQpIHtcbiAgICByb3V0ZSArPSAnJCdcbiAgfSBlbHNlIHtcbiAgICAvLyBJbiBub24tZW5kaW5nIG1vZGUsIHdlIG5lZWQgdGhlIGNhcHR1cmluZyBncm91cHMgdG8gbWF0Y2ggYXMgbXVjaCBhc1xuICAgIC8vIHBvc3NpYmxlIGJ5IHVzaW5nIGEgcG9zaXRpdmUgbG9va2FoZWFkIHRvIHRoZSBlbmQgb3IgbmV4dCBwYXRoIHNlZ21lbnQuXG4gICAgcm91dGUgKz0gc3RyaWN0ICYmIGVuZHNXaXRoRGVsaW1pdGVyID8gJycgOiAnKD89JyArIGRlbGltaXRlciArICd8JCknXG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhuZXcgUmVnRXhwKCdeJyArIHJvdXRlLCBmbGFncyhvcHRpb25zKSksIGtleXMpXG59XG5cbi8qKlxuICogTm9ybWFsaXplIHRoZSBnaXZlbiBwYXRoIHN0cmluZywgcmV0dXJuaW5nIGEgcmVndWxhciBleHByZXNzaW9uLlxuICpcbiAqIEFuIGVtcHR5IGFycmF5IGNhbiBiZSBwYXNzZWQgaW4gZm9yIHRoZSBrZXlzLCB3aGljaCB3aWxsIGhvbGQgdGhlXG4gKiBwbGFjZWhvbGRlciBrZXkgZGVzY3JpcHRpb25zLiBGb3IgZXhhbXBsZSwgdXNpbmcgYC91c2VyLzppZGAsIGBrZXlzYCB3aWxsXG4gKiBjb250YWluIGBbeyBuYW1lOiAnaWQnLCBkZWxpbWl0ZXI6ICcvJywgb3B0aW9uYWw6IGZhbHNlLCByZXBlYXQ6IGZhbHNlIH1dYC5cbiAqXG4gKiBAcGFyYW0gIHsoc3RyaW5nfFJlZ0V4cHxBcnJheSl9IHBhdGhcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0gICAgICAga2V5c1xuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBwYXRoVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XG4gICAgb3B0aW9ucyA9IC8qKiBAdHlwZSB7IU9iamVjdH0gKi8gKGtleXMgfHwgb3B0aW9ucylcbiAgICBrZXlzID0gW11cbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgaWYgKHBhdGggaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICByZXR1cm4gcmVnZXhwVG9SZWdleHAocGF0aCwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSlcbiAgfVxuXG4gIGlmIChpc2FycmF5KHBhdGgpKSB7XG4gICAgcmV0dXJuIGFycmF5VG9SZWdleHAoLyoqIEB0eXBlIHshQXJyYXl9ICovIChwYXRoKSwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSwgb3B0aW9ucylcbiAgfVxuXG4gIHJldHVybiBzdHJpbmdUb1JlZ2V4cCgvKiogQHR5cGUge3N0cmluZ30gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxufVxuIiwiZnVuY3Rpb24gbWVtb2l6ZShmbikge1xuICB2YXIgY2FjaGUgPSB7fTtcbiAgcmV0dXJuIGZ1bmN0aW9uIChhcmcpIHtcbiAgICBpZiAoY2FjaGVbYXJnXSA9PT0gdW5kZWZpbmVkKSBjYWNoZVthcmddID0gZm4oYXJnKTtcbiAgICByZXR1cm4gY2FjaGVbYXJnXTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgbWVtb2l6ZTtcbiIsImltcG9ydCBtZW1vaXplIGZyb20gJ0BlbW90aW9uL21lbW9pemUnO1xuXG52YXIgcmVhY3RQcm9wc1JlZ2V4ID0gL14oKGNoaWxkcmVufGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MfGtleXxyZWZ8YXV0b0ZvY3VzfGRlZmF1bHRWYWx1ZXxkZWZhdWx0Q2hlY2tlZHxpbm5lckhUTUx8c3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nfHN1cHByZXNzSHlkcmF0aW9uV2FybmluZ3x2YWx1ZUxpbmt8YWNjZXB0fGFjY2VwdENoYXJzZXR8YWNjZXNzS2V5fGFjdGlvbnxhbGxvd3xhbGxvd1VzZXJNZWRpYXxhbGxvd1BheW1lbnRSZXF1ZXN0fGFsbG93RnVsbFNjcmVlbnxhbGxvd1RyYW5zcGFyZW5jeXxhbHR8YXN5bmN8YXV0b0NvbXBsZXRlfGF1dG9QbGF5fGNhcHR1cmV8Y2VsbFBhZGRpbmd8Y2VsbFNwYWNpbmd8Y2hhbGxlbmdlfGNoYXJTZXR8Y2hlY2tlZHxjaXRlfGNsYXNzSUR8Y2xhc3NOYW1lfGNvbHN8Y29sU3Bhbnxjb250ZW50fGNvbnRlbnRFZGl0YWJsZXxjb250ZXh0TWVudXxjb250cm9sc3xjb250cm9sc0xpc3R8Y29vcmRzfGNyb3NzT3JpZ2lufGRhdGF8ZGF0ZVRpbWV8ZGVmYXVsdHxkZWZlcnxkaXJ8ZGlzYWJsZWR8ZG93bmxvYWR8ZHJhZ2dhYmxlfGVuY1R5cGV8Zm9ybXxmb3JtQWN0aW9ufGZvcm1FbmNUeXBlfGZvcm1NZXRob2R8Zm9ybU5vVmFsaWRhdGV8Zm9ybVRhcmdldHxmcmFtZUJvcmRlcnxoZWFkZXJzfGhlaWdodHxoaWRkZW58aGlnaHxocmVmfGhyZWZMYW5nfGh0bWxGb3J8aHR0cEVxdWl2fGlkfGlucHV0TW9kZXxpbnRlZ3JpdHl8aXN8a2V5UGFyYW1zfGtleVR5cGV8a2luZHxsYWJlbHxsYW5nfGxpc3R8bG9vcHxsb3d8bWFyZ2luSGVpZ2h0fG1hcmdpbldpZHRofG1heHxtYXhMZW5ndGh8bWVkaWF8bWVkaWFHcm91cHxtZXRob2R8bWlufG1pbkxlbmd0aHxtdWx0aXBsZXxtdXRlZHxuYW1lfG5vbmNlfG5vVmFsaWRhdGV8b3BlbnxvcHRpbXVtfHBhdHRlcm58cGxhY2Vob2xkZXJ8cGxheXNJbmxpbmV8cG9zdGVyfHByZWxvYWR8cHJvZmlsZXxyYWRpb0dyb3VwfHJlYWRPbmx5fHJlZmVycmVyUG9saWN5fHJlbHxyZXF1aXJlZHxyZXZlcnNlZHxyb2xlfHJvd3N8cm93U3BhbnxzYW5kYm94fHNjb3BlfHNjb3BlZHxzY3JvbGxpbmd8c2VhbWxlc3N8c2VsZWN0ZWR8c2hhcGV8c2l6ZXxzaXplc3xzbG90fHNwYW58c3BlbGxDaGVja3xzcmN8c3JjRG9jfHNyY0xhbmd8c3JjU2V0fHN0YXJ0fHN0ZXB8c3R5bGV8c3VtbWFyeXx0YWJJbmRleHx0YXJnZXR8dGl0bGV8dHlwZXx1c2VNYXB8dmFsdWV8d2lkdGh8d21vZGV8d3JhcHxhYm91dHxkYXRhdHlwZXxpbmxpc3R8cHJlZml4fHByb3BlcnR5fHJlc291cmNlfHR5cGVvZnx2b2NhYnxhdXRvQ2FwaXRhbGl6ZXxhdXRvQ29ycmVjdHxhdXRvU2F2ZXxjb2xvcnxpdGVtUHJvcHxpdGVtU2NvcGV8aXRlbVR5cGV8aXRlbUlEfGl0ZW1SZWZ8cmVzdWx0c3xzZWN1cml0eXx1bnNlbGVjdGFibGV8YWNjZW50SGVpZ2h0fGFjY3VtdWxhdGV8YWRkaXRpdmV8YWxpZ25tZW50QmFzZWxpbmV8YWxsb3dSZW9yZGVyfGFscGhhYmV0aWN8YW1wbGl0dWRlfGFyYWJpY0Zvcm18YXNjZW50fGF0dHJpYnV0ZU5hbWV8YXR0cmlidXRlVHlwZXxhdXRvUmV2ZXJzZXxhemltdXRofGJhc2VGcmVxdWVuY3l8YmFzZWxpbmVTaGlmdHxiYXNlUHJvZmlsZXxiYm94fGJlZ2lufGJpYXN8Ynl8Y2FsY01vZGV8Y2FwSGVpZ2h0fGNsaXB8Y2xpcFBhdGhVbml0c3xjbGlwUGF0aHxjbGlwUnVsZXxjb2xvckludGVycG9sYXRpb258Y29sb3JJbnRlcnBvbGF0aW9uRmlsdGVyc3xjb2xvclByb2ZpbGV8Y29sb3JSZW5kZXJpbmd8Y29udGVudFNjcmlwdFR5cGV8Y29udGVudFN0eWxlVHlwZXxjdXJzb3J8Y3h8Y3l8ZHxkZWNlbGVyYXRlfGRlc2NlbnR8ZGlmZnVzZUNvbnN0YW50fGRpcmVjdGlvbnxkaXNwbGF5fGRpdmlzb3J8ZG9taW5hbnRCYXNlbGluZXxkdXJ8ZHh8ZHl8ZWRnZU1vZGV8ZWxldmF0aW9ufGVuYWJsZUJhY2tncm91bmR8ZW5kfGV4cG9uZW50fGV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWR8ZmlsbHxmaWxsT3BhY2l0eXxmaWxsUnVsZXxmaWx0ZXJ8ZmlsdGVyUmVzfGZpbHRlclVuaXRzfGZsb29kQ29sb3J8Zmxvb2RPcGFjaXR5fGZvY3VzYWJsZXxmb250RmFtaWx5fGZvbnRTaXplfGZvbnRTaXplQWRqdXN0fGZvbnRTdHJldGNofGZvbnRTdHlsZXxmb250VmFyaWFudHxmb250V2VpZ2h0fGZvcm1hdHxmcm9tfGZyfGZ4fGZ5fGcxfGcyfGdseXBoTmFtZXxnbHlwaE9yaWVudGF0aW9uSG9yaXpvbnRhbHxnbHlwaE9yaWVudGF0aW9uVmVydGljYWx8Z2x5cGhSZWZ8Z3JhZGllbnRUcmFuc2Zvcm18Z3JhZGllbnRVbml0c3xoYW5naW5nfGhvcml6QWR2WHxob3Jpek9yaWdpblh8aWRlb2dyYXBoaWN8aW1hZ2VSZW5kZXJpbmd8aW58aW4yfGludGVyY2VwdHxrfGsxfGsyfGszfGs0fGtlcm5lbE1hdHJpeHxrZXJuZWxVbml0TGVuZ3RofGtlcm5pbmd8a2V5UG9pbnRzfGtleVNwbGluZXN8a2V5VGltZXN8bGVuZ3RoQWRqdXN0fGxldHRlclNwYWNpbmd8bGlnaHRpbmdDb2xvcnxsaW1pdGluZ0NvbmVBbmdsZXxsb2NhbHxtYXJrZXJFbmR8bWFya2VyTWlkfG1hcmtlclN0YXJ0fG1hcmtlckhlaWdodHxtYXJrZXJVbml0c3xtYXJrZXJXaWR0aHxtYXNrfG1hc2tDb250ZW50VW5pdHN8bWFza1VuaXRzfG1hdGhlbWF0aWNhbHxtb2RlfG51bU9jdGF2ZXN8b2Zmc2V0fG9wYWNpdHl8b3BlcmF0b3J8b3JkZXJ8b3JpZW50fG9yaWVudGF0aW9ufG9yaWdpbnxvdmVyZmxvd3xvdmVybGluZVBvc2l0aW9ufG92ZXJsaW5lVGhpY2tuZXNzfHBhbm9zZTF8cGFpbnRPcmRlcnxwYXRoTGVuZ3RofHBhdHRlcm5Db250ZW50VW5pdHN8cGF0dGVyblRyYW5zZm9ybXxwYXR0ZXJuVW5pdHN8cG9pbnRlckV2ZW50c3xwb2ludHN8cG9pbnRzQXRYfHBvaW50c0F0WXxwb2ludHNBdFp8cHJlc2VydmVBbHBoYXxwcmVzZXJ2ZUFzcGVjdFJhdGlvfHByaW1pdGl2ZVVuaXRzfHJ8cmFkaXVzfHJlZlh8cmVmWXxyZW5kZXJpbmdJbnRlbnR8cmVwZWF0Q291bnR8cmVwZWF0RHVyfHJlcXVpcmVkRXh0ZW5zaW9uc3xyZXF1aXJlZEZlYXR1cmVzfHJlc3RhcnR8cmVzdWx0fHJvdGF0ZXxyeHxyeXxzY2FsZXxzZWVkfHNoYXBlUmVuZGVyaW5nfHNsb3BlfHNwYWNpbmd8c3BlY3VsYXJDb25zdGFudHxzcGVjdWxhckV4cG9uZW50fHNwZWVkfHNwcmVhZE1ldGhvZHxzdGFydE9mZnNldHxzdGREZXZpYXRpb258c3RlbWh8c3RlbXZ8c3RpdGNoVGlsZXN8c3RvcENvbG9yfHN0b3BPcGFjaXR5fHN0cmlrZXRocm91Z2hQb3NpdGlvbnxzdHJpa2V0aHJvdWdoVGhpY2tuZXNzfHN0cmluZ3xzdHJva2V8c3Ryb2tlRGFzaGFycmF5fHN0cm9rZURhc2hvZmZzZXR8c3Ryb2tlTGluZWNhcHxzdHJva2VMaW5lam9pbnxzdHJva2VNaXRlcmxpbWl0fHN0cm9rZU9wYWNpdHl8c3Ryb2tlV2lkdGh8c3VyZmFjZVNjYWxlfHN5c3RlbUxhbmd1YWdlfHRhYmxlVmFsdWVzfHRhcmdldFh8dGFyZ2V0WXx0ZXh0QW5jaG9yfHRleHREZWNvcmF0aW9ufHRleHRSZW5kZXJpbmd8dGV4dExlbmd0aHx0b3x0cmFuc2Zvcm18dTF8dTJ8dW5kZXJsaW5lUG9zaXRpb258dW5kZXJsaW5lVGhpY2tuZXNzfHVuaWNvZGV8dW5pY29kZUJpZGl8dW5pY29kZVJhbmdlfHVuaXRzUGVyRW18dkFscGhhYmV0aWN8dkhhbmdpbmd8dklkZW9ncmFwaGljfHZNYXRoZW1hdGljYWx8dmFsdWVzfHZlY3RvckVmZmVjdHx2ZXJzaW9ufHZlcnRBZHZZfHZlcnRPcmlnaW5YfHZlcnRPcmlnaW5ZfHZpZXdCb3h8dmlld1RhcmdldHx2aXNpYmlsaXR5fHdpZHRoc3x3b3JkU3BhY2luZ3x3cml0aW5nTW9kZXx4fHhIZWlnaHR8eDF8eDJ8eENoYW5uZWxTZWxlY3Rvcnx4bGlua0FjdHVhdGV8eGxpbmtBcmNyb2xlfHhsaW5rSHJlZnx4bGlua1JvbGV8eGxpbmtTaG93fHhsaW5rVGl0bGV8eGxpbmtUeXBlfHhtbEJhc2V8eG1sbnN8eG1sbnNYbGlua3x4bWxMYW5nfHhtbFNwYWNlfHl8eTF8eTJ8eUNoYW5uZWxTZWxlY3Rvcnx6fHpvb21BbmRQYW58Zm9yfGNsYXNzfGF1dG9mb2N1cyl8KChbRGRdW0FhXVtUdF1bQWFdfFtBYV1bUnJdW0lpXVtBYV18eCktLiopKSQvOyAvLyBodHRwczovL2VzYmVuY2guY29tL2JlbmNoLzViZmVlNjhhNGNkN2U2MDA5ZWY2MWQyM1xuXG52YXIgaW5kZXggPSBtZW1vaXplKGZ1bmN0aW9uIChwcm9wKSB7XG4gIHJldHVybiByZWFjdFByb3BzUmVnZXgudGVzdChwcm9wKSB8fCBwcm9wLmNoYXJDb2RlQXQoMCkgPT09IDExMVxuICAvKiBvICovXG4gICYmIHByb3AuY2hhckNvZGVBdCgxKSA9PT0gMTEwXG4gIC8qIG4gKi9cbiAgJiYgcHJvcC5jaGFyQ29kZUF0KDIpIDwgOTE7XG59XG4vKiBaKzEgKi9cbik7XG5cbmV4cG9ydCBkZWZhdWx0IGluZGV4O1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi44LjRcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBrPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixwPW4/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMscT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYscj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyx0PW4/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LHU9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsdj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSx3PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAseD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEseT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMix6PW4/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLGFhPW4/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6XG42MDExNSxiYT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LEE9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIGNhKGEsYixkLGMsZSxnLGgsZil7aWYoIWEpe2E9dm9pZCAwO2lmKHZvaWQgMD09PWIpYT1FcnJvcihcIk1pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCIpO2Vsc2V7dmFyIGw9W2QsYyxlLGcsaCxmXSxtPTA7YT1FcnJvcihiLnJlcGxhY2UoLyVzL2csZnVuY3Rpb24oKXtyZXR1cm4gbFttKytdfSkpO2EubmFtZT1cIkludmFyaWFudCBWaW9sYXRpb25cIn1hLmZyYW1lc1RvUG9wPTE7dGhyb3cgYTt9fVxuZnVuY3Rpb24gQihhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGQ9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MDtjPGI7YysrKWQrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2MrMV0pO2NhKCExLFwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0ICVzIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4gXCIsZCl9dmFyIEM9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEQ9e307XG5mdW5jdGlvbiBFKGEsYixkKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUQ7dGhpcy51cGRhdGVyPWR8fEN9RS5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtFLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe1wib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWE/QihcIjg1XCIpOnZvaWQgMDt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0UucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O2Z1bmN0aW9uIEYoKXt9Ri5wcm90b3R5cGU9RS5wcm90b3R5cGU7ZnVuY3Rpb24gRyhhLGIsZCl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1EO3RoaXMudXBkYXRlcj1kfHxDfXZhciBIPUcucHJvdG90eXBlPW5ldyBGO1xuSC5jb25zdHJ1Y3Rvcj1HO2soSCxFLnByb3RvdHlwZSk7SC5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgST17Y3VycmVudDpudWxsfSxKPXtjdXJyZW50Om51bGx9LEs9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxMPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBNKGEsYixkKXt2YXIgYz12b2lkIDAsZT17fSxnPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGMgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksYilLLmNhbGwoYixjKSYmIUwuaGFzT3duUHJvcGVydHkoYykmJihlW2NdPWJbY10pO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZillLmNoaWxkcmVuPWQ7ZWxzZSBpZigxPGYpe2Zvcih2YXIgbD1BcnJheShmKSxtPTA7bTxmO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49bH1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoYyBpbiBmPWEuZGVmYXVsdFByb3BzLGYpdm9pZCAwPT09ZVtjXSYmKGVbY109ZltjXSk7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLGtleTpnLHJlZjpoLHByb3BzOmUsX293bmVyOkouY3VycmVudH19XG5mdW5jdGlvbiBkYShhLGIpe3JldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09cH1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiKyhcIlwiK2EpLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBPPS9cXC8rL2csUD1bXTtmdW5jdGlvbiBRKGEsYixkLGMpe2lmKFAubGVuZ3RoKXt2YXIgZT1QLnBvcCgpO2UucmVzdWx0PWE7ZS5rZXlQcmVmaXg9YjtlLmZ1bmM9ZDtlLmNvbnRleHQ9YztlLmNvdW50PTA7cmV0dXJuIGV9cmV0dXJue3Jlc3VsdDphLGtleVByZWZpeDpiLGZ1bmM6ZCxjb250ZXh0OmMsY291bnQ6MH19XG5mdW5jdGlvbiBSKGEpe2EucmVzdWx0PW51bGw7YS5rZXlQcmVmaXg9bnVsbDthLmZ1bmM9bnVsbDthLmNvbnRleHQ9bnVsbDthLmNvdW50PTA7MTA+UC5sZW5ndGgmJlAucHVzaChhKX1cbmZ1bmN0aW9uIFMoYSxiLGQsYyl7dmFyIGU9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWV8fFwiYm9vbGVhblwiPT09ZSlhPW51bGw7dmFyIGc9ITE7aWYobnVsbD09PWEpZz0hMDtlbHNlIHN3aXRjaChlKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmc9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHA6Y2FzZSBxOmc9ITB9fWlmKGcpcmV0dXJuIGQoYyxhLFwiXCI9PT1iP1wiLlwiK1QoYSwwKTpiKSwxO2c9MDtiPVwiXCI9PT1iP1wiLlwiOmIrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGg9MDtoPGEubGVuZ3RoO2grKyl7ZT1hW2hdO3ZhciBmPWIrVChlLGgpO2crPVMoZSxmLGQsYyl9ZWxzZSBpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhP2Y9bnVsbDooZj1BJiZhW0FdfHxhW1wiQEBpdGVyYXRvclwiXSxmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBmP2Y6bnVsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGg9XG4wOyEoZT1hLm5leHQoKSkuZG9uZTspZT1lLnZhbHVlLGY9YitUKGUsaCsrKSxnKz1TKGUsZixkLGMpO2Vsc2VcIm9iamVjdFwiPT09ZSYmKGQ9XCJcIithLEIoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1kP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmQsXCJcIikpO3JldHVybiBnfWZ1bmN0aW9uIFUoYSxiLGQpe3JldHVybiBudWxsPT1hPzA6UyhhLFwiXCIsYixkKX1mdW5jdGlvbiBUKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKGEua2V5KTpiLnRvU3RyaW5nKDM2KX1mdW5jdGlvbiBlYShhLGIpe2EuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyl9XG5mdW5jdGlvbiBmYShhLGIsZCl7dmFyIGM9YS5yZXN1bHQsZT1hLmtleVByZWZpeDthPWEuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyk7QXJyYXkuaXNBcnJheShhKT9WKGEsYyxkLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk6bnVsbCE9YSYmKE4oYSkmJihhPWRhKGEsZSsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoTyxcIiQmL1wiKStcIi9cIikrZCkpLGMucHVzaChhKSl9ZnVuY3Rpb24gVihhLGIsZCxjLGUpe3ZhciBnPVwiXCI7bnVsbCE9ZCYmKGc9KFwiXCIrZCkucmVwbGFjZShPLFwiJCYvXCIpK1wiL1wiKTtiPVEoYixnLGMsZSk7VShhLGZhLGIpO1IoYil9ZnVuY3Rpb24gVygpe3ZhciBhPUkuY3VycmVudDtudWxsPT09YT9CKFwiMzA3XCIpOnZvaWQgMDtyZXR1cm4gYX1cbnZhciBYPXtDaGlsZHJlbjp7bWFwOmZ1bmN0aW9uKGEsYixkKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBjPVtdO1YoYSxjLG51bGwsYixkKTtyZXR1cm4gY30sZm9yRWFjaDpmdW5jdGlvbihhLGIsZCl7aWYobnVsbD09YSlyZXR1cm4gYTtiPVEobnVsbCxudWxsLGIsZCk7VShhLGVhLGIpO1IoYil9LGNvdW50OmZ1bmN0aW9uKGEpe3JldHVybiBVKGEsZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sbnVsbCl9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7dmFyIGI9W107VihhLGIsbnVsbCxmdW5jdGlvbihhKXtyZXR1cm4gYX0pO3JldHVybiBifSxvbmx5OmZ1bmN0aW9uKGEpe04oYSk/dm9pZCAwOkIoXCIxNDNcIik7cmV0dXJuIGF9fSxjcmVhdGVSZWY6ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX0sQ29tcG9uZW50OkUsUHVyZUNvbXBvbmVudDpHLGNyZWF0ZUNvbnRleHQ6ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj1udWxsKTthPXskJHR5cGVvZjp3LF9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLFxuX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjp2LF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9LGZvcndhcmRSZWY6ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnkscmVuZGVyOmF9fSxsYXp5OmZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjpiYSxfY3RvcjphLF9zdGF0dXM6LTEsX3Jlc3VsdDpudWxsfX0sbWVtbzpmdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjphYSx0eXBlOmEsY29tcGFyZTp2b2lkIDA9PT1iP251bGw6Yn19LHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VDYWxsYmFjayhhLGIpfSx1c2VDb250ZXh0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VDb250ZXh0KGEsYil9LHVzZUVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlRWZmZWN0KGEsYil9LHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxcbmIsZCl7cmV0dXJuIFcoKS51c2VJbXBlcmF0aXZlSGFuZGxlKGEsYixkKX0sdXNlRGVidWdWYWx1ZTpmdW5jdGlvbigpe30sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VMYXlvdXRFZmZlY3QoYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlTWVtbyhhLGIpfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixkKXtyZXR1cm4gVygpLnVzZVJlZHVjZXIoYSxiLGQpfSx1c2VSZWY6ZnVuY3Rpb24oYSl7cmV0dXJuIFcoKS51c2VSZWYoYSl9LHVzZVN0YXRlOmZ1bmN0aW9uKGEpe3JldHVybiBXKCkudXNlU3RhdGUoYSl9LEZyYWdtZW50OnIsU3RyaWN0TW9kZTp0LFN1c3BlbnNlOnosY3JlYXRlRWxlbWVudDpNLGNsb25lRWxlbWVudDpmdW5jdGlvbihhLGIsZCl7bnVsbD09PWF8fHZvaWQgMD09PWE/QihcIjI2N1wiLGEpOnZvaWQgMDt2YXIgYz12b2lkIDAsZT1rKHt9LGEucHJvcHMpLGc9YS5rZXksaD1hLnJlZixmPWEuX293bmVyO2lmKG51bGwhPVxuYil7dm9pZCAwIT09Yi5yZWYmJihoPWIucmVmLGY9Si5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSk7dmFyIGw9dm9pZCAwO2EudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyYmKGw9YS50eXBlLmRlZmF1bHRQcm9wcyk7Zm9yKGMgaW4gYilLLmNhbGwoYixjKSYmIUwuaGFzT3duUHJvcGVydHkoYykmJihlW2NdPXZvaWQgMD09PWJbY10mJnZvaWQgMCE9PWw/bFtjXTpiW2NdKX1jPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09YyllLmNoaWxkcmVuPWQ7ZWxzZSBpZigxPGMpe2w9QXJyYXkoYyk7Zm9yKHZhciBtPTA7bTxjO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49bH1yZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6ZyxyZWY6aCxwcm9wczplLF9vd25lcjpmfX0sY3JlYXRlRmFjdG9yeTpmdW5jdGlvbihhKXt2YXIgYj1NLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn0saXNWYWxpZEVsZW1lbnQ6Tix2ZXJzaW9uOlwiMTYuOC40XCIsXG51bnN0YWJsZV9Db25jdXJyZW50TW9kZTp4LHVuc3RhYmxlX1Byb2ZpbGVyOnUsX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e1JlYWN0Q3VycmVudERpc3BhdGNoZXI6SSxSZWFjdEN1cnJlbnRPd25lcjpKLGFzc2lnbjprfX0sWT17ZGVmYXVsdDpYfSxaPVkmJlh8fFk7bW9kdWxlLmV4cG9ydHM9Wi5kZWZhdWx0fHxaO1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi44LjRcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbj1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxyPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24gYmEoYSxiLGMsZCxlLGYsZyxoKXtpZighYSl7YT12b2lkIDA7aWYodm9pZCAwPT09YilhPUVycm9yKFwiTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIik7ZWxzZXt2YXIgbD1bYyxkLGUsZixnLGhdLGs9MDthPUVycm9yKGIucmVwbGFjZSgvJXMvZyxmdW5jdGlvbigpe3JldHVybiBsW2srK119KSk7YS5uYW1lPVwiSW52YXJpYW50IFZpb2xhdGlvblwifWEuZnJhbWVzVG9Qb3A9MTt0aHJvdyBhO319XG5mdW5jdGlvbiB4KGEpe2Zvcih2YXIgYj1hcmd1bWVudHMubGVuZ3RoLTEsYz1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsZD0wO2Q8YjtkKyspYys9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbZCsxXSk7YmEoITEsXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgJXMgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLiBcIixjKX1hYT92b2lkIDA6eChcIjIyN1wiKTtmdW5jdGlvbiBjYShhLGIsYyxkLGUsZixnLGgsbCl7dmFyIGs9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsayl9Y2F0Y2gobSl7dGhpcy5vbkVycm9yKG0pfX1cbnZhciBkYT0hMSxlYT1udWxsLGZhPSExLGhhPW51bGwsaWE9e29uRXJyb3I6ZnVuY3Rpb24oYSl7ZGE9ITA7ZWE9YX19O2Z1bmN0aW9uIGphKGEsYixjLGQsZSxmLGcsaCxsKXtkYT0hMTtlYT1udWxsO2NhLmFwcGx5KGlhLGFyZ3VtZW50cyl9ZnVuY3Rpb24ga2EoYSxiLGMsZCxlLGYsZyxoLGwpe2phLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihkYSl7aWYoZGEpe3ZhciBrPWVhO2RhPSExO2VhPW51bGx9ZWxzZSB4KFwiMTk4XCIpLGs9dm9pZCAwO2ZhfHwoZmE9ITAsaGE9ayl9fXZhciBsYT1udWxsLG1hPXt9O1xuZnVuY3Rpb24gbmEoKXtpZihsYSlmb3IodmFyIGEgaW4gbWEpe3ZhciBiPW1hW2FdLGM9bGEuaW5kZXhPZihhKTstMTxjP3ZvaWQgMDp4KFwiOTZcIixhKTtpZighb2FbY10pe2IuZXh0cmFjdEV2ZW50cz92b2lkIDA6eChcIjk3XCIsYSk7b2FbY109YjtjPWIuZXZlbnRUeXBlcztmb3IodmFyIGQgaW4gYyl7dmFyIGU9dm9pZCAwO3ZhciBmPWNbZF0sZz1iLGg9ZDtwYS5oYXNPd25Qcm9wZXJ0eShoKT94KFwiOTlcIixoKTp2b2lkIDA7cGFbaF09Zjt2YXIgbD1mLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzO2lmKGwpe2ZvcihlIGluIGwpbC5oYXNPd25Qcm9wZXJ0eShlKSYmcWEobFtlXSxnLGgpO2U9ITB9ZWxzZSBmLnJlZ2lzdHJhdGlvbk5hbWU/KHFhKGYucmVnaXN0cmF0aW9uTmFtZSxnLGgpLGU9ITApOmU9ITE7ZT92b2lkIDA6eChcIjk4XCIsZCxhKX19fX1cbmZ1bmN0aW9uIHFhKGEsYixjKXtyYVthXT94KFwiMTAwXCIsYSk6dm9pZCAwO3JhW2FdPWI7c2FbYV09Yi5ldmVudFR5cGVzW2NdLmRlcGVuZGVuY2llc312YXIgb2E9W10scGE9e30scmE9e30sc2E9e30sdGE9bnVsbCx1YT1udWxsLHZhPW51bGw7ZnVuY3Rpb24gd2EoYSxiLGMpe3ZhciBkPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PXZhKGMpO2thKGQsYix2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9ZnVuY3Rpb24geGEoYSxiKXtudWxsPT1iP3goXCIzMFwiKTp2b2lkIDA7aWYobnVsbD09YSlyZXR1cm4gYjtpZihBcnJheS5pc0FycmF5KGEpKXtpZihBcnJheS5pc0FycmF5KGIpKXJldHVybiBhLnB1c2guYXBwbHkoYSxiKSxhO2EucHVzaChiKTtyZXR1cm4gYX1yZXR1cm4gQXJyYXkuaXNBcnJheShiKT9bYV0uY29uY2F0KGIpOlthLGJdfVxuZnVuY3Rpb24geWEoYSxiLGMpe0FycmF5LmlzQXJyYXkoYSk/YS5mb3JFYWNoKGIsYyk6YSYmYi5jYWxsKGMsYSl9dmFyIHphPW51bGw7ZnVuY3Rpb24gQWEoYSl7aWYoYSl7dmFyIGI9YS5fZGlzcGF0Y2hMaXN0ZW5lcnMsYz1hLl9kaXNwYXRjaEluc3RhbmNlcztpZihBcnJheS5pc0FycmF5KGIpKWZvcih2YXIgZD0wO2Q8Yi5sZW5ndGgmJiFhLmlzUHJvcGFnYXRpb25TdG9wcGVkKCk7ZCsrKXdhKGEsYltkXSxjW2RdKTtlbHNlIGImJndhKGEsYixjKTthLl9kaXNwYXRjaExpc3RlbmVycz1udWxsO2EuX2Rpc3BhdGNoSW5zdGFuY2VzPW51bGw7YS5pc1BlcnNpc3RlbnQoKXx8YS5jb25zdHJ1Y3Rvci5yZWxlYXNlKGEpfX1cbnZhciBCYT17aW5qZWN0RXZlbnRQbHVnaW5PcmRlcjpmdW5jdGlvbihhKXtsYT94KFwiMTAxXCIpOnZvaWQgMDtsYT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhKTtuYSgpfSxpbmplY3RFdmVudFBsdWdpbnNCeU5hbWU6ZnVuY3Rpb24oYSl7dmFyIGI9ITEsYztmb3IoYyBpbiBhKWlmKGEuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPWFbY107bWEuaGFzT3duUHJvcGVydHkoYykmJm1hW2NdPT09ZHx8KG1hW2NdP3goXCIxMDJcIixjKTp2b2lkIDAsbWFbY109ZCxiPSEwKX1iJiZuYSgpfX07XG5mdW5jdGlvbiBDYShhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKCFjKXJldHVybiBudWxsO3ZhciBkPXRhKGMpO2lmKCFkKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2MmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP3goXCIyMzFcIixiLHR5cGVvZiBjKTp2b2lkIDA7XG5yZXR1cm4gY31mdW5jdGlvbiBEYShhKXtudWxsIT09YSYmKHphPXhhKHphLGEpKTthPXphO3phPW51bGw7aWYoYSYmKHlhKGEsQWEpLHphP3goXCI5NVwiKTp2b2lkIDAsZmEpKXRocm93IGE9aGEsZmE9ITEsaGE9bnVsbCxhO312YXIgRWE9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksRmE9XCJfX3JlYWN0SW50ZXJuYWxJbnN0YW5jZSRcIitFYSxHYT1cIl9fcmVhY3RFdmVudEhhbmRsZXJzJFwiK0VhO2Z1bmN0aW9uIEhhKGEpe2lmKGFbRmFdKXJldHVybiBhW0ZhXTtmb3IoOyFhW0ZhXTspaWYoYS5wYXJlbnROb2RlKWE9YS5wYXJlbnROb2RlO2Vsc2UgcmV0dXJuIG51bGw7YT1hW0ZhXTtyZXR1cm4gNT09PWEudGFnfHw2PT09YS50YWc/YTpudWxsfWZ1bmN0aW9uIElhKGEpe2E9YVtGYV07cmV0dXJuIWF8fDUhPT1hLnRhZyYmNiE9PWEudGFnP251bGw6YX1cbmZ1bmN0aW9uIEphKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTt4KFwiMzNcIil9ZnVuY3Rpb24gS2EoYSl7cmV0dXJuIGFbR2FdfHxudWxsfWZ1bmN0aW9uIExhKGEpe2RvIGE9YS5yZXR1cm47d2hpbGUoYSYmNSE9PWEudGFnKTtyZXR1cm4gYT9hOm51bGx9ZnVuY3Rpb24gTWEoYSxiLGMpe2lmKGI9Q2EoYSxjLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzW2JdKSljLl9kaXNwYXRjaExpc3RlbmVycz14YShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz14YShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKX1cbmZ1bmN0aW9uIE5hKGEpe2lmKGEmJmEuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMpe2Zvcih2YXIgYj1hLl90YXJnZXRJbnN0LGM9W107YjspYy5wdXNoKGIpLGI9TGEoYik7Zm9yKGI9Yy5sZW5ndGg7MDxiLS07KU1hKGNbYl0sXCJjYXB0dXJlZFwiLGEpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspTWEoY1tiXSxcImJ1YmJsZWRcIixhKX19ZnVuY3Rpb24gT2EoYSxiLGMpe2EmJmMmJmMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmKGI9Q2EoYSxjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUpKSYmKGMuX2Rpc3BhdGNoTGlzdGVuZXJzPXhhKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPXhhKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpKX1mdW5jdGlvbiBQYShhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJk9hKGEuX3RhcmdldEluc3QsbnVsbCxhKX1cbmZ1bmN0aW9uIFFhKGEpe3lhKGEsTmEpfXZhciBSYT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHwhd2luZG93LmRvY3VtZW50fHwhd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO2Z1bmN0aW9uIFNhKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIFRhPXthbmltYXRpb25lbmQ6U2EoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246U2EoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpTYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpTYShcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LFVhPXt9LFZhPXt9O1xuUmEmJihWYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBUYS5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBUYS5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBUYS5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBUYS50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIFdhKGEpe2lmKFVhW2FdKXJldHVybiBVYVthXTtpZighVGFbYV0pcmV0dXJuIGE7dmFyIGI9VGFbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gVmEpcmV0dXJuIFVhW2FdPWJbY107cmV0dXJuIGF9XG52YXIgWGE9V2EoXCJhbmltYXRpb25lbmRcIiksWWE9V2EoXCJhbmltYXRpb25pdGVyYXRpb25cIiksWmE9V2EoXCJhbmltYXRpb25zdGFydFwiKSwkYT1XYShcInRyYW5zaXRpb25lbmRcIiksYWI9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLGJiPW51bGwsY2I9bnVsbCxkYj1udWxsO1xuZnVuY3Rpb24gZWIoKXtpZihkYilyZXR1cm4gZGI7dmFyIGEsYj1jYixjPWIubGVuZ3RoLGQsZT1cInZhbHVlXCJpbiBiYj9iYi52YWx1ZTpiYi50ZXh0Q29udGVudCxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO3JldHVybiBkYj1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApfWZ1bmN0aW9uIGZiKCl7cmV0dXJuITB9ZnVuY3Rpb24gZ2IoKXtyZXR1cm4hMX1cbmZ1bmN0aW9uIHkoYSxiLGMsZCl7dGhpcy5kaXNwYXRjaENvbmZpZz1hO3RoaXMuX3RhcmdldEluc3Q9Yjt0aGlzLm5hdGl2ZUV2ZW50PWM7YT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZTtmb3IodmFyIGUgaW4gYSlhLmhhc093blByb3BlcnR5KGUpJiYoKGI9YVtlXSk/dGhpc1tlXT1iKGMpOlwidGFyZ2V0XCI9PT1lP3RoaXMudGFyZ2V0PWQ6dGhpc1tlXT1jW2VdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Yy5kZWZhdWx0UHJldmVudGVkP2MuZGVmYXVsdFByZXZlbnRlZDohMT09PWMucmV0dXJuVmFsdWUpP2ZiOmdiO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9Z2I7cmV0dXJuIHRoaXN9XG5uKHkucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiYoYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9ZmIpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9ZmIpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7dGhpcy5pc1BlcnNpc3RlbnQ9ZmJ9LGlzUGVyc2lzdGVudDpnYixkZXN0cnVjdG9yOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2UsXG5iO2ZvcihiIGluIGEpdGhpc1tiXT1udWxsO3RoaXMubmF0aXZlRXZlbnQ9dGhpcy5fdGFyZ2V0SW5zdD10aGlzLmRpc3BhdGNoQ29uZmlnPW51bGw7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD10aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1nYjt0aGlzLl9kaXNwYXRjaEluc3RhbmNlcz10aGlzLl9kaXNwYXRjaExpc3RlbmVycz1udWxsfX0pO3kuSW50ZXJmYWNlPXt0eXBlOm51bGwsdGFyZ2V0Om51bGwsY3VycmVudFRhcmdldDpmdW5jdGlvbigpe3JldHVybiBudWxsfSxldmVudFBoYXNlOm51bGwsYnViYmxlczpudWxsLGNhbmNlbGFibGU6bnVsbCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOm51bGwsaXNUcnVzdGVkOm51bGx9O1xueS5leHRlbmQ9ZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYigpe31mdW5jdGlvbiBjKCl7cmV0dXJuIGQuYXBwbHkodGhpcyxhcmd1bWVudHMpfXZhciBkPXRoaXM7Yi5wcm90b3R5cGU9ZC5wcm90b3R5cGU7dmFyIGU9bmV3IGI7bihlLGMucHJvdG90eXBlKTtjLnByb3RvdHlwZT1lO2MucHJvdG90eXBlLmNvbnN0cnVjdG9yPWM7Yy5JbnRlcmZhY2U9bih7fSxkLkludGVyZmFjZSxhKTtjLmV4dGVuZD1kLmV4dGVuZDtoYihjKTtyZXR1cm4gY307aGIoeSk7ZnVuY3Rpb24gaWIoYSxiLGMsZCl7aWYodGhpcy5ldmVudFBvb2wubGVuZ3RoKXt2YXIgZT10aGlzLmV2ZW50UG9vbC5wb3AoKTt0aGlzLmNhbGwoZSxhLGIsYyxkKTtyZXR1cm4gZX1yZXR1cm4gbmV3IHRoaXMoYSxiLGMsZCl9ZnVuY3Rpb24gamIoYSl7YSBpbnN0YW5jZW9mIHRoaXM/dm9pZCAwOngoXCIyNzlcIik7YS5kZXN0cnVjdG9yKCk7MTA+dGhpcy5ldmVudFBvb2wubGVuZ3RoJiZ0aGlzLmV2ZW50UG9vbC5wdXNoKGEpfVxuZnVuY3Rpb24gaGIoYSl7YS5ldmVudFBvb2w9W107YS5nZXRQb29sZWQ9aWI7YS5yZWxlYXNlPWpifXZhciBrYj15LmV4dGVuZCh7ZGF0YTpudWxsfSksbGI9eS5leHRlbmQoe2RhdGE6bnVsbH0pLG1iPVs5LDEzLDI3LDMyXSxuYj1SYSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csb2I9bnVsbDtSYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYob2I9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTtcbnZhciBwYj1SYSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIW9iLHFiPVJhJiYoIW5ifHxvYiYmODxvYiYmMTE+PW9iKSxyYj1TdHJpbmcuZnJvbUNoYXJDb2RlKDMyKSxzYj17YmVmb3JlSW5wdXQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25CZWZvcmVJbnB1dFwiLGNhcHR1cmVkOlwib25CZWZvcmVJbnB1dENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltcImNvbXBvc2l0aW9uZW5kXCIsXCJrZXlwcmVzc1wiLFwidGV4dElucHV0XCIsXCJwYXN0ZVwiXX0sY29tcG9zaXRpb25FbmQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvbkVuZFwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvbkVuZENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbmVuZCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25TdGFydDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRcIixcbmNhcHR1cmVkOlwib25Db21wb3NpdGlvblN0YXJ0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uVXBkYXRlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb251cGRhdGUga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9fSx0Yj0hMTtcbmZ1bmN0aW9uIHViKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJrZXl1cFwiOnJldHVybi0xIT09bWIuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJrZXlkb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcImJsdXJcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiB2YihhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciB3Yj0hMTtmdW5jdGlvbiB4YihhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gdmIoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO3RiPSEwO3JldHVybiByYjtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT1yYiYmdGI/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24geWIoYSxiKXtpZih3YilyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwhbmImJnViKGEsYik/KGE9ZWIoKSxkYj1jYj1iYj1udWxsLHdiPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBxYiYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgemI9e2V2ZW50VHlwZXM6c2IsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT12b2lkIDA7dmFyIGY9dm9pZCAwO2lmKG5iKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOmU9c2IuY29tcG9zaXRpb25TdGFydDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOmU9c2IuY29tcG9zaXRpb25FbmQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjplPXNiLmNvbXBvc2l0aW9uVXBkYXRlO2JyZWFrIGJ9ZT12b2lkIDB9ZWxzZSB3Yj91YihhLGMpJiYoZT1zYi5jb21wb3NpdGlvbkVuZCk6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihlPXNiLmNvbXBvc2l0aW9uU3RhcnQpO2U/KHFiJiZcImtvXCIhPT1jLmxvY2FsZSYmKHdifHxlIT09c2IuY29tcG9zaXRpb25TdGFydD9lPT09c2IuY29tcG9zaXRpb25FbmQmJndiJiYoZj1lYigpKTooYmI9ZCxjYj1cInZhbHVlXCJpbiBiYj9iYi52YWx1ZTpiYi50ZXh0Q29udGVudCx3Yj1cbiEwKSksZT1rYi5nZXRQb29sZWQoZSxiLGMsZCksZj9lLmRhdGE9ZjooZj12YihjKSxudWxsIT09ZiYmKGUuZGF0YT1mKSksUWEoZSksZj1lKTpmPW51bGw7KGE9cGI/eGIoYSxjKTp5YihhLGMpKT8oYj1sYi5nZXRQb29sZWQoc2IuYmVmb3JlSW5wdXQsYixjLGQpLGIuZGF0YT1hLFFhKGIpKTpiPW51bGw7cmV0dXJuIG51bGw9PT1mP2I6bnVsbD09PWI/ZjpbZixiXX19LEFiPW51bGwsQmI9bnVsbCxDYj1udWxsO2Z1bmN0aW9uIERiKGEpe2lmKGE9dWEoYSkpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBBYj94KFwiMjgwXCIpOnZvaWQgMDt2YXIgYj10YShhLnN0YXRlTm9kZSk7QWIoYS5zdGF0ZU5vZGUsYS50eXBlLGIpfX1mdW5jdGlvbiBFYihhKXtCYj9DYj9DYi5wdXNoKGEpOkNiPVthXTpCYj1hfWZ1bmN0aW9uIEZiKCl7aWYoQmIpe3ZhciBhPUJiLGI9Q2I7Q2I9QmI9bnVsbDtEYihhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspRGIoYlthXSl9fVxuZnVuY3Rpb24gR2IoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBIYihhLGIsYyl7cmV0dXJuIGEoYixjKX1mdW5jdGlvbiBJYigpe312YXIgSmI9ITE7ZnVuY3Rpb24gS2IoYSxiKXtpZihKYilyZXR1cm4gYShiKTtKYj0hMDt0cnl7cmV0dXJuIEdiKGEsYil9ZmluYWxseXtpZihKYj0hMSxudWxsIT09QmJ8fG51bGwhPT1DYilJYigpLEZiKCl9fXZhciBMYj17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiBNYihhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIUxiW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1cbmZ1bmN0aW9uIE5iKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX1mdW5jdGlvbiBPYihhKXtpZighUmEpcmV0dXJuITE7YT1cIm9uXCIrYTt2YXIgYj1hIGluIGRvY3VtZW50O2J8fChiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYi5zZXRBdHRyaWJ1dGUoYSxcInJldHVybjtcIiksYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgYlthXSk7cmV0dXJuIGJ9ZnVuY3Rpb24gUGIoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIFFiKGEpe3ZhciBiPVBiKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxubnVsbDtkZWxldGUgYVtiXX19fX1mdW5jdGlvbiBSYihhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9UWIoYSkpfWZ1bmN0aW9uIFNiKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWEuX3ZhbHVlVHJhY2tlcjtpZighYilyZXR1cm4hMDt2YXIgYz1iLmdldFZhbHVlKCk7dmFyIGQ9XCJcIjthJiYoZD1QYihhKT9hLmNoZWNrZWQ/XCJ0cnVlXCI6XCJmYWxzZVwiOmEudmFsdWUpO2E9ZDtyZXR1cm4gYSE9PWM/KGIuc2V0VmFsdWUoYSksITApOiExfXZhciBUYj1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDtUYi5oYXNPd25Qcm9wZXJ0eShcIlJlYWN0Q3VycmVudERpc3BhdGNoZXJcIil8fChUYi5SZWFjdEN1cnJlbnREaXNwYXRjaGVyPXtjdXJyZW50Om51bGx9KTtcbnZhciBVYj0vXiguKilbXFxcXFxcL10vLHo9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixWYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLFdiPXo/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixYYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxZYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxaYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCwkYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxhYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGJjPXo/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxjYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixkYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxlYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOlxuNjAxMTUsZmM9ej9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNixnYz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gaGMoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPWdjJiZhW2djXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfVxuZnVuY3Rpb24gaWMoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSBiYzpyZXR1cm5cIkNvbmN1cnJlbnRNb2RlXCI7Y2FzZSBYYjpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSBXYjpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgWmI6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2UgWWI6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBkYzpyZXR1cm5cIlN1c3BlbnNlXCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIGFjOnJldHVyblwiQ29udGV4dC5Db25zdW1lclwiO2Nhc2UgJGI6cmV0dXJuXCJDb250ZXh0LlByb3ZpZGVyXCI7Y2FzZSBjYzp2YXIgYj1hLnJlbmRlcjtiPWIuZGlzcGxheU5hbWV8fGIubmFtZXx8XCJcIjtyZXR1cm4gYS5kaXNwbGF5TmFtZXx8KFwiXCIhPT1iP1wiRm9yd2FyZFJlZihcIitiK1xuXCIpXCI6XCJGb3J3YXJkUmVmXCIpO2Nhc2UgZWM6cmV0dXJuIGljKGEudHlwZSk7Y2FzZSBmYzppZihhPTE9PT1hLl9zdGF0dXM/YS5fcmVzdWx0Om51bGwpcmV0dXJuIGljKGEpfXJldHVybiBudWxsfWZ1bmN0aW9uIGpjKGEpe3ZhciBiPVwiXCI7ZG97YTpzd2l0Y2goYS50YWcpe2Nhc2UgMzpjYXNlIDQ6Y2FzZSA2OmNhc2UgNzpjYXNlIDEwOmNhc2UgOTp2YXIgYz1cIlwiO2JyZWFrIGE7ZGVmYXVsdDp2YXIgZD1hLl9kZWJ1Z093bmVyLGU9YS5fZGVidWdTb3VyY2UsZj1pYyhhLnR5cGUpO2M9bnVsbDtkJiYoYz1pYyhkLnR5cGUpKTtkPWY7Zj1cIlwiO2U/Zj1cIiAoYXQgXCIrZS5maWxlTmFtZS5yZXBsYWNlKFViLFwiXCIpK1wiOlwiK2UubGluZU51bWJlcitcIilcIjpjJiYoZj1cIiAoY3JlYXRlZCBieSBcIitjK1wiKVwiKTtjPVwiXFxuICAgIGluIFwiKyhkfHxcIlVua25vd25cIikrZn1iKz1jO2E9YS5yZXR1cm59d2hpbGUoYSk7cmV0dXJuIGJ9XG52YXIga2M9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLGxjPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksbWM9e30sbmM9e307XG5mdW5jdGlvbiBvYyhhKXtpZihsYy5jYWxsKG5jLGEpKXJldHVybiEwO2lmKGxjLmNhbGwobWMsYSkpcmV0dXJuITE7aWYoa2MudGVzdChhKSlyZXR1cm4gbmNbYV09ITA7bWNbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gcGMoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBxYyhhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxwYyhhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIEMoYSxiLGMsZCxlKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1ifXZhciBEPXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMCwhMSxhLG51bGwpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO0RbYl09bmV3IEMoYiwxLCExLGFbMV0sbnVsbCl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMiwhMSxhLG51bGwpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtbXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDMsITAsYSxudWxsKX0pO1xuW1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsNCwhMSxhLG51bGwpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSw2LCExLGEsbnVsbCl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO3ZhciByYz0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIHNjKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJjLFxuc2MpO0RbYl09bmV3IEMoYiwxLCExLGEsbnVsbCl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpocmVmIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJjLHNjKTtEW2JdPW5ldyBDKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJjLHNjKTtEW2JdPW5ldyBDKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIpfSk7W1widGFiSW5kZXhcIixcImNyb3NzT3JpZ2luXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7XG5mdW5jdGlvbiB0YyhhLGIsYyxkKXt2YXIgZT1ELmhhc093blByb3BlcnR5KGIpP0RbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fChxYyhiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/b2MoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbmZ1bmN0aW9uIHVjKGEpe3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSBcImJvb2xlYW5cIjpjYXNlIFwibnVtYmVyXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1mdW5jdGlvbiB2YyhhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbih7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9XG5mdW5jdGlvbiB3YyhhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz11YyhudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uIHhjKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmdGMoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIHljKGEsYil7eGMoYSxiKTt2YXIgYz11YyhiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT96YyhhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZ6YyhhLGIudHlwZSx1YyhiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIEFjKGEsYixjKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpe3ZhciBkPWIudHlwZTtpZighKFwic3VibWl0XCIhPT1kJiZcInJlc2V0XCIhPT1kfHx2b2lkIDAhPT1iLnZhbHVlJiZudWxsIT09Yi52YWx1ZSkpcmV0dXJuO2I9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2N8fGI9PT1hLnZhbHVlfHwoYS52YWx1ZT1iKTthLmRlZmF1bHRWYWx1ZT1ifWM9YS5uYW1lO1wiXCIhPT1jJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9IWEuZGVmYXVsdENoZWNrZWQ7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIHpjKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8YS5vd25lckRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX12YXIgQmM9e2NoYW5nZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNoYW5nZVwiLGNhcHR1cmVkOlwib25DaGFuZ2VDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY2hhbmdlIGNsaWNrIGZvY3VzIGlucHV0IGtleWRvd24ga2V5dXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX07ZnVuY3Rpb24gQ2MoYSxiLGMpe2E9eS5nZXRQb29sZWQoQmMuY2hhbmdlLGEsYixjKTthLnR5cGU9XCJjaGFuZ2VcIjtFYihjKTtRYShhKTtyZXR1cm4gYX12YXIgRGM9bnVsbCxFYz1udWxsO2Z1bmN0aW9uIEZjKGEpe0RhKGEpfVxuZnVuY3Rpb24gR2MoYSl7dmFyIGI9SmEoYSk7aWYoU2IoYikpcmV0dXJuIGF9ZnVuY3Rpb24gSGMoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgSWM9ITE7UmEmJihJYz1PYihcImlucHV0XCIpJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpKTtmdW5jdGlvbiBKYygpe0RjJiYoRGMuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsS2MpLEVjPURjPW51bGwpfWZ1bmN0aW9uIEtjKGEpe1widmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZHYyhFYykmJihhPUNjKEVjLGEsTmIoYSkpLEtiKEZjLGEpKX1mdW5jdGlvbiBMYyhhLGIsYyl7XCJmb2N1c1wiPT09YT8oSmMoKSxEYz1iLEVjPWMsRGMuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsS2MpKTpcImJsdXJcIj09PWEmJkpjKCl9ZnVuY3Rpb24gTWMoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gR2MoRWMpfVxuZnVuY3Rpb24gTmMoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiBHYyhiKX1mdW5jdGlvbiBPYyhhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiBHYyhiKX1cbnZhciBQYz17ZXZlbnRUeXBlczpCYyxfaXNJbnB1dEV2ZW50U3VwcG9ydGVkOkljLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9Yj9KYShiKTp3aW5kb3csZj12b2lkIDAsZz12b2lkIDAsaD1lLm5vZGVOYW1lJiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XCJzZWxlY3RcIj09PWh8fFwiaW5wdXRcIj09PWgmJlwiZmlsZVwiPT09ZS50eXBlP2Y9SGM6TWIoZSk/SWM/Zj1PYzooZj1NYyxnPUxjKTooaD1lLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09aC50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09ZS50eXBlfHxcInJhZGlvXCI9PT1lLnR5cGUpJiYoZj1OYyk7aWYoZiYmKGY9ZihhLGIpKSlyZXR1cm4gQ2MoZixjLGQpO2cmJmcoYSxlLGIpO1wiYmx1clwiPT09YSYmKGE9ZS5fd3JhcHBlclN0YXRlKSYmYS5jb250cm9sbGVkJiZcIm51bWJlclwiPT09ZS50eXBlJiZ6YyhlLFwibnVtYmVyXCIsZS52YWx1ZSl9fSxRYz15LmV4dGVuZCh7dmlldzpudWxsLGRldGFpbDpudWxsfSksUmM9e0FsdDpcImFsdEtleVwiLFxuQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gU2MoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1SY1thXSk/ISFiW2FdOiExfWZ1bmN0aW9uIFRjKCl7cmV0dXJuIFNjfVxudmFyIFVjPTAsVmM9MCxXYz0hMSxYYz0hMSxZYz1RYy5leHRlbmQoe3NjcmVlblg6bnVsbCxzY3JlZW5ZOm51bGwsY2xpZW50WDpudWxsLGNsaWVudFk6bnVsbCxwYWdlWDpudWxsLHBhZ2VZOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6VGMsYnV0dG9uOm51bGwsYnV0dG9uczpudWxsLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVsYXRlZFRhcmdldHx8KGEuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudCl9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFg7dmFyIGI9VWM7VWM9YS5zY3JlZW5YO3JldHVybiBXYz9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWC1iOjA6KFdjPSEwLDApfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFlcImluIGEpcmV0dXJuIGEubW92ZW1lbnRZO1xudmFyIGI9VmM7VmM9YS5zY3JlZW5ZO3JldHVybiBYYz9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWS1iOjA6KFhjPSEwLDApfX0pLFpjPVljLmV4dGVuZCh7cG9pbnRlcklkOm51bGwsd2lkdGg6bnVsbCxoZWlnaHQ6bnVsbCxwcmVzc3VyZTpudWxsLHRhbmdlbnRpYWxQcmVzc3VyZTpudWxsLHRpbHRYOm51bGwsdGlsdFk6bnVsbCx0d2lzdDpudWxsLHBvaW50ZXJUeXBlOm51bGwsaXNQcmltYXJ5Om51bGx9KSwkYz17bW91c2VFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VFbnRlclwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxtb3VzZUxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUxlYXZlXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LHBvaW50ZXJFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckVudGVyXCIsZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfSxwb2ludGVyTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJMZWF2ZVwiLFxuZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfX0sYWQ9e2V2ZW50VHlwZXM6JGMsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1cIm1vdXNlb3ZlclwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSxmPVwibW91c2VvdXRcIj09PWF8fFwicG9pbnRlcm91dFwiPT09YTtpZihlJiYoYy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KXx8IWYmJiFlKXJldHVybiBudWxsO2U9ZC53aW5kb3c9PT1kP2Q6KGU9ZC5vd25lckRvY3VtZW50KT9lLmRlZmF1bHRWaWV3fHxlLnBhcmVudFdpbmRvdzp3aW5kb3c7Zj8oZj1iLGI9KGI9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCk/SGEoYik6bnVsbCk6Zj1udWxsO2lmKGY9PT1iKXJldHVybiBudWxsO3ZhciBnPXZvaWQgMCxoPXZvaWQgMCxsPXZvaWQgMCxrPXZvaWQgMDtpZihcIm1vdXNlb3V0XCI9PT1hfHxcIm1vdXNlb3ZlclwiPT09YSlnPVljLGg9JGMubW91c2VMZWF2ZSxsPSRjLm1vdXNlRW50ZXIsaz1cIm1vdXNlXCI7XG5lbHNlIGlmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSlnPVpjLGg9JGMucG9pbnRlckxlYXZlLGw9JGMucG9pbnRlckVudGVyLGs9XCJwb2ludGVyXCI7dmFyIG09bnVsbD09Zj9lOkphKGYpO2U9bnVsbD09Yj9lOkphKGIpO2E9Zy5nZXRQb29sZWQoaCxmLGMsZCk7YS50eXBlPWsrXCJsZWF2ZVwiO2EudGFyZ2V0PW07YS5yZWxhdGVkVGFyZ2V0PWU7Yz1nLmdldFBvb2xlZChsLGIsYyxkKTtjLnR5cGU9aytcImVudGVyXCI7Yy50YXJnZXQ9ZTtjLnJlbGF0ZWRUYXJnZXQ9bTtkPWI7aWYoZiYmZClhOntiPWY7ZT1kO2s9MDtmb3IoZz1iO2c7Zz1MYShnKSlrKys7Zz0wO2ZvcihsPWU7bDtsPUxhKGwpKWcrKztmb3IoOzA8ay1nOyliPUxhKGIpLGstLTtmb3IoOzA8Zy1rOyllPUxhKGUpLGctLTtmb3IoO2stLTspe2lmKGI9PT1lfHxiPT09ZS5hbHRlcm5hdGUpYnJlYWsgYTtiPUxhKGIpO2U9TGEoZSl9Yj1udWxsfWVsc2UgYj1udWxsO2U9Yjtmb3IoYj1bXTtmJiZmIT09ZTspe2s9XG5mLmFsdGVybmF0ZTtpZihudWxsIT09ayYmaz09PWUpYnJlYWs7Yi5wdXNoKGYpO2Y9TGEoZil9Zm9yKGY9W107ZCYmZCE9PWU7KXtrPWQuYWx0ZXJuYXRlO2lmKG51bGwhPT1rJiZrPT09ZSlicmVhaztmLnB1c2goZCk7ZD1MYShkKX1mb3IoZD0wO2Q8Yi5sZW5ndGg7ZCsrKU9hKGJbZF0sXCJidWJibGVkXCIsYSk7Zm9yKGQ9Zi5sZW5ndGg7MDxkLS07KU9hKGZbZF0sXCJjYXB0dXJlZFwiLGMpO3JldHVyblthLGNdfX07ZnVuY3Rpb24gYmQoYSxiKXtyZXR1cm4gYT09PWImJigwIT09YXx8MS9hPT09MS9iKXx8YSE9PWEmJmIhPT1ifXZhciBjZD1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuZnVuY3Rpb24gZGQoYSxiKXtpZihiZChhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspaWYoIWNkLmNhbGwoYixjW2RdKXx8IWJkKGFbY1tkXV0sYltjW2RdXSkpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24gZWQoYSl7dmFyIGI9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7aWYoMCE9PShiLmVmZmVjdFRhZyYyKSlyZXR1cm4gMTtmb3IoO2IucmV0dXJuOylpZihiPWIucmV0dXJuLDAhPT0oYi5lZmZlY3RUYWcmMikpcmV0dXJuIDF9cmV0dXJuIDM9PT1iLnRhZz8yOjN9ZnVuY3Rpb24gZmQoYSl7MiE9PWVkKGEpP3goXCIxODhcIik6dm9pZCAwfVxuZnVuY3Rpb24gZ2QoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpcmV0dXJuIGI9ZWQoYSksMz09PWI/eChcIjE4OFwiKTp2b2lkIDAsMT09PWI/bnVsbDphO2Zvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybixmPWU/ZS5hbHRlcm5hdGU6bnVsbDtpZighZXx8IWYpYnJlYWs7aWYoZS5jaGlsZD09PWYuY2hpbGQpe2Zvcih2YXIgZz1lLmNoaWxkO2c7KXtpZihnPT09YylyZXR1cm4gZmQoZSksYTtpZihnPT09ZClyZXR1cm4gZmQoZSksYjtnPWcuc2libGluZ314KFwiMTg4XCIpfWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2c9ITE7Zm9yKHZhciBoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWc/XG52b2lkIDA6eChcIjE4OVwiKX19Yy5hbHRlcm5hdGUhPT1kP3goXCIxOTBcIik6dm9pZCAwfTMhPT1jLnRhZz94KFwiMTg4XCIpOnZvaWQgMDtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIGhkKGEpe2E9Z2QoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG52YXIgaWQ9eS5leHRlbmQoe2FuaW1hdGlvbk5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLGpkPXkuZXh0ZW5kKHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksa2Q9UWMuZXh0ZW5kKHtyZWxhdGVkVGFyZ2V0Om51bGx9KTtmdW5jdGlvbiBsZChhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1cbnZhciBtZD17RXNjOlwiRXNjYXBlXCIsU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sbmQ9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsXG4xMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIiwxMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LG9kPVFjLmV4dGVuZCh7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1tZFthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1sZChhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/bmRbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxsb2NhdGlvbjpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxyZXBlYXQ6bnVsbCxsb2NhbGU6bnVsbCxnZXRNb2RpZmllclN0YXRlOlRjLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP2xkKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP2xkKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSkscGQ9WWMuZXh0ZW5kKHtkYXRhVHJhbnNmZXI6bnVsbH0pLHFkPVFjLmV4dGVuZCh7dG91Y2hlczpudWxsLHRhcmdldFRvdWNoZXM6bnVsbCxjaGFuZ2VkVG91Y2hlczpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlRjfSkscmQ9eS5leHRlbmQoe3Byb3BlcnR5TmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksc2Q9WWMuZXh0ZW5kKHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW5cbmE/LWEud2hlZWxEZWx0YVg6MH0sZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOm51bGwsZGVsdGFNb2RlOm51bGx9KSx0ZD1bW1wiYWJvcnRcIixcImFib3J0XCJdLFtYYSxcImFuaW1hdGlvbkVuZFwiXSxbWWEsXCJhbmltYXRpb25JdGVyYXRpb25cIl0sW1phLFwiYW5pbWF0aW9uU3RhcnRcIl0sW1wiY2FucGxheVwiLFwiY2FuUGxheVwiXSxbXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIl0sW1wiZHJhZ1wiLFwiZHJhZ1wiXSxbXCJkcmFnZW50ZXJcIixcImRyYWdFbnRlclwiXSxbXCJkcmFnZXhpdFwiLFwiZHJhZ0V4aXRcIl0sW1wiZHJhZ2xlYXZlXCIsXCJkcmFnTGVhdmVcIl0sW1wiZHJhZ292ZXJcIixcImRyYWdPdmVyXCJdLFtcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiXSxbXCJlbXB0aWVkXCIsXCJlbXB0aWVkXCJdLFtcImVuY3J5cHRlZFwiLFwiZW5jcnlwdGVkXCJdLFxuW1wiZW5kZWRcIixcImVuZGVkXCJdLFtcImVycm9yXCIsXCJlcnJvclwiXSxbXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIl0sW1wibG9hZFwiLFwibG9hZFwiXSxbXCJsb2FkZWRkYXRhXCIsXCJsb2FkZWREYXRhXCJdLFtcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiXSxbXCJsb2Fkc3RhcnRcIixcImxvYWRTdGFydFwiXSxbXCJsb3N0cG9pbnRlcmNhcHR1cmVcIixcImxvc3RQb2ludGVyQ2FwdHVyZVwiXSxbXCJtb3VzZW1vdmVcIixcIm1vdXNlTW92ZVwiXSxbXCJtb3VzZW91dFwiLFwibW91c2VPdXRcIl0sW1wibW91c2VvdmVyXCIsXCJtb3VzZU92ZXJcIl0sW1wicGxheWluZ1wiLFwicGxheWluZ1wiXSxbXCJwb2ludGVybW92ZVwiLFwicG9pbnRlck1vdmVcIl0sW1wicG9pbnRlcm91dFwiLFwicG9pbnRlck91dFwiXSxbXCJwb2ludGVyb3ZlclwiLFwicG9pbnRlck92ZXJcIl0sW1wicHJvZ3Jlc3NcIixcInByb2dyZXNzXCJdLFtcInNjcm9sbFwiLFwic2Nyb2xsXCJdLFtcInNlZWtpbmdcIixcInNlZWtpbmdcIl0sW1wic3RhbGxlZFwiLFwic3RhbGxlZFwiXSxcbltcInN1c3BlbmRcIixcInN1c3BlbmRcIl0sW1widGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiXSxbXCJ0b2dnbGVcIixcInRvZ2dsZVwiXSxbXCJ0b3VjaG1vdmVcIixcInRvdWNoTW92ZVwiXSxbJGEsXCJ0cmFuc2l0aW9uRW5kXCJdLFtcIndhaXRpbmdcIixcIndhaXRpbmdcIl0sW1wid2hlZWxcIixcIndoZWVsXCJdXSx1ZD17fSx2ZD17fTtmdW5jdGlvbiB3ZChhLGIpe3ZhciBjPWFbMF07YT1hWzFdO3ZhciBkPVwib25cIisoYVswXS50b1VwcGVyQ2FzZSgpK2Euc2xpY2UoMSkpO2I9e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOmQsY2FwdHVyZWQ6ZCtcIkNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltjXSxpc0ludGVyYWN0aXZlOmJ9O3VkW2FdPWI7dmRbY109Yn1cbltbXCJibHVyXCIsXCJibHVyXCJdLFtcImNhbmNlbFwiLFwiY2FuY2VsXCJdLFtcImNsaWNrXCIsXCJjbGlja1wiXSxbXCJjbG9zZVwiLFwiY2xvc2VcIl0sW1wiY29udGV4dG1lbnVcIixcImNvbnRleHRNZW51XCJdLFtcImNvcHlcIixcImNvcHlcIl0sW1wiY3V0XCIsXCJjdXRcIl0sW1wiYXV4Y2xpY2tcIixcImF1eENsaWNrXCJdLFtcImRibGNsaWNrXCIsXCJkb3VibGVDbGlja1wiXSxbXCJkcmFnZW5kXCIsXCJkcmFnRW5kXCJdLFtcImRyYWdzdGFydFwiLFwiZHJhZ1N0YXJ0XCJdLFtcImRyb3BcIixcImRyb3BcIl0sW1wiZm9jdXNcIixcImZvY3VzXCJdLFtcImlucHV0XCIsXCJpbnB1dFwiXSxbXCJpbnZhbGlkXCIsXCJpbnZhbGlkXCJdLFtcImtleWRvd25cIixcImtleURvd25cIl0sW1wia2V5cHJlc3NcIixcImtleVByZXNzXCJdLFtcImtleXVwXCIsXCJrZXlVcFwiXSxbXCJtb3VzZWRvd25cIixcIm1vdXNlRG93blwiXSxbXCJtb3VzZXVwXCIsXCJtb3VzZVVwXCJdLFtcInBhc3RlXCIsXCJwYXN0ZVwiXSxbXCJwYXVzZVwiLFwicGF1c2VcIl0sW1wicGxheVwiLFwicGxheVwiXSxbXCJwb2ludGVyY2FuY2VsXCIsXCJwb2ludGVyQ2FuY2VsXCJdLFxuW1wicG9pbnRlcmRvd25cIixcInBvaW50ZXJEb3duXCJdLFtcInBvaW50ZXJ1cFwiLFwicG9pbnRlclVwXCJdLFtcInJhdGVjaGFuZ2VcIixcInJhdGVDaGFuZ2VcIl0sW1wicmVzZXRcIixcInJlc2V0XCJdLFtcInNlZWtlZFwiLFwic2Vla2VkXCJdLFtcInN1Ym1pdFwiLFwic3VibWl0XCJdLFtcInRvdWNoY2FuY2VsXCIsXCJ0b3VjaENhbmNlbFwiXSxbXCJ0b3VjaGVuZFwiLFwidG91Y2hFbmRcIl0sW1widG91Y2hzdGFydFwiLFwidG91Y2hTdGFydFwiXSxbXCJ2b2x1bWVjaGFuZ2VcIixcInZvbHVtZUNoYW5nZVwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt3ZChhLCEwKX0pO3RkLmZvckVhY2goZnVuY3Rpb24oYSl7d2QoYSwhMSl9KTtcbnZhciB4ZD17ZXZlbnRUeXBlczp1ZCxpc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGU6ZnVuY3Rpb24oYSl7YT12ZFthXTtyZXR1cm4gdm9pZCAwIT09YSYmITA9PT1hLmlzSW50ZXJhY3RpdmV9LGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9dmRbYV07aWYoIWUpcmV0dXJuIG51bGw7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1sZChjKSlyZXR1cm4gbnVsbDtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOmE9b2Q7YnJlYWs7Y2FzZSBcImJsdXJcIjpjYXNlIFwiZm9jdXNcIjphPWtkO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilyZXR1cm4gbnVsbDtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOmE9WWM7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6YT1cbnBkO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOmE9cWQ7YnJlYWs7Y2FzZSBYYTpjYXNlIFlhOmNhc2UgWmE6YT1pZDticmVhaztjYXNlICRhOmE9cmQ7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOmE9UWM7YnJlYWs7Y2FzZSBcIndoZWVsXCI6YT1zZDticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjphPWpkO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOmE9WmM7YnJlYWs7ZGVmYXVsdDphPXl9Yj1hLmdldFBvb2xlZChlLGIsYyxkKTtRYShiKTtyZXR1cm4gYn19LHlkPXhkLmlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZSxcbnpkPVtdO2Z1bmN0aW9uIEFkKGEpe3ZhciBiPWEudGFyZ2V0SW5zdCxjPWI7ZG97aWYoIWMpe2EuYW5jZXN0b3JzLnB1c2goYyk7YnJlYWt9dmFyIGQ7Zm9yKGQ9YztkLnJldHVybjspZD1kLnJldHVybjtkPTMhPT1kLnRhZz9udWxsOmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87aWYoIWQpYnJlYWs7YS5hbmNlc3RvcnMucHVzaChjKTtjPUhhKGQpfXdoaWxlKGMpO2ZvcihjPTA7YzxhLmFuY2VzdG9ycy5sZW5ndGg7YysrKXtiPWEuYW5jZXN0b3JzW2NdO3ZhciBlPU5iKGEubmF0aXZlRXZlbnQpO2Q9YS50b3BMZXZlbFR5cGU7Zm9yKHZhciBmPWEubmF0aXZlRXZlbnQsZz1udWxsLGg9MDtoPG9hLmxlbmd0aDtoKyspe3ZhciBsPW9hW2hdO2wmJihsPWwuZXh0cmFjdEV2ZW50cyhkLGIsZixlKSkmJihnPXhhKGcsbCkpfURhKGcpfX12YXIgQmQ9ITA7XG5mdW5jdGlvbiBFKGEsYil7aWYoIWIpcmV0dXJuIG51bGw7dmFyIGM9KHlkKGEpP0NkOkRkKS5iaW5kKG51bGwsYSk7Yi5hZGRFdmVudExpc3RlbmVyKGEsYywhMSl9ZnVuY3Rpb24gRWQoYSxiKXtpZighYilyZXR1cm4gbnVsbDt2YXIgYz0oeWQoYSk/Q2Q6RGQpLmJpbmQobnVsbCxhKTtiLmFkZEV2ZW50TGlzdGVuZXIoYSxjLCEwKX1mdW5jdGlvbiBDZChhLGIpe0hiKERkLGEsYil9XG5mdW5jdGlvbiBEZChhLGIpe2lmKEJkKXt2YXIgYz1OYihiKTtjPUhhKGMpO251bGw9PT1jfHxcIm51bWJlclwiIT09dHlwZW9mIGMudGFnfHwyPT09ZWQoYyl8fChjPW51bGwpO2lmKHpkLmxlbmd0aCl7dmFyIGQ9emQucG9wKCk7ZC50b3BMZXZlbFR5cGU9YTtkLm5hdGl2ZUV2ZW50PWI7ZC50YXJnZXRJbnN0PWM7YT1kfWVsc2UgYT17dG9wTGV2ZWxUeXBlOmEsbmF0aXZlRXZlbnQ6Yix0YXJnZXRJbnN0OmMsYW5jZXN0b3JzOltdfTt0cnl7S2IoQWQsYSl9ZmluYWxseXthLnRvcExldmVsVHlwZT1udWxsLGEubmF0aXZlRXZlbnQ9bnVsbCxhLnRhcmdldEluc3Q9bnVsbCxhLmFuY2VzdG9ycy5sZW5ndGg9MCwxMD56ZC5sZW5ndGgmJnpkLnB1c2goYSl9fX12YXIgRmQ9e30sR2Q9MCxIZD1cIl9yZWFjdExpc3RlbmVyc0lEXCIrKFwiXCIrTWF0aC5yYW5kb20oKSkuc2xpY2UoMik7XG5mdW5jdGlvbiBJZChhKXtPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYSxIZCl8fChhW0hkXT1HZCsrLEZkW2FbSGRdXT17fSk7cmV0dXJuIEZkW2FbSGRdXX1mdW5jdGlvbiBKZChhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19ZnVuY3Rpb24gS2QoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfVxuZnVuY3Rpb24gTGQoYSxiKXt2YXIgYz1LZChhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz1LZChjKX19ZnVuY3Rpb24gTWQoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT9NZChhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9XG5mdW5jdGlvbiBOZCgpe2Zvcih2YXIgYT13aW5kb3csYj1KZCgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e2E9Yi5jb250ZW50RG9jdW1lbnQuZGVmYXVsdFZpZXd9Y2F0Y2goYyl7YnJlYWt9Yj1KZChhLmRvY3VtZW50KX1yZXR1cm4gYn1mdW5jdGlvbiBPZChhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfVxuZnVuY3Rpb24gUGQoKXt2YXIgYT1OZCgpO2lmKE9kKGEpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBhKXZhciBiPXtzdGFydDphLnNlbGVjdGlvblN0YXJ0LGVuZDphLnNlbGVjdGlvbkVuZH07ZWxzZSBhOntiPShiPWEub3duZXJEb2N1bWVudCkmJmIuZGVmYXVsdFZpZXd8fHdpbmRvdzt2YXIgYz1iLmdldFNlbGVjdGlvbiYmYi5nZXRTZWxlY3Rpb24oKTtpZihjJiYwIT09Yy5yYW5nZUNvdW50KXtiPWMuYW5jaG9yTm9kZTt2YXIgZD1jLmFuY2hvck9mZnNldCxlPWMuZm9jdXNOb2RlO2M9Yy5mb2N1c09mZnNldDt0cnl7Yi5ub2RlVHlwZSxlLm5vZGVUeXBlfWNhdGNoKEEpe2I9bnVsbDticmVhayBhfXZhciBmPTAsZz0tMSxoPS0xLGw9MCxrPTAsbT1hLHA9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciB0Ozspe20hPT1ifHwwIT09ZCYmMyE9PW0ubm9kZVR5cGV8fChnPWYrZCk7bSE9PWV8fDAhPT1jJiYzIT09bS5ub2RlVHlwZXx8KGg9ZitjKTszPT09bS5ub2RlVHlwZSYmKGYrPW0ubm9kZVZhbHVlLmxlbmd0aCk7XG5pZihudWxsPT09KHQ9bS5maXJzdENoaWxkKSlicmVhaztwPW07bT10fWZvcig7Oyl7aWYobT09PWEpYnJlYWsgYjtwPT09YiYmKytsPT09ZCYmKGc9Zik7cD09PWUmJisraz09PWMmJihoPWYpO2lmKG51bGwhPT0odD1tLm5leHRTaWJsaW5nKSlicmVhazttPXA7cD1tLnBhcmVudE5vZGV9bT10fWI9LTE9PT1nfHwtMT09PWg/bnVsbDp7c3RhcnQ6ZyxlbmQ6aH19ZWxzZSBiPW51bGx9Yj1ifHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBiPW51bGw7cmV0dXJue2ZvY3VzZWRFbGVtOmEsc2VsZWN0aW9uUmFuZ2U6Yn19XG5mdW5jdGlvbiBRZChhKXt2YXIgYj1OZCgpLGM9YS5mb2N1c2VkRWxlbSxkPWEuc2VsZWN0aW9uUmFuZ2U7aWYoYiE9PWMmJmMmJmMub3duZXJEb2N1bWVudCYmTWQoYy5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxjKSl7aWYobnVsbCE9PWQmJk9kKGMpKWlmKGI9ZC5zdGFydCxhPWQuZW5kLHZvaWQgMD09PWEmJihhPWIpLFwic2VsZWN0aW9uU3RhcnRcImluIGMpYy5zZWxlY3Rpb25TdGFydD1iLGMuc2VsZWN0aW9uRW5kPU1hdGgubWluKGEsYy52YWx1ZS5sZW5ndGgpO2Vsc2UgaWYoYT0oYj1jLm93bmVyRG9jdW1lbnR8fGRvY3VtZW50KSYmYi5kZWZhdWx0Vmlld3x8d2luZG93LGEuZ2V0U2VsZWN0aW9uKXthPWEuZ2V0U2VsZWN0aW9uKCk7dmFyIGU9Yy50ZXh0Q29udGVudC5sZW5ndGgsZj1NYXRoLm1pbihkLnN0YXJ0LGUpO2Q9dm9pZCAwPT09ZC5lbmQ/ZjpNYXRoLm1pbihkLmVuZCxlKTshYS5leHRlbmQmJmY+ZCYmKGU9ZCxkPWYsZj1lKTtlPUxkKGMsZik7dmFyIGc9TGQoYyxcbmQpO2UmJmcmJigxIT09YS5yYW5nZUNvdW50fHxhLmFuY2hvck5vZGUhPT1lLm5vZGV8fGEuYW5jaG9yT2Zmc2V0IT09ZS5vZmZzZXR8fGEuZm9jdXNOb2RlIT09Zy5ub2RlfHxhLmZvY3VzT2Zmc2V0IT09Zy5vZmZzZXQpJiYoYj1iLmNyZWF0ZVJhbmdlKCksYi5zZXRTdGFydChlLm5vZGUsZS5vZmZzZXQpLGEucmVtb3ZlQWxsUmFuZ2VzKCksZj5kPyhhLmFkZFJhbmdlKGIpLGEuZXh0ZW5kKGcubm9kZSxnLm9mZnNldCkpOihiLnNldEVuZChnLm5vZGUsZy5vZmZzZXQpLGEuYWRkUmFuZ2UoYikpKX1iPVtdO2ZvcihhPWM7YT1hLnBhcmVudE5vZGU7KTE9PT1hLm5vZGVUeXBlJiZiLnB1c2goe2VsZW1lbnQ6YSxsZWZ0OmEuc2Nyb2xsTGVmdCx0b3A6YS5zY3JvbGxUb3B9KTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5mb2N1cyYmYy5mb2N1cygpO2ZvcihjPTA7YzxiLmxlbmd0aDtjKyspYT1iW2NdLGEuZWxlbWVudC5zY3JvbGxMZWZ0PWEubGVmdCxhLmVsZW1lbnQuc2Nyb2xsVG9wPWEudG9wfX1cbnZhciBSZD1SYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLFNkPXtzZWxlY3Q6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25TZWxlY3RcIixjYXB0dXJlZDpcIm9uU2VsZWN0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXMga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fSxUZD1udWxsLFVkPW51bGwsVmQ9bnVsbCxXZD0hMTtcbmZ1bmN0aW9uIFhkKGEsYil7dmFyIGM9Yi53aW5kb3c9PT1iP2IuZG9jdW1lbnQ6OT09PWIubm9kZVR5cGU/YjpiLm93bmVyRG9jdW1lbnQ7aWYoV2R8fG51bGw9PVRkfHxUZCE9PUpkKGMpKXJldHVybiBudWxsO2M9VGQ7XCJzZWxlY3Rpb25TdGFydFwiaW4gYyYmT2QoYyk/Yz17c3RhcnQ6Yy5zZWxlY3Rpb25TdGFydCxlbmQ6Yy5zZWxlY3Rpb25FbmR9OihjPShjLm93bmVyRG9jdW1lbnQmJmMub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxjPXthbmNob3JOb2RlOmMuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6Yy5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmMuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmMuZm9jdXNPZmZzZXR9KTtyZXR1cm4gVmQmJmRkKFZkLGMpP251bGw6KFZkPWMsYT15LmdldFBvb2xlZChTZC5zZWxlY3QsVWQsYSxiKSxhLnR5cGU9XCJzZWxlY3RcIixhLnRhcmdldD1UZCxRYShhKSxhKX1cbnZhciBZZD17ZXZlbnRUeXBlczpTZCxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWQud2luZG93PT09ZD9kLmRvY3VtZW50Ojk9PT1kLm5vZGVUeXBlP2Q6ZC5vd25lckRvY3VtZW50LGY7aWYoIShmPSFlKSl7YTp7ZT1JZChlKTtmPXNhLm9uU2VsZWN0O2Zvcih2YXIgZz0wO2c8Zi5sZW5ndGg7ZysrKXt2YXIgaD1mW2ddO2lmKCFlLmhhc093blByb3BlcnR5KGgpfHwhZVtoXSl7ZT0hMTticmVhayBhfX1lPSEwfWY9IWV9aWYoZilyZXR1cm4gbnVsbDtlPWI/SmEoYik6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNcIjppZihNYihlKXx8XCJ0cnVlXCI9PT1lLmNvbnRlbnRFZGl0YWJsZSlUZD1lLFVkPWIsVmQ9bnVsbDticmVhaztjYXNlIFwiYmx1clwiOlZkPVVkPVRkPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOldkPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpyZXR1cm4gV2Q9ITEsWGQoYyxkKTtjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6aWYoUmQpYnJlYWs7XG5jYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOnJldHVybiBYZChjLGQpfXJldHVybiBudWxsfX07QmEuaW5qZWN0RXZlbnRQbHVnaW5PcmRlcihcIlJlc3BvbmRlckV2ZW50UGx1Z2luIFNpbXBsZUV2ZW50UGx1Z2luIEVudGVyTGVhdmVFdmVudFBsdWdpbiBDaGFuZ2VFdmVudFBsdWdpbiBTZWxlY3RFdmVudFBsdWdpbiBCZWZvcmVJbnB1dEV2ZW50UGx1Z2luXCIuc3BsaXQoXCIgXCIpKTt0YT1LYTt1YT1JYTt2YT1KYTtCYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUoe1NpbXBsZUV2ZW50UGx1Z2luOnhkLEVudGVyTGVhdmVFdmVudFBsdWdpbjphZCxDaGFuZ2VFdmVudFBsdWdpbjpQYyxTZWxlY3RFdmVudFBsdWdpbjpZZCxCZWZvcmVJbnB1dEV2ZW50UGx1Z2luOnpifSk7ZnVuY3Rpb24gWmQoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiAkZChhLGIpe2E9bih7Y2hpbGRyZW46dm9pZCAwfSxiKTtpZihiPVpkKGIuY2hpbGRyZW4pKWEuY2hpbGRyZW49YjtyZXR1cm4gYX1mdW5jdGlvbiBhZShhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrdWMoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIGJlKGEsYil7bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTD94KFwiOTFcIik6dm9pZCAwO3JldHVybiBuKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIGNlKGEsYil7dmFyIGM9Yi52YWx1ZTtudWxsPT1jJiYoYz1iLmRlZmF1bHRWYWx1ZSxiPWIuY2hpbGRyZW4sbnVsbCE9YiYmKG51bGwhPWM/eChcIjkyXCIpOnZvaWQgMCxBcnJheS5pc0FycmF5KGIpJiYoMT49Yi5sZW5ndGg/dm9pZCAwOngoXCI5M1wiKSxiPWJbMF0pLGM9YiksbnVsbD09YyYmKGM9XCJcIikpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOnVjKGMpfX1cbmZ1bmN0aW9uIGRlKGEsYil7dmFyIGM9dWMoYi52YWx1ZSksZD11YyhiLmRlZmF1bHRWYWx1ZSk7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmYS5kZWZhdWx0VmFsdWUhPT1jJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWQmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2QpfWZ1bmN0aW9uIGVlKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJihhLnZhbHVlPWIpfXZhciBmZT17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBnZShhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIGhlKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9nZShiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBpZT12b2lkIDAsamU9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09ZmUuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7aWU9aWV8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7aWUuaW5uZXJIVE1MPVwiPHN2Zz5cIitiK1wiPC9zdmc+XCI7Zm9yKGI9aWUuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24ga2UoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1cbnZhciBsZT17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZsZXhPcmRlcjohMCxncmlkQXJlYTohMCxncmlkUm93OiEwLGdyaWRSb3dFbmQ6ITAsZ3JpZFJvd1NwYW46ITAsZ3JpZFJvd1N0YXJ0OiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3BhbjohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZm9udFdlaWdodDohMCxsaW5lQ2xhbXA6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsdGFiU2l6ZTohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITAsZmlsbE9wYWNpdHk6ITAsXG5mbG9vZE9wYWNpdHk6ITAsc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxtZT1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07T2JqZWN0LmtleXMobGUpLmZvckVhY2goZnVuY3Rpb24oYSl7bWUuZm9yRWFjaChmdW5jdGlvbihiKXtiPWIrYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cmluZygxKTtsZVtiXT1sZVthXX0pfSk7ZnVuY3Rpb24gbmUoYSxiLGMpe3JldHVybiBudWxsPT1ifHxcImJvb2xlYW5cIj09PXR5cGVvZiBifHxcIlwiPT09Yj9cIlwiOmN8fFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MD09PWJ8fGxlLmhhc093blByb3BlcnR5KGEpJiZsZVthXT8oXCJcIitiKS50cmltKCk6YitcInB4XCJ9XG5mdW5jdGlvbiBvZShhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIiksZT1uZShjLGJbY10sZCk7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciBwZT1uKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gcWUoYSxiKXtiJiYocGVbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3goXCIxMzdcIixhLFwiXCIpOnZvaWQgMCksbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmKG51bGwhPWIuY2hpbGRyZW4/eChcIjYwXCIpOnZvaWQgMCxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3ZvaWQgMDp4KFwiNjFcIikpLG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZT94KFwiNjJcIixcIlwiKTp2b2lkIDApfVxuZnVuY3Rpb24gcmUoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fVxuZnVuY3Rpb24gc2UoYSxiKXthPTk9PT1hLm5vZGVUeXBlfHwxMT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQ7dmFyIGM9SWQoYSk7Yj1zYVtiXTtmb3IodmFyIGQ9MDtkPGIubGVuZ3RoO2QrKyl7dmFyIGU9YltkXTtpZighYy5oYXNPd25Qcm9wZXJ0eShlKXx8IWNbZV0pe3N3aXRjaChlKXtjYXNlIFwic2Nyb2xsXCI6RWQoXCJzY3JvbGxcIixhKTticmVhaztjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOkVkKFwiZm9jdXNcIixhKTtFZChcImJsdXJcIixhKTtjLmJsdXI9ITA7Yy5mb2N1cz0hMDticmVhaztjYXNlIFwiY2FuY2VsXCI6Y2FzZSBcImNsb3NlXCI6T2IoZSkmJkVkKGUsYSk7YnJlYWs7Y2FzZSBcImludmFsaWRcIjpjYXNlIFwic3VibWl0XCI6Y2FzZSBcInJlc2V0XCI6YnJlYWs7ZGVmYXVsdDotMT09PWFiLmluZGV4T2YoZSkmJkUoZSxhKX1jW2VdPSEwfX19ZnVuY3Rpb24gdGUoKXt9dmFyIHVlPW51bGwsdmU9bnVsbDtcbmZ1bmN0aW9uIHdlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1mdW5jdGlvbiB4ZShhLGIpe3JldHVyblwidGV4dGFyZWFcIj09PWF8fFwib3B0aW9uXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9XG52YXIgeWU9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsemU9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwLEFlPXIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayxCZT1yLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrO1xuZnVuY3Rpb24gQ2UoYSxiLGMsZCxlKXthW0dhXT1lO1wiaW5wdXRcIj09PWMmJlwicmFkaW9cIj09PWUudHlwZSYmbnVsbCE9ZS5uYW1lJiZ4YyhhLGUpO3JlKGMsZCk7ZD1yZShjLGUpO2Zvcih2YXIgZj0wO2Y8Yi5sZW5ndGg7Zis9Mil7dmFyIGc9YltmXSxoPWJbZisxXTtcInN0eWxlXCI9PT1nP29lKGEsaCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9qZShhLGgpOlwiY2hpbGRyZW5cIj09PWc/a2UoYSxoKTp0YyhhLGcsaCxkKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6eWMoYSxlKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpkZShhLGUpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWEuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxhLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFlLm11bHRpcGxlLGM9ZS52YWx1ZSxudWxsIT1jP2FlKGEsISFlLm11bHRpcGxlLGMsITEpOmIhPT0hIWUubXVsdGlwbGUmJihudWxsIT1lLmRlZmF1bHRWYWx1ZT9hZShhLCEhZS5tdWx0aXBsZSxlLmRlZmF1bHRWYWx1ZSxcbiEwKTphZShhLCEhZS5tdWx0aXBsZSxlLm11bHRpcGxlP1tdOlwiXCIsITEpKX19ZnVuY3Rpb24gRGUoYSl7Zm9yKGE9YS5uZXh0U2libGluZzthJiYxIT09YS5ub2RlVHlwZSYmMyE9PWEubm9kZVR5cGU7KWE9YS5uZXh0U2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBFZShhKXtmb3IoYT1hLmZpcnN0Q2hpbGQ7YSYmMSE9PWEubm9kZVR5cGUmJjMhPT1hLm5vZGVUeXBlOylhPWEubmV4dFNpYmxpbmc7cmV0dXJuIGF9bmV3IFNldDt2YXIgRmU9W10sR2U9LTE7ZnVuY3Rpb24gRihhKXswPkdlfHwoYS5jdXJyZW50PUZlW0dlXSxGZVtHZV09bnVsbCxHZS0tKX1mdW5jdGlvbiBHKGEsYil7R2UrKztGZVtHZV09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBIZT17fSxIPXtjdXJyZW50OkhlfSxJPXtjdXJyZW50OiExfSxJZT1IZTtcbmZ1bmN0aW9uIEplKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gSGU7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gSihhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfWZ1bmN0aW9uIEtlKGEpe0YoSSxhKTtGKEgsYSl9ZnVuY3Rpb24gTGUoYSl7RihJLGEpO0YoSCxhKX1cbmZ1bmN0aW9uIE1lKGEsYixjKXtILmN1cnJlbnQhPT1IZT94KFwiMTY4XCIpOnZvaWQgMDtHKEgsYixhKTtHKEksYyxhKX1mdW5jdGlvbiBOZShhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7YT1iLmNoaWxkQ29udGV4dFR5cGVzO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmdldENoaWxkQ29udGV4dClyZXR1cm4gYztkPWQuZ2V0Q2hpbGRDb250ZXh0KCk7Zm9yKHZhciBlIGluIGQpZSBpbiBhP3ZvaWQgMDp4KFwiMTA4XCIsaWMoYil8fFwiVW5rbm93blwiLGUpO3JldHVybiBuKHt9LGMsZCl9ZnVuY3Rpb24gT2UoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yj1iJiZiLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxIZTtJZT1ILmN1cnJlbnQ7RyhILGIsYSk7RyhJLEkuY3VycmVudCxhKTtyZXR1cm4hMH1cbmZ1bmN0aW9uIFBlKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtkP3ZvaWQgMDp4KFwiMTY5XCIpO2M/KGI9TmUoYSxiLEllKSxkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWIsRihJLGEpLEYoSCxhKSxHKEgsYixhKSk6RihJLGEpO0coSSxjLGEpfXZhciBRZT1udWxsLFJlPW51bGw7ZnVuY3Rpb24gU2UoYSl7cmV0dXJuIGZ1bmN0aW9uKGIpe3RyeXtyZXR1cm4gYShiKX1jYXRjaChjKXt9fX1cbmZ1bmN0aW9uIFRlKGEpe2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXJldHVybiExO3ZhciBiPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZihiLmlzRGlzYWJsZWR8fCFiLnN1cHBvcnRzRmliZXIpcmV0dXJuITA7dHJ5e3ZhciBjPWIuaW5qZWN0KGEpO1FlPVNlKGZ1bmN0aW9uKGEpe3JldHVybiBiLm9uQ29tbWl0RmliZXJSb290KGMsYSl9KTtSZT1TZShmdW5jdGlvbihhKXtyZXR1cm4gYi5vbkNvbW1pdEZpYmVyVW5tb3VudChjLGEpfSl9Y2F0Y2goZCl7fXJldHVybiEwfVxuZnVuY3Rpb24gVWUoYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmNvbnRleHREZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5lZmZlY3RUYWc9MDt0aGlzLmxhc3RFZmZlY3Q9dGhpcy5maXJzdEVmZmVjdD10aGlzLm5leHRFZmZlY3Q9bnVsbDt0aGlzLmNoaWxkRXhwaXJhdGlvblRpbWU9dGhpcy5leHBpcmF0aW9uVGltZT0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gSyhhLGIsYyxkKXtyZXR1cm4gbmV3IFVlKGEsYixjLGQpfVxuZnVuY3Rpb24gVmUoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1mdW5jdGlvbiBXZShhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gVmUoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PWNjKXJldHVybiAxMTtpZihhPT09ZWMpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gWGUoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1LKGEudGFnLGIsYS5rZXksYS5tb2RlKSxjLmVsZW1lbnRUeXBlPWEuZWxlbWVudFR5cGUsYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLnBlbmRpbmdQcm9wcz1iLGMuZWZmZWN0VGFnPTAsYy5uZXh0RWZmZWN0PW51bGwsYy5maXJzdEVmZmVjdD1udWxsLGMubGFzdEVmZmVjdD1udWxsKTtjLmNoaWxkRXhwaXJhdGlvblRpbWU9YS5jaGlsZEV4cGlyYXRpb25UaW1lO2MuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZTtjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtjLmNvbnRleHREZXBlbmRlbmNpZXM9YS5jb250ZXh0RGVwZW5kZW5jaWVzO2Muc2libGluZz1hLnNpYmxpbmc7XG5jLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBZZShhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpVmUoYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgWGI6cmV0dXJuIFplKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgYmM6cmV0dXJuICRlKGMsZXwzLGYsYik7Y2FzZSBZYjpyZXR1cm4gJGUoYyxlfDIsZixiKTtjYXNlIFpiOnJldHVybiBhPUsoMTIsYyxiLGV8NCksYS5lbGVtZW50VHlwZT1aYixhLnR5cGU9WmIsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBkYzpyZXR1cm4gYT1LKDEzLGMsYixlKSxhLmVsZW1lbnRUeXBlPWRjLGEudHlwZT1kYyxhLmV4cGlyYXRpb25UaW1lPWYsYTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgJGI6Zz0xMDticmVhayBhO2Nhc2UgYWM6Zz05O2JyZWFrIGE7Y2FzZSBjYzpnPTExO2JyZWFrIGE7Y2FzZSBlYzpnPVxuMTQ7YnJlYWsgYTtjYXNlIGZjOmc9MTY7ZD1udWxsO2JyZWFrIGF9eChcIjEzMFwiLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKX1iPUsoZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IuZXhwaXJhdGlvblRpbWU9ZjtyZXR1cm4gYn1mdW5jdGlvbiBaZShhLGIsYyxkKXthPUsoNyxhLGQsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uICRlKGEsYixjLGQpe2E9Syg4LGEsZCxiKTtiPTA9PT0oYiYxKT9ZYjpiYzthLmVsZW1lbnRUeXBlPWI7YS50eXBlPWI7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIGFmKGEsYixjKXthPUsoNixhLG51bGwsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfVxuZnVuY3Rpb24gYmYoYSxiLGMpe2I9Syg0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5leHBpcmF0aW9uVGltZT1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1mdW5jdGlvbiBjZihhLGIpe2EuZGlkRXJyb3I9ITE7dmFyIGM9YS5lYXJsaWVzdFBlbmRpbmdUaW1lOzA9PT1jP2EuZWFybGllc3RQZW5kaW5nVGltZT1hLmxhdGVzdFBlbmRpbmdUaW1lPWI6YzxiP2EuZWFybGllc3RQZW5kaW5nVGltZT1iOmEubGF0ZXN0UGVuZGluZ1RpbWU+YiYmKGEubGF0ZXN0UGVuZGluZ1RpbWU9Yik7ZGYoYixhKX1cbmZ1bmN0aW9uIGVmKGEsYil7YS5kaWRFcnJvcj0hMTtpZigwPT09YilhLmVhcmxpZXN0UGVuZGluZ1RpbWU9MCxhLmxhdGVzdFBlbmRpbmdUaW1lPTAsYS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFBpbmdlZFRpbWU9MDtlbHNle2I8YS5sYXRlc3RQaW5nZWRUaW1lJiYoYS5sYXRlc3RQaW5nZWRUaW1lPTApO3ZhciBjPWEubGF0ZXN0UGVuZGluZ1RpbWU7MCE9PWMmJihjPmI/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWEubGF0ZXN0UGVuZGluZ1RpbWU9MDphLmVhcmxpZXN0UGVuZGluZ1RpbWU+YiYmKGEuZWFybGllc3RQZW5kaW5nVGltZT1hLmxhdGVzdFBlbmRpbmdUaW1lKSk7Yz1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTswPT09Yz9jZihhLGIpOmI8YS5sYXRlc3RTdXNwZW5kZWRUaW1lPyhhLmVhcmxpZXN0U3VzcGVuZGVkVGltZT0wLGEubGF0ZXN0U3VzcGVuZGVkVGltZT0wLGEubGF0ZXN0UGluZ2VkVGltZT0wLGNmKGEsYikpOlxuYj5jJiZjZihhLGIpfWRmKDAsYSl9ZnVuY3Rpb24gZmYoYSxiKXthLmRpZEVycm9yPSExO2EubGF0ZXN0UGluZ2VkVGltZT49YiYmKGEubGF0ZXN0UGluZ2VkVGltZT0wKTt2YXIgYz1hLmVhcmxpZXN0UGVuZGluZ1RpbWUsZD1hLmxhdGVzdFBlbmRpbmdUaW1lO2M9PT1iP2EuZWFybGllc3RQZW5kaW5nVGltZT1kPT09Yj9hLmxhdGVzdFBlbmRpbmdUaW1lPTA6ZDpkPT09YiYmKGEubGF0ZXN0UGVuZGluZ1RpbWU9Yyk7Yz1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTtkPWEubGF0ZXN0U3VzcGVuZGVkVGltZTswPT09Yz9hLmVhcmxpZXN0U3VzcGVuZGVkVGltZT1hLmxhdGVzdFN1c3BlbmRlZFRpbWU9YjpjPGI/YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9YjpkPmImJihhLmxhdGVzdFN1c3BlbmRlZFRpbWU9Yik7ZGYoYixhKX1cbmZ1bmN0aW9uIGdmKGEsYil7dmFyIGM9YS5lYXJsaWVzdFBlbmRpbmdUaW1lO2E9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU7Yz5iJiYoYj1jKTthPmImJihiPWEpO3JldHVybiBifWZ1bmN0aW9uIGRmKGEsYil7dmFyIGM9Yi5lYXJsaWVzdFN1c3BlbmRlZFRpbWUsZD1iLmxhdGVzdFN1c3BlbmRlZFRpbWUsZT1iLmVhcmxpZXN0UGVuZGluZ1RpbWUsZj1iLmxhdGVzdFBpbmdlZFRpbWU7ZT0wIT09ZT9lOmY7MD09PWUmJigwPT09YXx8ZDxhKSYmKGU9ZCk7YT1lOzAhPT1hJiZjPmEmJihhPWMpO2IubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249ZTtiLmV4cGlyYXRpb25UaW1lPWF9ZnVuY3Rpb24gTChhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPW4oe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKX1yZXR1cm4gYn1cbmZ1bmN0aW9uIGhmKGEpe3ZhciBiPWEuX3Jlc3VsdDtzd2l0Y2goYS5fc3RhdHVzKXtjYXNlIDE6cmV0dXJuIGI7Y2FzZSAyOnRocm93IGI7Y2FzZSAwOnRocm93IGI7ZGVmYXVsdDphLl9zdGF0dXM9MDtiPWEuX2N0b3I7Yj1iKCk7Yi50aGVuKGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihiPWIuZGVmYXVsdCxhLl9zdGF0dXM9MSxhLl9yZXN1bHQ9Yil9LGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yil9KTtzd2l0Y2goYS5fc3RhdHVzKXtjYXNlIDE6cmV0dXJuIGEuX3Jlc3VsdDtjYXNlIDI6dGhyb3cgYS5fcmVzdWx0O31hLl9yZXN1bHQ9Yjt0aHJvdyBiO319dmFyIGpmPShuZXcgYWEuQ29tcG9uZW50KS5yZWZzO1xuZnVuY3Rpb24ga2YoYSxiLGMsZCl7Yj1hLm1lbW9pemVkU3RhdGU7Yz1jKGQsYik7Yz1udWxsPT09Y3x8dm9pZCAwPT09Yz9iOm4oe30sYixjKTthLm1lbW9pemVkU3RhdGU9YztkPWEudXBkYXRlUXVldWU7bnVsbCE9PWQmJjA9PT1hLmV4cGlyYXRpb25UaW1lJiYoZC5iYXNlU3RhdGU9Yyl9XG52YXIgdGY9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFsRmliZXIpPzI9PT1lZChhKTohMX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1sZigpO2Q9bWYoZCxhKTt2YXIgZT1uZihkKTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7b2YoKTtwZihhLGUpO3FmKGEsZCl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPWxmKCk7ZD1tZihkLGEpO3ZhciBlPW5mKGQpO2UudGFnPXJmO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTtvZigpO3BmKGEsZSk7cWYoYSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGM9bGYoKTtjPW1mKGMsYSk7dmFyIGQ9bmYoYyk7ZC50YWc9XG5zZjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGQuY2FsbGJhY2s9Yik7b2YoKTtwZihhLGQpO3FmKGEsYyl9fTtmdW5jdGlvbiB1ZihhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFkZChjLGQpfHwhZGQoZSxmKTohMH1cbmZ1bmN0aW9uIHZmKGEsYixjKXt2YXIgZD0hMSxlPUhlO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPU0oZik6KGU9SihiKT9JZTpILmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9KZShhLGUpOkhlKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9dGY7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFsRmliZXI9YTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3JldHVybiBifVxuZnVuY3Rpb24gd2YoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJnRmLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24geGYoYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGU7ZS5wcm9wcz1jO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2UucmVmcz1qZjt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/ZS5jb250ZXh0PU0oZik6KGY9SihiKT9JZTpILmN1cnJlbnQsZS5jb250ZXh0PUplKGEsZikpO2Y9YS51cGRhdGVRdWV1ZTtudWxsIT09ZiYmKHlmKGEsZixjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihrZihhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09XG50eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnR8fChiPWUuc3RhdGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZ0Zi5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSxmPWEudXBkYXRlUXVldWUsbnVsbCE9PWYmJih5ZihhLGYsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmVmZmVjdFRhZ3w9NCl9dmFyIHpmPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiBBZihhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7dmFyIGQ9dm9pZCAwO2MmJigxIT09Yy50YWc/eChcIjMwOVwiKTp2b2lkIDAsZD1jLnN0YXRlTm9kZSk7ZD92b2lkIDA6eChcIjE0N1wiLGEpO3ZhciBlPVwiXCIrYTtpZihudWxsIT09YiYmbnVsbCE9PWIucmVmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcztiPT09amYmJihiPWQucmVmcz17fSk7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTtiLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYn1cInN0cmluZ1wiIT09dHlwZW9mIGE/eChcIjI4NFwiKTp2b2lkIDA7Yy5fb3duZXI/dm9pZCAwOngoXCIyOTBcIixhKX1yZXR1cm4gYX1cbmZ1bmN0aW9uIEJmKGEsYil7XCJ0ZXh0YXJlYVwiIT09YS50eXBlJiZ4KFwiMzFcIixcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIsXCJcIil9XG5mdW5jdGlvbiBDZihhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmVmZmVjdFRhZz04fX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYixjKXthPVhlKGEsYixjKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZWZmZWN0VGFnPVxuMixjKTpkO2IuZWZmZWN0VGFnPTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZudWxsPT09Yi5hbHRlcm5hdGUmJihiLmVmZmVjdFRhZz0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9YWYoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMsZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGwhPT1iJiZiLmVsZW1lbnRUeXBlPT09Yy50eXBlKXJldHVybiBkPWUoYixjLnByb3BzLGQpLGQucmVmPUFmKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1ZZShjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1BZihhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBrKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09XG5jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPWJmKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIG0oYSxiLGMsZCxmKXtpZihudWxsPT09Ynx8NyE9PWIudGFnKXJldHVybiBiPVplKGMsYS5tb2RlLGQsZiksYi5yZXR1cm49YSxiO2I9ZShiLGMsZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBwKGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj1hZihcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBWYjpyZXR1cm4gYz1ZZShiLnR5cGUsYi5rZXksYi5wcm9wcyxudWxsLGEubW9kZSxjKSxjLnJlZj1BZihhLG51bGwsYiksYy5yZXR1cm49YSxjO2Nhc2UgV2I6cmV0dXJuIGI9YmYoYixhLm1vZGUsYyksYi5yZXR1cm49YSxifWlmKHpmKGIpfHxcbmhjKGIpKXJldHVybiBiPVplKGIsYS5tb2RlLGMsbnVsbCksYi5yZXR1cm49YSxiO0JmKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24gdChhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBWYjpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PVhiP20oYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTpsKGEsYixjLGQpOm51bGw7Y2FzZSBXYjpyZXR1cm4gYy5rZXk9PT1lP2soYSxiLGMsZCk6bnVsbH1pZih6ZihjKXx8aGMoYykpcmV0dXJuIG51bGwhPT1lP251bGw6bShhLGIsYyxkLG51bGwpO0JmKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQShhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPVxuYS5nZXQoYyl8fG51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIFZiOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxkLnR5cGU9PT1YYj9tKGIsYSxkLnByb3BzLmNoaWxkcmVuLGUsZC5rZXkpOmwoYixhLGQsZSk7Y2FzZSBXYjpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsayhiLGEsZCxlKX1pZih6ZihkKXx8aGMoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsbShiLGEsZCxlLG51bGwpO0JmKGIsZCl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gdihlLGcsaCxrKXtmb3IodmFyIGw9bnVsbCxtPW51bGwscT1nLHU9Zz0wLEI9bnVsbDtudWxsIT09cSYmdTxoLmxlbmd0aDt1Kyspe3EuaW5kZXg+dT8oQj1xLHE9bnVsbCk6Qj1xLnNpYmxpbmc7dmFyIHc9dChlLHEsaFt1XSxrKTtpZihudWxsPT09dyl7bnVsbD09PXEmJihxPUIpO2JyZWFrfWEmJlxucSYmbnVsbD09PXcuYWx0ZXJuYXRlJiZiKGUscSk7Zz1mKHcsZyx1KTtudWxsPT09bT9sPXc6bS5zaWJsaW5nPXc7bT13O3E9Qn1pZih1PT09aC5sZW5ndGgpcmV0dXJuIGMoZSxxKSxsO2lmKG51bGw9PT1xKXtmb3IoO3U8aC5sZW5ndGg7dSsrKWlmKHE9cChlLGhbdV0saykpZz1mKHEsZyx1KSxudWxsPT09bT9sPXE6bS5zaWJsaW5nPXEsbT1xO3JldHVybiBsfWZvcihxPWQoZSxxKTt1PGgubGVuZ3RoO3UrKylpZihCPUEocSxlLHUsaFt1XSxrKSlhJiZudWxsIT09Qi5hbHRlcm5hdGUmJnEuZGVsZXRlKG51bGw9PT1CLmtleT91OkIua2V5KSxnPWYoQixnLHUpLG51bGw9PT1tP2w9QjptLnNpYmxpbmc9QixtPUI7YSYmcS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1mdW5jdGlvbiBSKGUsZyxoLGspe3ZhciBsPWhjKGgpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBsP3goXCIxNTBcIik6dm9pZCAwO2g9bC5jYWxsKGgpO251bGw9PWg/eChcIjE1MVwiKTp2b2lkIDA7XG5mb3IodmFyIG09bD1udWxsLHE9Zyx1PWc9MCxCPW51bGwsdz1oLm5leHQoKTtudWxsIT09cSYmIXcuZG9uZTt1Kyssdz1oLm5leHQoKSl7cS5pbmRleD51PyhCPXEscT1udWxsKTpCPXEuc2libGluZzt2YXIgdj10KGUscSx3LnZhbHVlLGspO2lmKG51bGw9PT12KXtxfHwocT1CKTticmVha31hJiZxJiZudWxsPT09di5hbHRlcm5hdGUmJmIoZSxxKTtnPWYodixnLHUpO251bGw9PT1tP2w9djptLnNpYmxpbmc9djttPXY7cT1CfWlmKHcuZG9uZSlyZXR1cm4gYyhlLHEpLGw7aWYobnVsbD09PXEpe2Zvcig7IXcuZG9uZTt1Kyssdz1oLm5leHQoKSl3PXAoZSx3LnZhbHVlLGspLG51bGwhPT13JiYoZz1mKHcsZyx1KSxudWxsPT09bT9sPXc6bS5zaWJsaW5nPXcsbT13KTtyZXR1cm4gbH1mb3IocT1kKGUscSk7IXcuZG9uZTt1Kyssdz1oLm5leHQoKSl3PUEocSxlLHUsdy52YWx1ZSxrKSxudWxsIT09dyYmKGEmJm51bGwhPT13LmFsdGVybmF0ZSYmcS5kZWxldGUobnVsbD09PXcua2V5P3U6XG53LmtleSksZz1mKHcsZyx1KSxudWxsPT09bT9sPXc6bS5zaWJsaW5nPXcsbT13KTthJiZxLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfXJldHVybiBmdW5jdGlvbihhLGQsZixoKXt2YXIgaz1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT1YYiYmbnVsbD09PWYua2V5O2smJihmPWYucHJvcHMuY2hpbGRyZW4pO3ZhciBsPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY7aWYobClzd2l0Y2goZi4kJHR5cGVvZil7Y2FzZSBWYjphOntsPWYua2V5O2ZvcihrPWQ7bnVsbCE9PWs7KXtpZihrLmtleT09PWwpaWYoNz09PWsudGFnP2YudHlwZT09PVhiOmsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxrLnNpYmxpbmcpO2Q9ZShrLGYudHlwZT09PVhiP2YucHJvcHMuY2hpbGRyZW46Zi5wcm9wcyxoKTtkLnJlZj1BZihhLGssZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPVxuay5zaWJsaW5nfWYudHlwZT09PVhiPyhkPVplKGYucHJvcHMuY2hpbGRyZW4sYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD1ZZShmLnR5cGUsZi5rZXksZi5wcm9wcyxudWxsLGEubW9kZSxoKSxoLnJlZj1BZihhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2UgV2I6YTp7Zm9yKGs9Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PWspaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdLGgpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1kLnNpYmxpbmd9ZD1iZihmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKX1pZihcInN0cmluZ1wiPT09dHlwZW9mIGZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZilyZXR1cm4gZj1cblwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmLGgpLGQucmV0dXJuPWEsYT1kKTooYyhhLGQpLGQ9YWYoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYoemYoZikpcmV0dXJuIHYoYSxkLGYsaCk7aWYoaGMoZikpcmV0dXJuIFIoYSxkLGYsaCk7bCYmQmYoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMDpoPWEudHlwZSx4KFwiMTUyXCIsaC5kaXNwbGF5TmFtZXx8aC5uYW1lfHxcIkNvbXBvbmVudFwiKX1yZXR1cm4gYyhhLGQpfX12YXIgRGY9Q2YoITApLEVmPUNmKCExKSxGZj17fSxOPXtjdXJyZW50OkZmfSxHZj17Y3VycmVudDpGZn0sSGY9e2N1cnJlbnQ6RmZ9O2Z1bmN0aW9uIElmKGEpe2E9PT1GZj94KFwiMTc0XCIpOnZvaWQgMDtyZXR1cm4gYX1cbmZ1bmN0aW9uIEpmKGEsYil7RyhIZixiLGEpO0coR2YsYSxhKTtHKE4sRmYsYSk7dmFyIGM9Yi5ub2RlVHlwZTtzd2l0Y2goYyl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6aGUobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmM9OD09PWM/Yi5wYXJlbnROb2RlOmIsYj1jLm5hbWVzcGFjZVVSSXx8bnVsbCxjPWMudGFnTmFtZSxiPWhlKGIsYyl9RihOLGEpO0coTixiLGEpfWZ1bmN0aW9uIEtmKGEpe0YoTixhKTtGKEdmLGEpO0YoSGYsYSl9ZnVuY3Rpb24gTGYoYSl7SWYoSGYuY3VycmVudCk7dmFyIGI9SWYoTi5jdXJyZW50KTt2YXIgYz1oZShiLGEudHlwZSk7YiE9PWMmJihHKEdmLGEsYSksRyhOLGMsYSkpfWZ1bmN0aW9uIE1mKGEpe0dmLmN1cnJlbnQ9PT1hJiYoRihOLGEpLEYoR2YsYSkpfVxudmFyIE5mPTAsT2Y9MixQZj00LFFmPTgsUmY9MTYsU2Y9MzIsVGY9NjQsVWY9MTI4LFZmPVRiLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsV2Y9MCxYZj1udWxsLE89bnVsbCxQPW51bGwsWWY9bnVsbCxRPW51bGwsWmY9bnVsbCwkZj0wLGFnPW51bGwsYmc9MCxjZz0hMSxkZz1udWxsLGVnPTA7ZnVuY3Rpb24gZmcoKXt4KFwiMzA3XCIpfWZ1bmN0aW9uIGdnKGEsYil7aWYobnVsbD09PWIpcmV0dXJuITE7Zm9yKHZhciBjPTA7YzxiLmxlbmd0aCYmYzxhLmxlbmd0aDtjKyspaWYoIWJkKGFbY10sYltjXSkpcmV0dXJuITE7cmV0dXJuITB9XG5mdW5jdGlvbiBoZyhhLGIsYyxkLGUsZil7V2Y9ZjtYZj1iO1A9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGw7VmYuY3VycmVudD1udWxsPT09UD9pZzpqZztiPWMoZCxlKTtpZihjZyl7ZG8gY2c9ITEsZWcrPTEsUD1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbCxaZj1ZZixhZz1RPU89bnVsbCxWZi5jdXJyZW50PWpnLGI9YyhkLGUpO3doaWxlKGNnKTtkZz1udWxsO2VnPTB9VmYuY3VycmVudD1rZzthPVhmO2EubWVtb2l6ZWRTdGF0ZT1ZZjthLmV4cGlyYXRpb25UaW1lPSRmO2EudXBkYXRlUXVldWU9YWc7YS5lZmZlY3RUYWd8PWJnO2E9bnVsbCE9PU8mJm51bGwhPT1PLm5leHQ7V2Y9MDtaZj1RPVlmPVA9Tz1YZj1udWxsOyRmPTA7YWc9bnVsbDtiZz0wO2E/eChcIjMwMFwiKTp2b2lkIDA7cmV0dXJuIGJ9ZnVuY3Rpb24gbGcoKXtWZi5jdXJyZW50PWtnO1dmPTA7WmY9UT1ZZj1QPU89WGY9bnVsbDskZj0wO2FnPW51bGw7Ymc9MDtjZz0hMTtkZz1udWxsO2VnPTB9XG5mdW5jdGlvbiBtZygpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwscXVldWU6bnVsbCxiYXNlVXBkYXRlOm51bGwsbmV4dDpudWxsfTtudWxsPT09UT9ZZj1RPWE6UT1RLm5leHQ9YTtyZXR1cm4gUX1mdW5jdGlvbiBuZygpe2lmKG51bGwhPT1aZilRPVpmLFpmPVEubmV4dCxPPVAsUD1udWxsIT09Tz9PLm5leHQ6bnVsbDtlbHNle251bGw9PT1QP3goXCIzMTBcIik6dm9pZCAwO089UDt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpPLm1lbW9pemVkU3RhdGUsYmFzZVN0YXRlOk8uYmFzZVN0YXRlLHF1ZXVlOk8ucXVldWUsYmFzZVVwZGF0ZTpPLmJhc2VVcGRhdGUsbmV4dDpudWxsfTtRPW51bGw9PT1RP1lmPWE6US5uZXh0PWE7UD1PLm5leHR9cmV0dXJuIFF9ZnVuY3Rpb24gb2coYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiBwZyhhKXt2YXIgYj1uZygpLGM9Yi5xdWV1ZTtudWxsPT09Yz94KFwiMzExXCIpOnZvaWQgMDtpZigwPGVnKXt2YXIgZD1jLmRpc3BhdGNoO2lmKG51bGwhPT1kZyl7dmFyIGU9ZGcuZ2V0KGMpO2lmKHZvaWQgMCE9PWUpe2RnLmRlbGV0ZShjKTt2YXIgZj1iLm1lbW9pemVkU3RhdGU7ZG8gZj1hKGYsZS5hY3Rpb24pLGU9ZS5uZXh0O3doaWxlKG51bGwhPT1lKTtiZChmLGIubWVtb2l6ZWRTdGF0ZSl8fChxZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7Yi5iYXNlVXBkYXRlPT09Yy5sYXN0JiYoYi5iYXNlU3RhdGU9Zik7Yy5lYWdlclJlZHVjZXI9YTtjLmVhZ2VyU3RhdGU9ZjtyZXR1cm5bZixkXX19cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxkXX1kPWMubGFzdDt2YXIgZz1iLmJhc2VVcGRhdGU7Zj1iLmJhc2VTdGF0ZTtudWxsIT09Zz8obnVsbCE9PWQmJihkLm5leHQ9bnVsbCksZD1nLm5leHQpOmQ9bnVsbCE9PWQ/ZC5uZXh0Om51bGw7aWYobnVsbCE9PWQpe3ZhciBoPWU9bnVsbCxcbmw9ZCxrPSExO2Rve3ZhciBtPWwuZXhwaXJhdGlvblRpbWU7bTxXZj8oa3x8KGs9ITAsaD1nLGU9ZiksbT4kZiYmKCRmPW0pKTpmPWwuZWFnZXJSZWR1Y2VyPT09YT9sLmVhZ2VyU3RhdGU6YShmLGwuYWN0aW9uKTtnPWw7bD1sLm5leHR9d2hpbGUobnVsbCE9PWwmJmwhPT1kKTtrfHwoaD1nLGU9Zik7YmQoZixiLm1lbW9pemVkU3RhdGUpfHwocWc9ITApO2IubWVtb2l6ZWRTdGF0ZT1mO2IuYmFzZVVwZGF0ZT1oO2IuYmFzZVN0YXRlPWU7Yy5lYWdlclJlZHVjZXI9YTtjLmVhZ2VyU3RhdGU9Zn1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGMuZGlzcGF0Y2hdfVxuZnVuY3Rpb24gcmcoYSxiLGMsZCl7YT17dGFnOmEsY3JlYXRlOmIsZGVzdHJveTpjLGRlcHM6ZCxuZXh0Om51bGx9O251bGw9PT1hZz8oYWc9e2xhc3RFZmZlY3Q6bnVsbH0sYWcubGFzdEVmZmVjdD1hLm5leHQ9YSk6KGI9YWcubGFzdEVmZmVjdCxudWxsPT09Yj9hZy5sYXN0RWZmZWN0PWEubmV4dD1hOihjPWIubmV4dCxiLm5leHQ9YSxhLm5leHQ9YyxhZy5sYXN0RWZmZWN0PWEpKTtyZXR1cm4gYX1mdW5jdGlvbiBzZyhhLGIsYyxkKXt2YXIgZT1tZygpO2JnfD1hO2UubWVtb2l6ZWRTdGF0ZT1yZyhiLGMsdm9pZCAwLHZvaWQgMD09PWQ/bnVsbDpkKX1cbmZ1bmN0aW9uIHRnKGEsYixjLGQpe3ZhciBlPW5nKCk7ZD12b2lkIDA9PT1kP251bGw6ZDt2YXIgZj12b2lkIDA7aWYobnVsbCE9PU8pe3ZhciBnPU8ubWVtb2l6ZWRTdGF0ZTtmPWcuZGVzdHJveTtpZihudWxsIT09ZCYmZ2coZCxnLmRlcHMpKXtyZyhOZixjLGYsZCk7cmV0dXJufX1iZ3w9YTtlLm1lbW9pemVkU3RhdGU9cmcoYixjLGYsZCl9ZnVuY3Rpb24gdWcoYSxiKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYT1hKCksYihhKSxmdW5jdGlvbigpe2IobnVsbCl9O2lmKG51bGwhPT1iJiZ2b2lkIDAhPT1iKXJldHVybiBhPWEoKSxiLmN1cnJlbnQ9YSxmdW5jdGlvbigpe2IuY3VycmVudD1udWxsfX1mdW5jdGlvbiB2Zygpe31cbmZ1bmN0aW9uIHdnKGEsYixjKXsyNT5lZz92b2lkIDA6eChcIjMwMVwiKTt2YXIgZD1hLmFsdGVybmF0ZTtpZihhPT09WGZ8fG51bGwhPT1kJiZkPT09WGYpaWYoY2c9ITAsYT17ZXhwaXJhdGlvblRpbWU6V2YsYWN0aW9uOmMsZWFnZXJSZWR1Y2VyOm51bGwsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH0sbnVsbD09PWRnJiYoZGc9bmV3IE1hcCksYz1kZy5nZXQoYiksdm9pZCAwPT09YylkZy5zZXQoYixhKTtlbHNle2ZvcihiPWM7bnVsbCE9PWIubmV4dDspYj1iLm5leHQ7Yi5uZXh0PWF9ZWxzZXtvZigpO3ZhciBlPWxmKCk7ZT1tZihlLGEpO3ZhciBmPXtleHBpcmF0aW9uVGltZTplLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9LGc9Yi5sYXN0O2lmKG51bGw9PT1nKWYubmV4dD1mO2Vsc2V7dmFyIGg9Zy5uZXh0O251bGwhPT1oJiYoZi5uZXh0PWgpO2cubmV4dD1mfWIubGFzdD1mO2lmKDA9PT1hLmV4cGlyYXRpb25UaW1lJiYobnVsbD09PVxuZHx8MD09PWQuZXhwaXJhdGlvblRpbWUpJiYoZD1iLmVhZ2VyUmVkdWNlcixudWxsIT09ZCkpdHJ5e3ZhciBsPWIuZWFnZXJTdGF0ZSxrPWQobCxjKTtmLmVhZ2VyUmVkdWNlcj1kO2YuZWFnZXJTdGF0ZT1rO2lmKGJkKGssbCkpcmV0dXJufWNhdGNoKG0pe31maW5hbGx5e31xZihhLGUpfX1cbnZhciBrZz17cmVhZENvbnRleHQ6TSx1c2VDYWxsYmFjazpmZyx1c2VDb250ZXh0OmZnLHVzZUVmZmVjdDpmZyx1c2VJbXBlcmF0aXZlSGFuZGxlOmZnLHVzZUxheW91dEVmZmVjdDpmZyx1c2VNZW1vOmZnLHVzZVJlZHVjZXI6ZmcsdXNlUmVmOmZnLHVzZVN0YXRlOmZnLHVzZURlYnVnVmFsdWU6Zmd9LGlnPXtyZWFkQ29udGV4dDpNLHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7bWcoKS5tZW1vaXplZFN0YXRlPVthLHZvaWQgMD09PWI/bnVsbDpiXTtyZXR1cm4gYX0sdXNlQ29udGV4dDpNLHVzZUVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBzZyg1MTYsVWZ8VGYsYSxiKX0sdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIHNnKDQsUGZ8U2YsdWcuYmluZChudWxsLGIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBzZyg0LFBmfFNmLGEsYil9LFxudXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPW1nKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPW1nKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPWQucXVldWU9e2xhc3Q6bnVsbCxkaXNwYXRjaDpudWxsLGVhZ2VyUmVkdWNlcjphLGVhZ2VyU3RhdGU6Yn07YT1hLmRpc3BhdGNoPXdnLmJpbmQobnVsbCxYZixhKTtyZXR1cm5bZC5tZW1vaXplZFN0YXRlLGFdfSx1c2VSZWY6ZnVuY3Rpb24oYSl7dmFyIGI9bWcoKTthPXtjdXJyZW50OmF9O3JldHVybiBiLm1lbW9pemVkU3RhdGU9YX0sdXNlU3RhdGU6ZnVuY3Rpb24oYSl7dmFyIGI9bWcoKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSYmKGE9YSgpKTtiLm1lbW9pemVkU3RhdGU9Yi5iYXNlU3RhdGU9YTthPWIucXVldWU9e2xhc3Q6bnVsbCxkaXNwYXRjaDpudWxsLGVhZ2VyUmVkdWNlcjpvZyxcbmVhZ2VyU3RhdGU6YX07YT1hLmRpc3BhdGNoPXdnLmJpbmQobnVsbCxYZixhKTtyZXR1cm5bYi5tZW1vaXplZFN0YXRlLGFdfSx1c2VEZWJ1Z1ZhbHVlOnZnfSxqZz17cmVhZENvbnRleHQ6TSx1c2VDYWxsYmFjazpmdW5jdGlvbihhLGIpe3ZhciBjPW5nKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZnZyhiLGRbMV0pKXJldHVybiBkWzBdO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX0sdXNlQ29udGV4dDpNLHVzZUVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiB0Zyg1MTYsVWZ8VGYsYSxiKX0sdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIHRnKDQsUGZ8U2YsdWcuYmluZChudWxsLGIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiB0Zyg0LFBmfFNmLGEsYil9LFxudXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPW5nKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZnZyhiLGRbMV0pKXJldHVybiBkWzBdO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX0sdXNlUmVkdWNlcjpwZyx1c2VSZWY6ZnVuY3Rpb24oKXtyZXR1cm4gbmcoKS5tZW1vaXplZFN0YXRlfSx1c2VTdGF0ZTpmdW5jdGlvbihhKXtyZXR1cm4gcGcob2csYSl9LHVzZURlYnVnVmFsdWU6dmd9LHhnPW51bGwseWc9bnVsbCx6Zz0hMTtcbmZ1bmN0aW9uIEFnKGEsYil7dmFyIGM9Syg1LG51bGwsbnVsbCwwKTtjLmVsZW1lbnRUeXBlPVwiREVMRVRFRFwiO2MudHlwZT1cIkRFTEVURURcIjtjLnN0YXRlTm9kZT1iO2MucmV0dXJuPWE7Yy5lZmZlY3RUYWc9ODtudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfWZ1bmN0aW9uIEJnKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgMTM6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBDZyhhKXtpZih6Zyl7dmFyIGI9eWc7aWYoYil7dmFyIGM9YjtpZighQmcoYSxiKSl7Yj1EZShjKTtpZighYnx8IUJnKGEsYikpe2EuZWZmZWN0VGFnfD0yO3pnPSExO3hnPWE7cmV0dXJufUFnKHhnLGMpfXhnPWE7eWc9RWUoYil9ZWxzZSBhLmVmZmVjdFRhZ3w9Mix6Zz0hMSx4Zz1hfX1mdW5jdGlvbiBEZyhhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWcmJjE4IT09YS50YWc7KWE9YS5yZXR1cm47eGc9YX1mdW5jdGlvbiBFZyhhKXtpZihhIT09eGcpcmV0dXJuITE7aWYoIXpnKXJldHVybiBEZyhhKSx6Zz0hMCwhMTt2YXIgYj1hLnR5cGU7aWYoNSE9PWEudGFnfHxcImhlYWRcIiE9PWImJlwiYm9keVwiIT09YiYmIXhlKGIsYS5tZW1vaXplZFByb3BzKSlmb3IoYj15ZztiOylBZyhhLGIpLGI9RGUoYik7RGcoYSk7eWc9eGc/RGUoYS5zdGF0ZU5vZGUpOm51bGw7cmV0dXJuITB9ZnVuY3Rpb24gRmcoKXt5Zz14Zz1udWxsO3pnPSExfVxudmFyIEdnPVRiLlJlYWN0Q3VycmVudE93bmVyLHFnPSExO2Z1bmN0aW9uIFMoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT9FZihiLG51bGwsYyxkKTpEZihiLGEuY2hpbGQsYyxkKX1mdW5jdGlvbiBIZyhhLGIsYyxkLGUpe2M9Yy5yZW5kZXI7dmFyIGY9Yi5yZWY7SWcoYixlKTtkPWhnKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXFnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksSmcoYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1MoYSxiLGQsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBLZyhhLGIsYyxkLGUsZil7aWYobnVsbD09PWEpe3ZhciBnPWMudHlwZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmIVZlKGcpJiZ2b2lkIDA9PT1nLmRlZmF1bHRQcm9wcyYmbnVsbD09PWMuY29tcGFyZSYmdm9pZCAwPT09Yy5kZWZhdWx0UHJvcHMpcmV0dXJuIGIudGFnPTE1LGIudHlwZT1nLExnKGEsYixnLGQsZSxmKTthPVllKGMudHlwZSxudWxsLGQsbnVsbCxiLm1vZGUsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfWc9YS5jaGlsZDtpZihlPGYmJihlPWcubWVtb2l6ZWRQcm9wcyxjPWMuY29tcGFyZSxjPW51bGwhPT1jP2M6ZGQsYyhlLGQpJiZhLnJlZj09PWIucmVmKSlyZXR1cm4gSmcoYSxiLGYpO2IuZWZmZWN0VGFnfD0xO2E9WGUoZyxkLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1cbmZ1bmN0aW9uIExnKGEsYixjLGQsZSxmKXtyZXR1cm4gbnVsbCE9PWEmJmRkKGEubWVtb2l6ZWRQcm9wcyxkKSYmYS5yZWY9PT1iLnJlZiYmKHFnPSExLGU8Zik/SmcoYSxiLGYpOk1nKGEsYixjLGQsZil9ZnVuY3Rpb24gTmcoYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5lZmZlY3RUYWd8PTEyOH1mdW5jdGlvbiBNZyhhLGIsYyxkLGUpe3ZhciBmPUooYyk/SWU6SC5jdXJyZW50O2Y9SmUoYixmKTtJZyhiLGUpO2M9aGcoYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhcWcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmVmZmVjdFRhZyY9LTUxNyxhLmV4cGlyYXRpb25UaW1lPD1lJiYoYS5leHBpcmF0aW9uVGltZT0wKSxKZyhhLGIsZSk7Yi5lZmZlY3RUYWd8PTE7UyhhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIE9nKGEsYixjLGQsZSl7aWYoSihjKSl7dmFyIGY9ITA7T2UoYil9ZWxzZSBmPSExO0lnKGIsZSk7aWYobnVsbD09PWIuc3RhdGVOb2RlKW51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSx2ZihiLGMsZCxlKSx4ZihiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgbD1nLmNvbnRleHQsaz1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWs/az1NKGspOihrPUooYyk/SWU6SC5jdXJyZW50LGs9SmUoYixrKSk7dmFyIG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMscD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGU7cHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxsIT09aykmJndmKGIsZyxkLGspO1BnPSExO3ZhciB0PWIubWVtb2l6ZWRTdGF0ZTtsPWcuc3RhdGU9dDt2YXIgQT1iLnVwZGF0ZVF1ZXVlO251bGwhPT1BJiYoeWYoYixBLGQsZyxlKSxsPWIubWVtb2l6ZWRTdGF0ZSk7aCE9PWR8fHQhPT1sfHxJLmN1cnJlbnR8fFBnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKGtmKGIsYyxtLGQpLGw9Yi5tZW1vaXplZFN0YXRlKSwoaD1QZ3x8dWYoYixjLGgsZCx0LGwsaykpPyhwfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnQmJmcuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXG5nLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCkpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9bCksZy5wcm9wcz1kLGcuc3RhdGU9bCxnLmNvbnRleHQ9ayxkPWgpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxkPSExKX1lbHNlIGc9Yi5zdGF0ZU5vZGUsaD1iLm1lbW9pemVkUHJvcHMsZy5wcm9wcz1iLnR5cGU9PT1iLmVsZW1lbnRUeXBlP2g6TChiLnR5cGUsaCksbD1nLmNvbnRleHQsaz1jLmNvbnRleHRUeXBlLFwib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWs/az1NKGspOihrPUooYyk/SWU6SC5jdXJyZW50LGs9SmUoYixrKSksbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcywocD1cImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGwhPT1rKSYmd2YoYixnLGQsayksUGc9ITEsbD1iLm1lbW9pemVkU3RhdGUsdD1nLnN0YXRlPWwsQT1iLnVwZGF0ZVF1ZXVlLG51bGwhPT1BJiYoeWYoYixBLGQsZyxlKSx0PWIubWVtb2l6ZWRTdGF0ZSksaCE9PWR8fGwhPT10fHxJLmN1cnJlbnR8fFBnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKGtmKGIsYyxtLGQpLHQ9Yi5tZW1vaXplZFN0YXRlKSwobT1QZ3x8dWYoYixjLGgsZCxsLHQsaykpPyhwfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZXx8KFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQsdCxrKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLHQsaykpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZWZmZWN0VGFnfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZsPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZsPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPVxudCksZy5wcm9wcz1kLGcuc3RhdGU9dCxnLmNvbnRleHQ9ayxkPW0pOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJmw9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJmw9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxkPSExKTtyZXR1cm4gUWcoYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24gUWcoYSxiLGMsZCxlLGYpe05nKGEsYik7dmFyIGc9MCE9PShiLmVmZmVjdFRhZyY2NCk7aWYoIWQmJiFnKXJldHVybiBlJiZQZShiLGMsITEpLEpnKGEsYixmKTtkPWIuc3RhdGVOb2RlO0dnLmN1cnJlbnQ9Yjt2YXIgaD1nJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I/bnVsbDpkLnJlbmRlcigpO2IuZWZmZWN0VGFnfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPURmKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9RGYoYixudWxsLGgsZikpOlMoYSxiLGgsZik7Yi5tZW1vaXplZFN0YXRlPWQuc3RhdGU7ZSYmUGUoYixjLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiBSZyhhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P01lKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJk1lKGEsYi5jb250ZXh0LCExKTtKZihhLGIuY29udGFpbmVySW5mbyl9XG5mdW5jdGlvbiBTZyhhLGIsYyl7dmFyIGQ9Yi5tb2RlLGU9Yi5wZW5kaW5nUHJvcHMsZj1iLm1lbW9pemVkU3RhdGU7aWYoMD09PShiLmVmZmVjdFRhZyY2NCkpe2Y9bnVsbDt2YXIgZz0hMX1lbHNlIGY9e3RpbWVkT3V0QXQ6bnVsbCE9PWY/Zi50aW1lZE91dEF0OjB9LGc9ITAsYi5lZmZlY3RUYWcmPS02NTtpZihudWxsPT09YSlpZihnKXt2YXIgaD1lLmZhbGxiYWNrO2E9WmUobnVsbCxkLDAsbnVsbCk7MD09PShiLm1vZGUmMSkmJihhLmNoaWxkPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkKTtkPVplKGgsZCxjLG51bGwpO2Euc2libGluZz1kO2M9YTtjLnJldHVybj1kLnJldHVybj1ifWVsc2UgYz1kPUVmKGIsbnVsbCxlLmNoaWxkcmVuLGMpO2Vsc2UgbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZT8oZD1hLmNoaWxkLGg9ZC5zaWJsaW5nLGc/KGM9ZS5mYWxsYmFjayxlPVhlKGQsZC5wZW5kaW5nUHJvcHMsMCksMD09PShiLm1vZGUmMSkmJihnPW51bGwhPT1cbmIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZyE9PWQuY2hpbGQmJihlLmNoaWxkPWcpKSxkPWUuc2libGluZz1YZShoLGMsaC5leHBpcmF0aW9uVGltZSksYz1lLGUuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGMucmV0dXJuPWQucmV0dXJuPWIpOmM9ZD1EZihiLGQuY2hpbGQsZS5jaGlsZHJlbixjKSk6KGg9YS5jaGlsZCxnPyhnPWUuZmFsbGJhY2ssZT1aZShudWxsLGQsMCxudWxsKSxlLmNoaWxkPWgsMD09PShiLm1vZGUmMSkmJihlLmNoaWxkPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkKSxkPWUuc2libGluZz1aZShnLGQsYyxudWxsKSxkLmVmZmVjdFRhZ3w9MixjPWUsZS5jaGlsZEV4cGlyYXRpb25UaW1lPTAsYy5yZXR1cm49ZC5yZXR1cm49Yik6ZD1jPURmKGIsaCxlLmNoaWxkcmVuLGMpKSxiLnN0YXRlTm9kZT1hLnN0YXRlTm9kZTtiLm1lbW9pemVkU3RhdGU9ZjtiLmNoaWxkPWM7cmV0dXJuIGR9XG5mdW5jdGlvbiBKZyhhLGIsYyl7bnVsbCE9PWEmJihiLmNvbnRleHREZXBlbmRlbmNpZXM9YS5jb250ZXh0RGVwZW5kZW5jaWVzKTtpZihiLmNoaWxkRXhwaXJhdGlvblRpbWU8YylyZXR1cm4gbnVsbDtudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQ/eChcIjE1M1wiKTp2b2lkIDA7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDtjPVhlKGEsYS5wZW5kaW5nUHJvcHMsYS5leHBpcmF0aW9uVGltZSk7Yi5jaGlsZD1jO2ZvcihjLnJldHVybj1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPVhlKGEsYS5wZW5kaW5nUHJvcHMsYS5leHBpcmF0aW9uVGltZSksYy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIFRnKGEsYixjKXt2YXIgZD1iLmV4cGlyYXRpb25UaW1lO2lmKG51bGwhPT1hKWlmKGEubWVtb2l6ZWRQcm9wcyE9PWIucGVuZGluZ1Byb3BzfHxJLmN1cnJlbnQpcWc9ITA7ZWxzZXtpZihkPGMpe3FnPSExO3N3aXRjaChiLnRhZyl7Y2FzZSAzOlJnKGIpO0ZnKCk7YnJlYWs7Y2FzZSA1OkxmKGIpO2JyZWFrO2Nhc2UgMTpKKGIudHlwZSkmJk9lKGIpO2JyZWFrO2Nhc2UgNDpKZihiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2JyZWFrO2Nhc2UgMTA6VWcoYixiLm1lbW9pemVkUHJvcHMudmFsdWUpO2JyZWFrO2Nhc2UgMTM6aWYobnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSl7ZD1iLmNoaWxkLmNoaWxkRXhwaXJhdGlvblRpbWU7aWYoMCE9PWQmJmQ+PWMpcmV0dXJuIFNnKGEsYixjKTtiPUpnKGEsYixjKTtyZXR1cm4gbnVsbCE9PWI/Yi5zaWJsaW5nOm51bGx9fXJldHVybiBKZyhhLGIsYyl9fWVsc2UgcWc9ITE7Yi5leHBpcmF0aW9uVGltZT0wO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmQ9XG5iLmVsZW1lbnRUeXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTthPWIucGVuZGluZ1Byb3BzO3ZhciBlPUplKGIsSC5jdXJyZW50KTtJZyhiLGMpO2U9aGcobnVsbCxiLGQsYSxlLGMpO2IuZWZmZWN0VGFnfD0xO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZil7Yi50YWc9MTtsZygpO2lmKEooZCkpe3ZhciBmPSEwO09lKGIpfWVsc2UgZj0hMTtiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsO3ZhciBnPWQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiZrZihiLGQsZyxhKTtlLnVwZGF0ZXI9dGY7Yi5zdGF0ZU5vZGU9ZTtlLl9yZWFjdEludGVybmFsRmliZXI9Yjt4ZihiLGQsYSxjKTtiPVFnKG51bGwsYixkLCEwLGYsXG5jKX1lbHNlIGIudGFnPTAsUyhudWxsLGIsZSxjKSxiPWIuY2hpbGQ7cmV0dXJuIGI7Y2FzZSAxNjplPWIuZWxlbWVudFR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpO2Y9Yi5wZW5kaW5nUHJvcHM7YT1oZihlKTtiLnR5cGU9YTtlPWIudGFnPVdlKGEpO2Y9TChhLGYpO2c9dm9pZCAwO3N3aXRjaChlKXtjYXNlIDA6Zz1NZyhudWxsLGIsYSxmLGMpO2JyZWFrO2Nhc2UgMTpnPU9nKG51bGwsYixhLGYsYyk7YnJlYWs7Y2FzZSAxMTpnPUhnKG51bGwsYixhLGYsYyk7YnJlYWs7Y2FzZSAxNDpnPUtnKG51bGwsYixhLEwoYS50eXBlLGYpLGQsYyk7YnJlYWs7ZGVmYXVsdDp4KFwiMzA2XCIsYSxcIlwiKX1yZXR1cm4gZztjYXNlIDA6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOkwoZCxlKSxNZyhhLGIsZCxlLGMpO2Nhc2UgMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxcbmU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpMKGQsZSksT2coYSxiLGQsZSxjKTtjYXNlIDM6UmcoYik7ZD1iLnVwZGF0ZVF1ZXVlO251bGw9PT1kP3goXCIyODJcIik6dm9pZCAwO2U9Yi5tZW1vaXplZFN0YXRlO2U9bnVsbCE9PWU/ZS5lbGVtZW50Om51bGw7eWYoYixkLGIucGVuZGluZ1Byb3BzLG51bGwsYyk7ZD1iLm1lbW9pemVkU3RhdGUuZWxlbWVudDtpZihkPT09ZSlGZygpLGI9SmcoYSxiLGMpO2Vsc2V7ZT1iLnN0YXRlTm9kZTtpZihlPShudWxsPT09YXx8bnVsbD09PWEuY2hpbGQpJiZlLmh5ZHJhdGUpeWc9RWUoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbykseGc9YixlPXpnPSEwO2U/KGIuZWZmZWN0VGFnfD0yLGIuY2hpbGQ9RWYoYixudWxsLGQsYykpOihTKGEsYixkLGMpLEZnKCkpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDU6cmV0dXJuIExmKGIpLG51bGw9PT1hJiZDZyhiKSxkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGY9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOm51bGwsXG5nPWUuY2hpbGRyZW4seGUoZCxlKT9nPW51bGw6bnVsbCE9PWYmJnhlKGQsZikmJihiLmVmZmVjdFRhZ3w9MTYpLE5nKGEsYiksMSE9PWMmJmIubW9kZSYxJiZlLmhpZGRlbj8oYi5leHBpcmF0aW9uVGltZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU9MSxiPW51bGwpOihTKGEsYixnLGMpLGI9Yi5jaGlsZCksYjtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZDZyhiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIFNnKGEsYixjKTtjYXNlIDQ6cmV0dXJuIEpmKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPURmKGIsbnVsbCxkLGMpOlMoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDExOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpMKGQsZSksSGcoYSxiLGQsZSxjKTtjYXNlIDc6cmV0dXJuIFMoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBTKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixcbmMpLGIuY2hpbGQ7Y2FzZSAxMjpyZXR1cm4gUyhhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEwOmE6e2Q9Yi50eXBlLl9jb250ZXh0O2U9Yi5wZW5kaW5nUHJvcHM7Zz1iLm1lbW9pemVkUHJvcHM7Zj1lLnZhbHVlO1VnKGIsZik7aWYobnVsbCE9PWcpe3ZhciBoPWcudmFsdWU7Zj1iZChoLGYpPzA6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhoLGYpOjEwNzM3NDE4MjMpfDA7aWYoMD09PWYpe2lmKGcuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhSS5jdXJyZW50KXtiPUpnKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihoPWIuY2hpbGQsbnVsbCE9PWgmJihoLnJldHVybj1iKTtudWxsIT09aDspe3ZhciBsPWguY29udGV4dERlcGVuZGVuY2llcztpZihudWxsIT09bCl7Zz1oLmNoaWxkO2Zvcih2YXIgaz1sLmZpcnN0O251bGwhPT1rOyl7aWYoay5jb250ZXh0PT09ZCYmMCE9PVxuKGsub2JzZXJ2ZWRCaXRzJmYpKXsxPT09aC50YWcmJihrPW5mKGMpLGsudGFnPXNmLHBmKGgsaykpO2guZXhwaXJhdGlvblRpbWU8YyYmKGguZXhwaXJhdGlvblRpbWU9Yyk7az1oLmFsdGVybmF0ZTtudWxsIT09ayYmay5leHBpcmF0aW9uVGltZTxjJiYoay5leHBpcmF0aW9uVGltZT1jKTtrPWM7Zm9yKHZhciBtPWgucmV0dXJuO251bGwhPT1tOyl7dmFyIHA9bS5hbHRlcm5hdGU7aWYobS5jaGlsZEV4cGlyYXRpb25UaW1lPGspbS5jaGlsZEV4cGlyYXRpb25UaW1lPWssbnVsbCE9PXAmJnAuY2hpbGRFeHBpcmF0aW9uVGltZTxrJiYocC5jaGlsZEV4cGlyYXRpb25UaW1lPWspO2Vsc2UgaWYobnVsbCE9PXAmJnAuY2hpbGRFeHBpcmF0aW9uVGltZTxrKXAuY2hpbGRFeHBpcmF0aW9uVGltZT1rO2Vsc2UgYnJlYWs7bT1tLnJldHVybn1sLmV4cGlyYXRpb25UaW1lPGMmJihsLmV4cGlyYXRpb25UaW1lPWMpO2JyZWFrfWs9ay5uZXh0fX1lbHNlIGc9MTA9PT1oLnRhZz9oLnR5cGU9PT1iLnR5cGU/XG5udWxsOmguY2hpbGQ6aC5jaGlsZDtpZihudWxsIT09ZylnLnJldHVybj1oO2Vsc2UgZm9yKGc9aDtudWxsIT09Zzspe2lmKGc9PT1iKXtnPW51bGw7YnJlYWt9aD1nLnNpYmxpbmc7aWYobnVsbCE9PWgpe2gucmV0dXJuPWcucmV0dXJuO2c9aDticmVha31nPWcucmV0dXJufWg9Z319UyhhLGIsZS5jaGlsZHJlbixjKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA5OnJldHVybiBlPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGQ9Zi5jaGlsZHJlbixJZyhiLGMpLGU9TShlLGYudW5zdGFibGVfb2JzZXJ2ZWRCaXRzKSxkPWQoZSksYi5lZmZlY3RUYWd8PTEsUyhhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTQ6cmV0dXJuIGU9Yi50eXBlLGY9TChlLGIucGVuZGluZ1Byb3BzKSxmPUwoZS50eXBlLGYpLEtnKGEsYixlLGYsZCxjKTtjYXNlIDE1OnJldHVybiBMZyhhLGIsYi50eXBlLGIucGVuZGluZ1Byb3BzLGQsYyk7Y2FzZSAxNzpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1cbmQ/ZTpMKGQsZSksbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpLGIudGFnPTEsSihkKT8oYT0hMCxPZShiKSk6YT0hMSxJZyhiLGMpLHZmKGIsZCxlLGMpLHhmKGIsZCxlLGMpLFFnKG51bGwsYixkLCEwLGEsYyl9eChcIjE1NlwiKX12YXIgVmc9e2N1cnJlbnQ6bnVsbH0sV2c9bnVsbCxYZz1udWxsLFlnPW51bGw7ZnVuY3Rpb24gVWcoYSxiKXt2YXIgYz1hLnR5cGUuX2NvbnRleHQ7RyhWZyxjLl9jdXJyZW50VmFsdWUsYSk7Yy5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gWmcoYSl7dmFyIGI9VmcuY3VycmVudDtGKFZnLGEpO2EudHlwZS5fY29udGV4dC5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gSWcoYSxiKXtXZz1hO1lnPVhnPW51bGw7dmFyIGM9YS5jb250ZXh0RGVwZW5kZW5jaWVzO251bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPj1iJiYocWc9ITApO2EuY29udGV4dERlcGVuZGVuY2llcz1udWxsfVxuZnVuY3Rpb24gTShhLGIpe2lmKFlnIT09YSYmITEhPT1iJiYwIT09Yil7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBifHwxMDczNzQxODIzPT09YilZZz1hLGI9MTA3Mzc0MTgyMztiPXtjb250ZXh0OmEsb2JzZXJ2ZWRCaXRzOmIsbmV4dDpudWxsfTtudWxsPT09WGc/KG51bGw9PT1XZz94KFwiMzA4XCIpOnZvaWQgMCxYZz1iLFdnLmNvbnRleHREZXBlbmRlbmNpZXM9e2ZpcnN0OmIsZXhwaXJhdGlvblRpbWU6MH0pOlhnPVhnLm5leHQ9Yn1yZXR1cm4gYS5fY3VycmVudFZhbHVlfXZhciAkZz0wLHJmPTEsc2Y9MixhaD0zLFBnPSExO2Z1bmN0aW9uIGJoKGEpe3JldHVybntiYXNlU3RhdGU6YSxmaXJzdFVwZGF0ZTpudWxsLGxhc3RVcGRhdGU6bnVsbCxmaXJzdENhcHR1cmVkVXBkYXRlOm51bGwsbGFzdENhcHR1cmVkVXBkYXRlOm51bGwsZmlyc3RFZmZlY3Q6bnVsbCxsYXN0RWZmZWN0Om51bGwsZmlyc3RDYXB0dXJlZEVmZmVjdDpudWxsLGxhc3RDYXB0dXJlZEVmZmVjdDpudWxsfX1cbmZ1bmN0aW9uIGNoKGEpe3JldHVybntiYXNlU3RhdGU6YS5iYXNlU3RhdGUsZmlyc3RVcGRhdGU6YS5maXJzdFVwZGF0ZSxsYXN0VXBkYXRlOmEubGFzdFVwZGF0ZSxmaXJzdENhcHR1cmVkVXBkYXRlOm51bGwsbGFzdENhcHR1cmVkVXBkYXRlOm51bGwsZmlyc3RFZmZlY3Q6bnVsbCxsYXN0RWZmZWN0Om51bGwsZmlyc3RDYXB0dXJlZEVmZmVjdDpudWxsLGxhc3RDYXB0dXJlZEVmZmVjdDpudWxsfX1mdW5jdGlvbiBuZihhKXtyZXR1cm57ZXhwaXJhdGlvblRpbWU6YSx0YWc6JGcscGF5bG9hZDpudWxsLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsLG5leHRFZmZlY3Q6bnVsbH19ZnVuY3Rpb24gZGgoYSxiKXtudWxsPT09YS5sYXN0VXBkYXRlP2EuZmlyc3RVcGRhdGU9YS5sYXN0VXBkYXRlPWI6KGEubGFzdFVwZGF0ZS5uZXh0PWIsYS5sYXN0VXBkYXRlPWIpfVxuZnVuY3Rpb24gcGYoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtpZihudWxsPT09Yyl7dmFyIGQ9YS51cGRhdGVRdWV1ZTt2YXIgZT1udWxsO251bGw9PT1kJiYoZD1hLnVwZGF0ZVF1ZXVlPWJoKGEubWVtb2l6ZWRTdGF0ZSkpfWVsc2UgZD1hLnVwZGF0ZVF1ZXVlLGU9Yy51cGRhdGVRdWV1ZSxudWxsPT09ZD9udWxsPT09ZT8oZD1hLnVwZGF0ZVF1ZXVlPWJoKGEubWVtb2l6ZWRTdGF0ZSksZT1jLnVwZGF0ZVF1ZXVlPWJoKGMubWVtb2l6ZWRTdGF0ZSkpOmQ9YS51cGRhdGVRdWV1ZT1jaChlKTpudWxsPT09ZSYmKGU9Yy51cGRhdGVRdWV1ZT1jaChkKSk7bnVsbD09PWV8fGQ9PT1lP2RoKGQsYik6bnVsbD09PWQubGFzdFVwZGF0ZXx8bnVsbD09PWUubGFzdFVwZGF0ZT8oZGgoZCxiKSxkaChlLGIpKTooZGgoZCxiKSxlLmxhc3RVcGRhdGU9Yil9XG5mdW5jdGlvbiBlaChhLGIpe3ZhciBjPWEudXBkYXRlUXVldWU7Yz1udWxsPT09Yz9hLnVwZGF0ZVF1ZXVlPWJoKGEubWVtb2l6ZWRTdGF0ZSk6ZmgoYSxjKTtudWxsPT09Yy5sYXN0Q2FwdHVyZWRVcGRhdGU/Yy5maXJzdENhcHR1cmVkVXBkYXRlPWMubGFzdENhcHR1cmVkVXBkYXRlPWI6KGMubGFzdENhcHR1cmVkVXBkYXRlLm5leHQ9YixjLmxhc3RDYXB0dXJlZFVwZGF0ZT1iKX1mdW5jdGlvbiBmaChhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZiPT09Yy51cGRhdGVRdWV1ZSYmKGI9YS51cGRhdGVRdWV1ZT1jaChiKSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiBnaChhLGIsYyxkLGUsZil7c3dpdGNoKGMudGFnKXtjYXNlIHJmOnJldHVybiBhPWMucGF5bG9hZCxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hLmNhbGwoZixkLGUpOmE7Y2FzZSBhaDphLmVmZmVjdFRhZz1hLmVmZmVjdFRhZyYtMjA0OXw2NDtjYXNlICRnOmE9Yy5wYXlsb2FkO2U9XCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YS5jYWxsKGYsZCxlKTphO2lmKG51bGw9PT1lfHx2b2lkIDA9PT1lKWJyZWFrO3JldHVybiBuKHt9LGQsZSk7Y2FzZSBzZjpQZz0hMH1yZXR1cm4gZH1cbmZ1bmN0aW9uIHlmKGEsYixjLGQsZSl7UGc9ITE7Yj1maChhLGIpO2Zvcih2YXIgZj1iLmJhc2VTdGF0ZSxnPW51bGwsaD0wLGw9Yi5maXJzdFVwZGF0ZSxrPWY7bnVsbCE9PWw7KXt2YXIgbT1sLmV4cGlyYXRpb25UaW1lO208ZT8obnVsbD09PWcmJihnPWwsZj1rKSxoPG0mJihoPW0pKTooaz1naChhLGIsbCxrLGMsZCksbnVsbCE9PWwuY2FsbGJhY2smJihhLmVmZmVjdFRhZ3w9MzIsbC5uZXh0RWZmZWN0PW51bGwsbnVsbD09PWIubGFzdEVmZmVjdD9iLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1sOihiLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1sLGIubGFzdEVmZmVjdD1sKSkpO2w9bC5uZXh0fW09bnVsbDtmb3IobD1iLmZpcnN0Q2FwdHVyZWRVcGRhdGU7bnVsbCE9PWw7KXt2YXIgcD1sLmV4cGlyYXRpb25UaW1lO3A8ZT8obnVsbD09PW0mJihtPWwsbnVsbD09PWcmJihmPWspKSxoPHAmJihoPXApKTooaz1naChhLGIsbCxrLGMsZCksbnVsbCE9PWwuY2FsbGJhY2smJihhLmVmZmVjdFRhZ3w9XG4zMixsLm5leHRFZmZlY3Q9bnVsbCxudWxsPT09Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q/Yi5maXJzdENhcHR1cmVkRWZmZWN0PWIubGFzdENhcHR1cmVkRWZmZWN0PWw6KGIubGFzdENhcHR1cmVkRWZmZWN0Lm5leHRFZmZlY3Q9bCxiLmxhc3RDYXB0dXJlZEVmZmVjdD1sKSkpO2w9bC5uZXh0fW51bGw9PT1nJiYoYi5sYXN0VXBkYXRlPW51bGwpO251bGw9PT1tP2IubGFzdENhcHR1cmVkVXBkYXRlPW51bGw6YS5lZmZlY3RUYWd8PTMyO251bGw9PT1nJiZudWxsPT09bSYmKGY9ayk7Yi5iYXNlU3RhdGU9ZjtiLmZpcnN0VXBkYXRlPWc7Yi5maXJzdENhcHR1cmVkVXBkYXRlPW07YS5leHBpcmF0aW9uVGltZT1oO2EubWVtb2l6ZWRTdGF0ZT1rfVxuZnVuY3Rpb24gaGgoYSxiLGMpe251bGwhPT1iLmZpcnN0Q2FwdHVyZWRVcGRhdGUmJihudWxsIT09Yi5sYXN0VXBkYXRlJiYoYi5sYXN0VXBkYXRlLm5leHQ9Yi5maXJzdENhcHR1cmVkVXBkYXRlLGIubGFzdFVwZGF0ZT1iLmxhc3RDYXB0dXJlZFVwZGF0ZSksYi5maXJzdENhcHR1cmVkVXBkYXRlPWIubGFzdENhcHR1cmVkVXBkYXRlPW51bGwpO2loKGIuZmlyc3RFZmZlY3QsYyk7Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9bnVsbDtpaChiLmZpcnN0Q2FwdHVyZWRFZmZlY3QsYyk7Yi5maXJzdENhcHR1cmVkRWZmZWN0PWIubGFzdENhcHR1cmVkRWZmZWN0PW51bGx9ZnVuY3Rpb24gaWgoYSxiKXtmb3IoO251bGwhPT1hOyl7dmFyIGM9YS5jYWxsYmFjaztpZihudWxsIT09Yyl7YS5jYWxsYmFjaz1udWxsO3ZhciBkPWI7XCJmdW5jdGlvblwiIT09dHlwZW9mIGM/eChcIjE5MVwiLGMpOnZvaWQgMDtjLmNhbGwoZCl9YT1hLm5leHRFZmZlY3R9fVxuZnVuY3Rpb24gamgoYSxiKXtyZXR1cm57dmFsdWU6YSxzb3VyY2U6YixzdGFjazpqYyhiKX19ZnVuY3Rpb24ga2goYSl7YS5lZmZlY3RUYWd8PTR9dmFyIGxoPXZvaWQgMCxtaD12b2lkIDAsbmg9dm9pZCAwLG9oPXZvaWQgMDtsaD1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1iLmNoaWxkO251bGwhPT1jOyl7aWYoNT09PWMudGFnfHw2PT09Yy50YWcpYS5hcHBlbmRDaGlsZChjLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09Yy50YWcmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YilicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YilyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX07bWg9ZnVuY3Rpb24oKXt9O1xubmg9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1hLm1lbW9pemVkUHJvcHM7aWYoZiE9PWQpe3ZhciBnPWIuc3RhdGVOb2RlO0lmKE4uY3VycmVudCk7YT1udWxsO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpmPXZjKGcsZik7ZD12YyhnLGQpO2E9W107YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmY9JGQoZyxmKTtkPSRkKGcsZCk7YT1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6Zj1uKHt9LGYse3ZhbHVlOnZvaWQgMH0pO2Q9bih7fSxkLHt2YWx1ZTp2b2lkIDB9KTthPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmY9YmUoZyxmKTtkPWJlKGcsZCk7YT1bXTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBmLm9uQ2xpY2smJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihnLm9uY2xpY2s9dGUpfXFlKGMsZCk7Zz1jPXZvaWQgMDt2YXIgaD1udWxsO2ZvcihjIGluIGYpaWYoIWQuaGFzT3duUHJvcGVydHkoYykmJmYuaGFzT3duUHJvcGVydHkoYykmJm51bGwhPWZbY10paWYoXCJzdHlsZVwiPT09XG5jKXt2YXIgbD1mW2NdO2ZvcihnIGluIGwpbC5oYXNPd25Qcm9wZXJ0eShnKSYmKGh8fChoPXt9KSxoW2ddPVwiXCIpfWVsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1jJiZcImNoaWxkcmVuXCIhPT1jJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09YyYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWMmJlwiYXV0b0ZvY3VzXCIhPT1jJiYocmEuaGFzT3duUHJvcGVydHkoYyk/YXx8KGE9W10pOihhPWF8fFtdKS5wdXNoKGMsbnVsbCkpO2ZvcihjIGluIGQpe3ZhciBrPWRbY107bD1udWxsIT1mP2ZbY106dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkoYykmJmshPT1sJiYobnVsbCE9a3x8bnVsbCE9bCkpaWYoXCJzdHlsZVwiPT09YylpZihsKXtmb3IoZyBpbiBsKSFsLmhhc093blByb3BlcnR5KGcpfHxrJiZrLmhhc093blByb3BlcnR5KGcpfHwoaHx8KGg9e30pLGhbZ109XCJcIik7Zm9yKGcgaW4gaylrLmhhc093blByb3BlcnR5KGcpJiZsW2ddIT09a1tnXSYmKGh8fFxuKGg9e30pLGhbZ109a1tnXSl9ZWxzZSBofHwoYXx8KGE9W10pLGEucHVzaChjLGgpKSxoPWs7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWM/KGs9az9rLl9faHRtbDp2b2lkIDAsbD1sP2wuX19odG1sOnZvaWQgMCxudWxsIT1rJiZsIT09ayYmKGE9YXx8W10pLnB1c2goYyxcIlwiK2spKTpcImNoaWxkcmVuXCI9PT1jP2w9PT1rfHxcInN0cmluZ1wiIT09dHlwZW9mIGsmJlwibnVtYmVyXCIhPT10eXBlb2Yga3x8KGE9YXx8W10pLnB1c2goYyxcIlwiK2spOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1jJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09YyYmKHJhLmhhc093blByb3BlcnR5KGMpPyhudWxsIT1rJiZzZShlLGMpLGF8fGw9PT1rfHwoYT1bXSkpOihhPWF8fFtdKS5wdXNoKGMsaykpfWgmJihhPWF8fFtdKS5wdXNoKFwic3R5bGVcIixoKTtlPWE7KGIudXBkYXRlUXVldWU9ZSkmJmtoKGIpfX07b2g9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJmtoKGIpfTtcbnZhciBwaD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha1NldD9XZWFrU2V0OlNldDtmdW5jdGlvbiBxaChhLGIpe3ZhciBjPWIuc291cmNlLGQ9Yi5zdGFjaztudWxsPT09ZCYmbnVsbCE9PWMmJihkPWpjKGMpKTtudWxsIT09YyYmaWMoYy50eXBlKTtiPWIudmFsdWU7bnVsbCE9PWEmJjE9PT1hLnRhZyYmaWMoYS50eXBlKTt0cnl7Y29uc29sZS5lcnJvcihiKX1jYXRjaChlKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgZTt9KX19ZnVuY3Rpb24gcmgoYSl7dmFyIGI9YS5yZWY7aWYobnVsbCE9PWIpaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpdHJ5e2IobnVsbCl9Y2F0Y2goYyl7c2goYSxjKX1lbHNlIGIuY3VycmVudD1udWxsfVxuZnVuY3Rpb24gdGgoYSxiLGMpe2M9Yy51cGRhdGVRdWV1ZTtjPW51bGwhPT1jP2MubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1jKXt2YXIgZD1jPWMubmV4dDtkb3tpZigoZC50YWcmYSkhPT1OZil7dmFyIGU9ZC5kZXN0cm95O2QuZGVzdHJveT12b2lkIDA7dm9pZCAwIT09ZSYmZSgpfShkLnRhZyZiKSE9PU5mJiYoZT1kLmNyZWF0ZSxkLmRlc3Ryb3k9ZSgpKTtkPWQubmV4dH13aGlsZShkIT09Yyl9fVxuZnVuY3Rpb24gdWgoYSxiKXtmb3IodmFyIGM9YTs7KXtpZig1PT09Yy50YWcpe3ZhciBkPWMuc3RhdGVOb2RlO2lmKGIpZC5zdHlsZS5kaXNwbGF5PVwibm9uZVwiO2Vsc2V7ZD1jLnN0YXRlTm9kZTt2YXIgZT1jLm1lbW9pemVkUHJvcHMuc3R5bGU7ZT12b2lkIDAhPT1lJiZudWxsIT09ZSYmZS5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/ZS5kaXNwbGF5Om51bGw7ZC5zdHlsZS5kaXNwbGF5PW5lKFwiZGlzcGxheVwiLGUpfX1lbHNlIGlmKDY9PT1jLnRhZyljLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yj9cIlwiOmMubWVtb2l6ZWRQcm9wcztlbHNlIGlmKDEzPT09Yy50YWcmJm51bGwhPT1jLm1lbW9pemVkU3RhdGUpe2Q9Yy5jaGlsZC5zaWJsaW5nO2QucmV0dXJuPWM7Yz1kO2NvbnRpbnVlfWVsc2UgaWYobnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8XG5jLnJldHVybj09PWEpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319XG5mdW5jdGlvbiB2aChhKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgUmUmJlJlKGEpO3N3aXRjaChhLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OnZhciBiPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWImJihiPWIubGFzdEVmZmVjdCxudWxsIT09Yikpe3ZhciBjPWI9Yi5uZXh0O2Rve3ZhciBkPWMuZGVzdHJveTtpZih2b2lkIDAhPT1kKXt2YXIgZT1hO3RyeXtkKCl9Y2F0Y2goZil7c2goZSxmKX19Yz1jLm5leHR9d2hpbGUoYyE9PWIpfWJyZWFrO2Nhc2UgMTpyaChhKTtiPWEuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxVbm1vdW50KXRyeXtiLnByb3BzPWEubWVtb2l6ZWRQcm9wcyxiLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSxiLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2goZil7c2goYSxmKX1icmVhaztjYXNlIDU6cmgoYSk7YnJlYWs7Y2FzZSA0OndoKGEpfX1cbmZ1bmN0aW9uIHhoKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfVxuZnVuY3Rpb24geWgoYSl7YTp7Zm9yKHZhciBiPWEucmV0dXJuO251bGwhPT1iOyl7aWYoeGgoYikpe3ZhciBjPWI7YnJlYWsgYX1iPWIucmV0dXJufXgoXCIxNjBcIik7Yz12b2lkIDB9dmFyIGQ9Yj12b2lkIDA7c3dpdGNoKGMudGFnKXtjYXNlIDU6Yj1jLnN0YXRlTm9kZTtkPSExO2JyZWFrO2Nhc2UgMzpiPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7ZGVmYXVsdDp4KFwiMTYxXCIpfWMuZWZmZWN0VGFnJjE2JiYoa2UoYixcIlwiKSxjLmVmZmVjdFRhZyY9LTE3KTthOmI6Zm9yKGM9YTs7KXtmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fHhoKGMucmV0dXJuKSl7Yz1udWxsO2JyZWFrIGF9Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2ZvcihjPWMuc2libGluZzs1IT09Yy50YWcmJjYhPT1jLnRhZyYmMTghPT1jLnRhZzspe2lmKGMuZWZmZWN0VGFnJlxuMiljb250aW51ZSBiO2lmKG51bGw9PT1jLmNoaWxkfHw0PT09Yy50YWcpY29udGludWUgYjtlbHNlIGMuY2hpbGQucmV0dXJuPWMsYz1jLmNoaWxkfWlmKCEoYy5lZmZlY3RUYWcmMikpe2M9Yy5zdGF0ZU5vZGU7YnJlYWsgYX19Zm9yKHZhciBlPWE7Oyl7aWYoNT09PWUudGFnfHw2PT09ZS50YWcpaWYoYylpZihkKXt2YXIgZj1iLGc9ZS5zdGF0ZU5vZGUsaD1jOzg9PT1mLm5vZGVUeXBlP2YucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZyxoKTpmLmluc2VydEJlZm9yZShnLGgpfWVsc2UgYi5pbnNlcnRCZWZvcmUoZS5zdGF0ZU5vZGUsYyk7ZWxzZSBkPyhnPWIsaD1lLnN0YXRlTm9kZSw4PT09Zy5ub2RlVHlwZT8oZj1nLnBhcmVudE5vZGUsZi5pbnNlcnRCZWZvcmUoaCxnKSk6KGY9ZyxmLmFwcGVuZENoaWxkKGgpKSxnPWcuX3JlYWN0Um9vdENvbnRhaW5lcixudWxsIT09ZyYmdm9pZCAwIT09Z3x8bnVsbCE9PWYub25jbGlja3x8KGYub25jbGljaz10ZSkpOmIuYXBwZW5kQ2hpbGQoZS5zdGF0ZU5vZGUpO1xuZWxzZSBpZig0IT09ZS50YWcmJm51bGwhPT1lLmNoaWxkKXtlLmNoaWxkLnJldHVybj1lO2U9ZS5jaGlsZDtjb250aW51ZX1pZihlPT09YSlicmVhaztmb3IoO251bGw9PT1lLnNpYmxpbmc7KXtpZihudWxsPT09ZS5yZXR1cm58fGUucmV0dXJuPT09YSlyZXR1cm47ZT1lLnJldHVybn1lLnNpYmxpbmcucmV0dXJuPWUucmV0dXJuO2U9ZS5zaWJsaW5nfX1cbmZ1bmN0aW9uIHdoKGEpe2Zvcih2YXIgYj1hLGM9ITEsZD12b2lkIDAsZT12b2lkIDA7Oyl7aWYoIWMpe2M9Yi5yZXR1cm47YTpmb3IoOzspe251bGw9PT1jP3goXCIxNjBcIik6dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSA1OmQ9Yy5zdGF0ZU5vZGU7ZT0hMTticmVhayBhO2Nhc2UgMzpkPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZT0hMDticmVhayBhO2Nhc2UgNDpkPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZT0hMDticmVhayBhfWM9Yy5yZXR1cm59Yz0hMH1pZig1PT09Yi50YWd8fDY9PT1iLnRhZyl7YTpmb3IodmFyIGY9YixnPWY7OylpZih2aChnKSxudWxsIT09Zy5jaGlsZCYmNCE9PWcudGFnKWcuY2hpbGQucmV0dXJuPWcsZz1nLmNoaWxkO2Vsc2V7aWYoZz09PWYpYnJlYWs7Zm9yKDtudWxsPT09Zy5zaWJsaW5nOyl7aWYobnVsbD09PWcucmV0dXJufHxnLnJldHVybj09PWYpYnJlYWsgYTtnPWcucmV0dXJufWcuc2libGluZy5yZXR1cm49Zy5yZXR1cm47Zz1nLnNpYmxpbmd9ZT9cbihmPWQsZz1iLnN0YXRlTm9kZSw4PT09Zi5ub2RlVHlwZT9mLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZyk6Zi5yZW1vdmVDaGlsZChnKSk6ZC5yZW1vdmVDaGlsZChiLnN0YXRlTm9kZSl9ZWxzZSBpZig0PT09Yi50YWcpe2lmKG51bGwhPT1iLmNoaWxkKXtkPWIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZT0hMDtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX19ZWxzZSBpZih2aChiKSxudWxsIT09Yi5jaGlsZCl7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuO2I9Yi5yZXR1cm47ND09PWIudGFnJiYoYz0hMSl9Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319XG5mdW5jdGlvbiB6aChhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OnRoKFBmLFFmLGIpO2JyZWFrO2Nhc2UgMTpicmVhaztjYXNlIDU6dmFyIGM9Yi5zdGF0ZU5vZGU7aWYobnVsbCE9Yyl7dmFyIGQ9Yi5tZW1vaXplZFByb3BzO2E9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmQ7dmFyIGU9Yi50eXBlLGY9Yi51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPW51bGw7bnVsbCE9PWYmJkNlKGMsZixlLGEsZCxiKX1icmVhaztjYXNlIDY6bnVsbD09PWIuc3RhdGVOb2RlP3goXCIxNjJcIik6dm9pZCAwO2Iuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iLm1lbW9pemVkUHJvcHM7YnJlYWs7Y2FzZSAzOmJyZWFrO2Nhc2UgMTI6YnJlYWs7Y2FzZSAxMzpjPWIubWVtb2l6ZWRTdGF0ZTtkPXZvaWQgMDthPWI7bnVsbD09PWM/ZD0hMTooZD0hMCxhPWIuY2hpbGQsMD09PWMudGltZWRPdXRBdCYmKGMudGltZWRPdXRBdD1sZigpKSk7bnVsbCE9PWEmJnVoKGEsZCk7Yz1cbmIudXBkYXRlUXVldWU7aWYobnVsbCE9PWMpe2IudXBkYXRlUXVldWU9bnVsbDt2YXIgZz1iLnN0YXRlTm9kZTtudWxsPT09ZyYmKGc9Yi5zdGF0ZU5vZGU9bmV3IHBoKTtjLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGM9QWguYmluZChudWxsLGIsYSk7Zy5oYXMoYSl8fChnLmFkZChhKSxhLnRoZW4oYyxjKSl9KX1icmVhaztjYXNlIDE3OmJyZWFrO2RlZmF1bHQ6eChcIjE2M1wiKX19dmFyIEJoPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwO2Z1bmN0aW9uIENoKGEsYixjKXtjPW5mKGMpO2MudGFnPWFoO2MucGF5bG9hZD17ZWxlbWVudDpudWxsfTt2YXIgZD1iLnZhbHVlO2MuY2FsbGJhY2s9ZnVuY3Rpb24oKXtEaChkKTtxaChhLGIpfTtyZXR1cm4gY31cbmZ1bmN0aW9uIEVoKGEsYixjKXtjPW5mKGMpO2MudGFnPWFoO3ZhciBkPWEudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBlPWIudmFsdWU7Yy5wYXlsb2FkPWZ1bmN0aW9uKCl7cmV0dXJuIGQoZSl9fXZhciBmPWEuc3RhdGVOb2RlO251bGwhPT1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5jb21wb25lbnREaWRDYXRjaCYmKGMuY2FsbGJhY2s9ZnVuY3Rpb24oKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCYmKG51bGw9PT1GaD9GaD1uZXcgU2V0KFt0aGlzXSk6RmguYWRkKHRoaXMpKTt2YXIgYz1iLnZhbHVlLGU9Yi5zdGFjaztxaChhLGIpO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYyx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWU/ZTpcIlwifSl9KTtyZXR1cm4gY31cbmZ1bmN0aW9uIEdoKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAxOkooYS50eXBlKSYmS2UoYSk7dmFyIGI9YS5lZmZlY3RUYWc7cmV0dXJuIGImMjA0OD8oYS5lZmZlY3RUYWc9YiYtMjA0OXw2NCxhKTpudWxsO2Nhc2UgMzpyZXR1cm4gS2YoYSksTGUoYSksYj1hLmVmZmVjdFRhZywwIT09KGImNjQpP3goXCIyODVcIik6dm9pZCAwLGEuZWZmZWN0VGFnPWImLTIwNDl8NjQsYTtjYXNlIDU6cmV0dXJuIE1mKGEpLG51bGw7Y2FzZSAxMzpyZXR1cm4gYj1hLmVmZmVjdFRhZyxiJjIwNDg/KGEuZWZmZWN0VGFnPWImLTIwNDl8NjQsYSk6bnVsbDtjYXNlIDE4OnJldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gS2YoYSksbnVsbDtjYXNlIDEwOnJldHVybiBaZyhhKSxudWxsO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyIEhoPVRiLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsSWg9VGIuUmVhY3RDdXJyZW50T3duZXIsSmg9MTA3Mzc0MTgyMixLaD0hMSxUPW51bGwsTGg9bnVsbCxVPTAsTWg9LTEsTmg9ITEsVj1udWxsLE9oPSExLFBoPW51bGwsUWg9bnVsbCxSaD1udWxsLEZoPW51bGw7ZnVuY3Rpb24gU2goKXtpZihudWxsIT09VClmb3IodmFyIGE9VC5yZXR1cm47bnVsbCE9PWE7KXt2YXIgYj1hO3N3aXRjaChiLnRhZyl7Y2FzZSAxOnZhciBjPWIudHlwZS5jaGlsZENvbnRleHRUeXBlcztudWxsIT09YyYmdm9pZCAwIT09YyYmS2UoYik7YnJlYWs7Y2FzZSAzOktmKGIpO0xlKGIpO2JyZWFrO2Nhc2UgNTpNZihiKTticmVhaztjYXNlIDQ6S2YoYik7YnJlYWs7Y2FzZSAxMDpaZyhiKX1hPWEucmV0dXJufUxoPW51bGw7VT0wO01oPS0xO05oPSExO1Q9bnVsbH1cbmZ1bmN0aW9uIFRoKCl7Zm9yKDtudWxsIT09Vjspe3ZhciBhPVYuZWZmZWN0VGFnO2EmMTYmJmtlKFYuc3RhdGVOb2RlLFwiXCIpO2lmKGEmMTI4KXt2YXIgYj1WLmFsdGVybmF0ZTtudWxsIT09YiYmKGI9Yi5yZWYsbnVsbCE9PWImJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKG51bGwpOmIuY3VycmVudD1udWxsKSl9c3dpdGNoKGEmMTQpe2Nhc2UgMjp5aChWKTtWLmVmZmVjdFRhZyY9LTM7YnJlYWs7Y2FzZSA2OnloKFYpO1YuZWZmZWN0VGFnJj0tMzt6aChWLmFsdGVybmF0ZSxWKTticmVhaztjYXNlIDQ6emgoVi5hbHRlcm5hdGUsVik7YnJlYWs7Y2FzZSA4OmE9Vix3aChhKSxhLnJldHVybj1udWxsLGEuY2hpbGQ9bnVsbCxhLm1lbW9pemVkU3RhdGU9bnVsbCxhLnVwZGF0ZVF1ZXVlPW51bGwsYT1hLmFsdGVybmF0ZSxudWxsIT09YSYmKGEucmV0dXJuPW51bGwsYS5jaGlsZD1udWxsLGEubWVtb2l6ZWRTdGF0ZT1udWxsLGEudXBkYXRlUXVldWU9bnVsbCl9Vj1WLm5leHRFZmZlY3R9fVxuZnVuY3Rpb24gVWgoKXtmb3IoO251bGwhPT1WOyl7aWYoVi5lZmZlY3RUYWcmMjU2KWE6e3ZhciBhPVYuYWx0ZXJuYXRlLGI9Vjtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6dGgoT2YsTmYsYik7YnJlYWsgYTtjYXNlIDE6aWYoYi5lZmZlY3RUYWcmMjU2JiZudWxsIT09YSl7dmFyIGM9YS5tZW1vaXplZFByb3BzLGQ9YS5tZW1vaXplZFN0YXRlO2E9Yi5zdGF0ZU5vZGU7Yj1hLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKGIuZWxlbWVudFR5cGU9PT1iLnR5cGU/YzpMKGIudHlwZSxjKSxkKTthLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlPWJ9YnJlYWsgYTtjYXNlIDM6Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6Y2FzZSAxNzpicmVhayBhO2RlZmF1bHQ6eChcIjE2M1wiKX19Vj1WLm5leHRFZmZlY3R9fVxuZnVuY3Rpb24gVmgoYSxiKXtmb3IoO251bGwhPT1WOyl7dmFyIGM9Vi5lZmZlY3RUYWc7aWYoYyYzNil7dmFyIGQ9Vi5hbHRlcm5hdGUsZT1WLGY9Yjtzd2l0Y2goZS50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6dGgoUmYsU2YsZSk7YnJlYWs7Y2FzZSAxOnZhciBnPWUuc3RhdGVOb2RlO2lmKGUuZWZmZWN0VGFnJjQpaWYobnVsbD09PWQpZy5jb21wb25lbnREaWRNb3VudCgpO2Vsc2V7dmFyIGg9ZS5lbGVtZW50VHlwZT09PWUudHlwZT9kLm1lbW9pemVkUHJvcHM6TChlLnR5cGUsZC5tZW1vaXplZFByb3BzKTtnLmNvbXBvbmVudERpZFVwZGF0ZShoLGQubWVtb2l6ZWRTdGF0ZSxnLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKX1kPWUudXBkYXRlUXVldWU7bnVsbCE9PWQmJmhoKGUsZCxnLGYpO2JyZWFrO2Nhc2UgMzpkPWUudXBkYXRlUXVldWU7aWYobnVsbCE9PWQpe2c9bnVsbDtpZihudWxsIT09ZS5jaGlsZClzd2l0Y2goZS5jaGlsZC50YWcpe2Nhc2UgNTpnPVxuZS5jaGlsZC5zdGF0ZU5vZGU7YnJlYWs7Y2FzZSAxOmc9ZS5jaGlsZC5zdGF0ZU5vZGV9aGgoZSxkLGcsZil9YnJlYWs7Y2FzZSA1OmY9ZS5zdGF0ZU5vZGU7bnVsbD09PWQmJmUuZWZmZWN0VGFnJjQmJndlKGUudHlwZSxlLm1lbW9pemVkUHJvcHMpJiZmLmZvY3VzKCk7YnJlYWs7Y2FzZSA2OmJyZWFrO2Nhc2UgNDpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgMTM6YnJlYWs7Y2FzZSAxNzpicmVhaztkZWZhdWx0OngoXCIxNjNcIil9fWMmMTI4JiYoZT1WLnJlZixudWxsIT09ZSYmKGY9Vi5zdGF0ZU5vZGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGU/ZShmKTplLmN1cnJlbnQ9ZikpO2MmNTEyJiYoUGg9YSk7Vj1WLm5leHRFZmZlY3R9fVxuZnVuY3Rpb24gV2goYSxiKXtSaD1RaD1QaD1udWxsO3ZhciBjPVc7Vz0hMDtkb3tpZihiLmVmZmVjdFRhZyY1MTIpe3ZhciBkPSExLGU9dm9pZCAwO3RyeXt2YXIgZj1iO3RoKFVmLE5mLGYpO3RoKE5mLFRmLGYpfWNhdGNoKGcpe2Q9ITAsZT1nfWQmJnNoKGIsZSl9Yj1iLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PWIpO1c9YztjPWEuZXhwaXJhdGlvblRpbWU7MCE9PWMmJlhoKGEsYyk7WHx8V3x8WWgoMTA3Mzc0MTgyMywhMSl9ZnVuY3Rpb24gb2YoKXtudWxsIT09UWgmJkJlKFFoKTtudWxsIT09UmgmJlJoKCl9XG5mdW5jdGlvbiBaaChhLGIpe09oPUtoPSEwO2EuY3VycmVudD09PWI/eChcIjE3N1wiKTp2b2lkIDA7dmFyIGM9YS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU7MD09PWM/eChcIjI2MVwiKTp2b2lkIDA7YS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9MDt2YXIgZD1iLmV4cGlyYXRpb25UaW1lLGU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lO2VmKGEsZT5kP2U6ZCk7SWguY3VycmVudD1udWxsO2Q9dm9pZCAwOzE8Yi5lZmZlY3RUYWc/bnVsbCE9PWIubGFzdEVmZmVjdD8oYi5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YixkPWIuZmlyc3RFZmZlY3QpOmQ9YjpkPWIuZmlyc3RFZmZlY3Q7dWU9QmQ7dmU9UGQoKTtCZD0hMTtmb3IoVj1kO251bGwhPT1WOyl7ZT0hMTt2YXIgZj12b2lkIDA7dHJ5e1VoKCl9Y2F0Y2goaCl7ZT0hMCxmPWh9ZSYmKG51bGw9PT1WP3goXCIxNzhcIik6dm9pZCAwLHNoKFYsZiksbnVsbCE9PVYmJihWPVYubmV4dEVmZmVjdCkpfWZvcihWPWQ7bnVsbCE9PVY7KXtlPSExO1xuZj12b2lkIDA7dHJ5e1RoKCl9Y2F0Y2goaCl7ZT0hMCxmPWh9ZSYmKG51bGw9PT1WP3goXCIxNzhcIik6dm9pZCAwLHNoKFYsZiksbnVsbCE9PVYmJihWPVYubmV4dEVmZmVjdCkpfVFkKHZlKTt2ZT1udWxsO0JkPSEhdWU7dWU9bnVsbDthLmN1cnJlbnQ9Yjtmb3IoVj1kO251bGwhPT1WOyl7ZT0hMTtmPXZvaWQgMDt0cnl7VmgoYSxjKX1jYXRjaChoKXtlPSEwLGY9aH1lJiYobnVsbD09PVY/eChcIjE3OFwiKTp2b2lkIDAsc2goVixmKSxudWxsIT09ViYmKFY9Vi5uZXh0RWZmZWN0KSl9aWYobnVsbCE9PWQmJm51bGwhPT1QaCl7dmFyIGc9V2guYmluZChudWxsLGEsZCk7UWg9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkoci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxmdW5jdGlvbigpe3JldHVybiBBZShnKX0pO1JoPWd9S2g9T2g9ITE7XCJmdW5jdGlvblwiPT09dHlwZW9mIFFlJiZRZShiLnN0YXRlTm9kZSk7Yz1iLmV4cGlyYXRpb25UaW1lO2I9Yi5jaGlsZEV4cGlyYXRpb25UaW1lO2I9XG5iPmM/YjpjOzA9PT1iJiYoRmg9bnVsbCk7JGgoYSxiKX1cbmZ1bmN0aW9uIGFpKGEpe2Zvcig7Oyl7dmFyIGI9YS5hbHRlcm5hdGUsYz1hLnJldHVybixkPWEuc2libGluZztpZigwPT09KGEuZWZmZWN0VGFnJjEwMjQpKXtUPWE7YTp7dmFyIGU9YjtiPWE7dmFyIGY9VTt2YXIgZz1iLnBlbmRpbmdQcm9wcztzd2l0Y2goYi50YWcpe2Nhc2UgMjpicmVhaztjYXNlIDE2OmJyZWFrO2Nhc2UgMTU6Y2FzZSAwOmJyZWFrO2Nhc2UgMTpKKGIudHlwZSkmJktlKGIpO2JyZWFrO2Nhc2UgMzpLZihiKTtMZShiKTtnPWIuc3RhdGVOb2RlO2cucGVuZGluZ0NvbnRleHQmJihnLmNvbnRleHQ9Zy5wZW5kaW5nQ29udGV4dCxnLnBlbmRpbmdDb250ZXh0PW51bGwpO2lmKG51bGw9PT1lfHxudWxsPT09ZS5jaGlsZClFZyhiKSxiLmVmZmVjdFRhZyY9LTM7bWgoYik7YnJlYWs7Y2FzZSA1Ok1mKGIpO3ZhciBoPUlmKEhmLmN1cnJlbnQpO2Y9Yi50eXBlO2lmKG51bGwhPT1lJiZudWxsIT1iLnN0YXRlTm9kZSluaChlLGIsZixnLGgpLGUucmVmIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9XG4xMjgpO2Vsc2UgaWYoZyl7dmFyIGw9SWYoTi5jdXJyZW50KTtpZihFZyhiKSl7Zz1iO2U9Zy5zdGF0ZU5vZGU7dmFyIGs9Zy50eXBlLG09Zy5tZW1vaXplZFByb3BzLHA9aDtlW0ZhXT1nO2VbR2FdPW07Zj12b2lkIDA7aD1rO3N3aXRjaChoKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOkUoXCJsb2FkXCIsZSk7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGs9MDtrPGFiLmxlbmd0aDtrKyspRShhYltrXSxlKTticmVhaztjYXNlIFwic291cmNlXCI6RShcImVycm9yXCIsZSk7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RShcImVycm9yXCIsZSk7RShcImxvYWRcIixlKTticmVhaztjYXNlIFwiZm9ybVwiOkUoXCJyZXNldFwiLGUpO0UoXCJzdWJtaXRcIixlKTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkUoXCJ0b2dnbGVcIixlKTticmVhaztjYXNlIFwiaW5wdXRcIjp3YyhlLG0pO0UoXCJpbnZhbGlkXCIsZSk7c2UocCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjplLl93cmFwcGVyU3RhdGU9XG57d2FzTXVsdGlwbGU6ISFtLm11bHRpcGxlfTtFKFwiaW52YWxpZFwiLGUpO3NlKHAsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpjZShlLG0pLEUoXCJpbnZhbGlkXCIsZSksc2UocCxcIm9uQ2hhbmdlXCIpfXFlKGgsbSk7az1udWxsO2ZvcihmIGluIG0pbS5oYXNPd25Qcm9wZXJ0eShmKSYmKGw9bVtmXSxcImNoaWxkcmVuXCI9PT1mP1wic3RyaW5nXCI9PT10eXBlb2YgbD9lLnRleHRDb250ZW50IT09bCYmKGs9W1wiY2hpbGRyZW5cIixsXSk6XCJudW1iZXJcIj09PXR5cGVvZiBsJiZlLnRleHRDb250ZW50IT09XCJcIitsJiYoaz1bXCJjaGlsZHJlblwiLFwiXCIrbF0pOnJhLmhhc093blByb3BlcnR5KGYpJiZudWxsIT1sJiZzZShwLGYpKTtzd2l0Y2goaCl7Y2FzZSBcImlucHV0XCI6UmIoZSk7QWMoZSxtLCEwKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpSYihlKTtlZShlLG0pO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgbS5vbkNsaWNrJiZcbihlLm9uY2xpY2s9dGUpfWY9aztnLnVwZGF0ZVF1ZXVlPWY7Zz1udWxsIT09Zj8hMDohMTtnJiZraChiKX1lbHNle209YjtlPWY7cD1nO2s9OT09PWgubm9kZVR5cGU/aDpoLm93bmVyRG9jdW1lbnQ7bD09PWZlLmh0bWwmJihsPWdlKGUpKTtsPT09ZmUuaHRtbD9cInNjcmlwdFwiPT09ZT8oZT1rLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksZS5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixrPWUucmVtb3ZlQ2hpbGQoZS5maXJzdENoaWxkKSk6XCJzdHJpbmdcIj09PXR5cGVvZiBwLmlzP2s9ay5jcmVhdGVFbGVtZW50KGUse2lzOnAuaXN9KTooaz1rLmNyZWF0ZUVsZW1lbnQoZSksXCJzZWxlY3RcIj09PWUmJnAubXVsdGlwbGUmJihrLm11bHRpcGxlPSEwKSk6az1rLmNyZWF0ZUVsZW1lbnROUyhsLGUpO2U9aztlW0ZhXT1tO2VbR2FdPWc7bGgoZSxiLCExLCExKTtwPWU7az1mO209Zzt2YXIgdD1oLEE9cmUoayxtKTtzd2l0Y2goayl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpFKFwibG9hZFwiLFxucCk7aD1tO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihoPTA7aDxhYi5sZW5ndGg7aCsrKUUoYWJbaF0scCk7aD1tO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpFKFwiZXJyb3JcIixwKTtoPW07YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RShcImVycm9yXCIscCk7RShcImxvYWRcIixwKTtoPW07YnJlYWs7Y2FzZSBcImZvcm1cIjpFKFwicmVzZXRcIixwKTtFKFwic3VibWl0XCIscCk7aD1tO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RShcInRvZ2dsZVwiLHApO2g9bTticmVhaztjYXNlIFwiaW5wdXRcIjp3YyhwLG0pO2g9dmMocCxtKTtFKFwiaW52YWxpZFwiLHApO3NlKHQsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwib3B0aW9uXCI6aD0kZChwLG0pO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpwLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhbS5tdWx0aXBsZX07aD1uKHt9LG0se3ZhbHVlOnZvaWQgMH0pO0UoXCJpbnZhbGlkXCIscCk7c2UodCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmNlKHAsXG5tKTtoPWJlKHAsbSk7RShcImludmFsaWRcIixwKTtzZSh0LFwib25DaGFuZ2VcIik7YnJlYWs7ZGVmYXVsdDpoPW19cWUoayxoKTtsPXZvaWQgMDt2YXIgdj1rLFI9cCx1PWg7Zm9yKGwgaW4gdSlpZih1Lmhhc093blByb3BlcnR5KGwpKXt2YXIgcT11W2xdO1wic3R5bGVcIj09PWw/b2UoUixxKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1sPyhxPXE/cS5fX2h0bWw6dm9pZCAwLG51bGwhPXEmJmplKFIscSkpOlwiY2hpbGRyZW5cIj09PWw/XCJzdHJpbmdcIj09PXR5cGVvZiBxPyhcInRleHRhcmVhXCIhPT12fHxcIlwiIT09cSkmJmtlKFIscSk6XCJudW1iZXJcIj09PXR5cGVvZiBxJiZrZShSLFwiXCIrcSk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWwmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1sJiZcImF1dG9Gb2N1c1wiIT09bCYmKHJhLmhhc093blByb3BlcnR5KGwpP251bGwhPXEmJnNlKHQsbCk6bnVsbCE9cSYmdGMoUixsLHEsQSkpfXN3aXRjaChrKXtjYXNlIFwiaW5wdXRcIjpSYihwKTtcbkFjKHAsbSwhMSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6UmIocCk7ZWUocCxtKTticmVhaztjYXNlIFwib3B0aW9uXCI6bnVsbCE9bS52YWx1ZSYmcC5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIrdWMobS52YWx1ZSkpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpoPXA7aC5tdWx0aXBsZT0hIW0ubXVsdGlwbGU7cD1tLnZhbHVlO251bGwhPXA/YWUoaCwhIW0ubXVsdGlwbGUscCwhMSk6bnVsbCE9bS5kZWZhdWx0VmFsdWUmJmFlKGgsISFtLm11bHRpcGxlLG0uZGVmYXVsdFZhbHVlLCEwKTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBoLm9uQ2xpY2smJihwLm9uY2xpY2s9dGUpfShnPXdlKGYsZykpJiZraChiKTtiLnN0YXRlTm9kZT1lfW51bGwhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpfWVsc2UgbnVsbD09PWIuc3RhdGVOb2RlP3goXCIxNjZcIik6dm9pZCAwO2JyZWFrO2Nhc2UgNjplJiZudWxsIT1iLnN0YXRlTm9kZT9vaChlLGIsZS5tZW1vaXplZFByb3BzLGcpOihcInN0cmluZ1wiIT09XG50eXBlb2YgZyYmKG51bGw9PT1iLnN0YXRlTm9kZT94KFwiMTY2XCIpOnZvaWQgMCksZT1JZihIZi5jdXJyZW50KSxJZihOLmN1cnJlbnQpLEVnKGIpPyhnPWIsZj1nLnN0YXRlTm9kZSxlPWcubWVtb2l6ZWRQcm9wcyxmW0ZhXT1nLChnPWYubm9kZVZhbHVlIT09ZSkmJmtoKGIpKTooZj1iLGc9KDk9PT1lLm5vZGVUeXBlP2U6ZS5vd25lckRvY3VtZW50KS5jcmVhdGVUZXh0Tm9kZShnKSxnW0ZhXT1iLGYuc3RhdGVOb2RlPWcpKTticmVhaztjYXNlIDExOmJyZWFrO2Nhc2UgMTM6Zz1iLm1lbW9pemVkU3RhdGU7aWYoMCE9PShiLmVmZmVjdFRhZyY2NCkpe2IuZXhwaXJhdGlvblRpbWU9ZjtUPWI7YnJlYWsgYX1nPW51bGwhPT1nO2Y9bnVsbCE9PWUmJm51bGwhPT1lLm1lbW9pemVkU3RhdGU7bnVsbCE9PWUmJiFnJiZmJiYoZT1lLmNoaWxkLnNpYmxpbmcsbnVsbCE9PWUmJihoPWIuZmlyc3RFZmZlY3QsbnVsbCE9PWg/KGIuZmlyc3RFZmZlY3Q9ZSxlLm5leHRFZmZlY3Q9aCk6KGIuZmlyc3RFZmZlY3Q9XG5iLmxhc3RFZmZlY3Q9ZSxlLm5leHRFZmZlY3Q9bnVsbCksZS5lZmZlY3RUYWc9OCkpO2lmKGd8fGYpYi5lZmZlY3RUYWd8PTQ7YnJlYWs7Y2FzZSA3OmJyZWFrO2Nhc2UgODpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgNDpLZihiKTttaChiKTticmVhaztjYXNlIDEwOlpnKGIpO2JyZWFrO2Nhc2UgOTpicmVhaztjYXNlIDE0OmJyZWFrO2Nhc2UgMTc6SihiLnR5cGUpJiZLZShiKTticmVhaztjYXNlIDE4OmJyZWFrO2RlZmF1bHQ6eChcIjE1NlwiKX1UPW51bGx9Yj1hO2lmKDE9PT1VfHwxIT09Yi5jaGlsZEV4cGlyYXRpb25UaW1lKXtnPTA7Zm9yKGY9Yi5jaGlsZDtudWxsIT09ZjspZT1mLmV4cGlyYXRpb25UaW1lLGg9Zi5jaGlsZEV4cGlyYXRpb25UaW1lLGU+ZyYmKGc9ZSksaD5nJiYoZz1oKSxmPWYuc2libGluZztiLmNoaWxkRXhwaXJhdGlvblRpbWU9Z31pZihudWxsIT09VClyZXR1cm4gVDtudWxsIT09YyYmMD09PShjLmVmZmVjdFRhZyYxMDI0KSYmKG51bGw9PT1jLmZpcnN0RWZmZWN0JiZcbihjLmZpcnN0RWZmZWN0PWEuZmlyc3RFZmZlY3QpLG51bGwhPT1hLmxhc3RFZmZlY3QmJihudWxsIT09Yy5sYXN0RWZmZWN0JiYoYy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YS5maXJzdEVmZmVjdCksYy5sYXN0RWZmZWN0PWEubGFzdEVmZmVjdCksMTxhLmVmZmVjdFRhZyYmKG51bGwhPT1jLmxhc3RFZmZlY3Q/Yy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YTpjLmZpcnN0RWZmZWN0PWEsYy5sYXN0RWZmZWN0PWEpKX1lbHNle2E9R2goYSxVKTtpZihudWxsIT09YSlyZXR1cm4gYS5lZmZlY3RUYWcmPTEwMjMsYTtudWxsIT09YyYmKGMuZmlyc3RFZmZlY3Q9Yy5sYXN0RWZmZWN0PW51bGwsYy5lZmZlY3RUYWd8PTEwMjQpfWlmKG51bGwhPT1kKXJldHVybiBkO2lmKG51bGwhPT1jKWE9YztlbHNlIGJyZWFrfXJldHVybiBudWxsfVxuZnVuY3Rpb24gYmkoYSl7dmFyIGI9VGcoYS5hbHRlcm5hdGUsYSxVKTthLm1lbW9pemVkUHJvcHM9YS5wZW5kaW5nUHJvcHM7bnVsbD09PWImJihiPWFpKGEpKTtJaC5jdXJyZW50PW51bGw7cmV0dXJuIGJ9XG5mdW5jdGlvbiBjaShhLGIpe0toP3goXCIyNDNcIik6dm9pZCAwO29mKCk7S2g9ITA7dmFyIGM9SGguY3VycmVudDtIaC5jdXJyZW50PWtnO3ZhciBkPWEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT247aWYoZCE9PVV8fGEhPT1MaHx8bnVsbD09PVQpU2goKSxMaD1hLFU9ZCxUPVhlKExoLmN1cnJlbnQsbnVsbCxVKSxhLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT0wO3ZhciBlPSExO2Rve3RyeXtpZihiKWZvcig7bnVsbCE9PVQmJiFkaSgpOylUPWJpKFQpO2Vsc2UgZm9yKDtudWxsIT09VDspVD1iaShUKX1jYXRjaCh1KXtpZihZZz1YZz1XZz1udWxsLGxnKCksbnVsbD09PVQpZT0hMCxEaCh1KTtlbHNle251bGw9PT1UP3goXCIyNzFcIik6dm9pZCAwO3ZhciBmPVQsZz1mLnJldHVybjtpZihudWxsPT09ZyllPSEwLERoKHUpO2Vsc2V7YTp7dmFyIGg9YSxsPWcsaz1mLG09dTtnPVU7ay5lZmZlY3RUYWd8PTEwMjQ7ay5maXJzdEVmZmVjdD1rLmxhc3RFZmZlY3Q9bnVsbDtpZihudWxsIT09XG5tJiZcIm9iamVjdFwiPT09dHlwZW9mIG0mJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBtLnRoZW4pe3ZhciBwPW07bT1sO3ZhciB0PS0xLEE9LTE7ZG97aWYoMTM9PT1tLnRhZyl7dmFyIHY9bS5hbHRlcm5hdGU7aWYobnVsbCE9PXYmJih2PXYubWVtb2l6ZWRTdGF0ZSxudWxsIT09dikpe0E9MTAqKDEwNzM3NDE4MjItdi50aW1lZE91dEF0KTticmVha312PW0ucGVuZGluZ1Byb3BzLm1heER1cmF0aW9uO2lmKFwibnVtYmVyXCI9PT10eXBlb2YgdilpZigwPj12KXQ9MDtlbHNlIGlmKC0xPT09dHx8djx0KXQ9dn1tPW0ucmV0dXJufXdoaWxlKG51bGwhPT1tKTttPWw7ZG97aWYodj0xMz09PW0udGFnKXY9dm9pZCAwPT09bS5tZW1vaXplZFByb3BzLmZhbGxiYWNrPyExOm51bGw9PT1tLm1lbW9pemVkU3RhdGU7aWYodil7bD1tLnVwZGF0ZVF1ZXVlO251bGw9PT1sPyhsPW5ldyBTZXQsbC5hZGQocCksbS51cGRhdGVRdWV1ZT1sKTpsLmFkZChwKTtpZigwPT09KG0ubW9kZSYxKSl7bS5lZmZlY3RUYWd8PVxuNjQ7ay5lZmZlY3RUYWcmPS0xOTU3OzE9PT1rLnRhZyYmKG51bGw9PT1rLmFsdGVybmF0ZT9rLnRhZz0xNzooZz1uZigxMDczNzQxODIzKSxnLnRhZz1zZixwZihrLGcpKSk7ay5leHBpcmF0aW9uVGltZT0xMDczNzQxODIzO2JyZWFrIGF9az1oO2w9Zzt2YXIgUj1rLnBpbmdDYWNoZTtudWxsPT09Uj8oUj1rLnBpbmdDYWNoZT1uZXcgQmgsdj1uZXcgU2V0LFIuc2V0KHAsdikpOih2PVIuZ2V0KHApLHZvaWQgMD09PXYmJih2PW5ldyBTZXQsUi5zZXQocCx2KSkpO3YuaGFzKGwpfHwodi5hZGQobCksaz1laS5iaW5kKG51bGwsayxwLGwpLHAudGhlbihrLGspKTstMT09PXQ/aD0xMDczNzQxODIzOigtMT09PUEmJihBPTEwKigxMDczNzQxODIyLWdmKGgsZykpLTVFMyksaD1BK3QpOzA8PWgmJk1oPGgmJihNaD1oKTttLmVmZmVjdFRhZ3w9MjA0ODttLmV4cGlyYXRpb25UaW1lPWc7YnJlYWsgYX1tPW0ucmV0dXJufXdoaWxlKG51bGwhPT1tKTttPUVycm9yKChpYyhrLnR5cGUpfHxcIkEgUmVhY3QgY29tcG9uZW50XCIpK1xuXCIgc3VzcGVuZGVkIHdoaWxlIHJlbmRlcmluZywgYnV0IG5vIGZhbGxiYWNrIFVJIHdhcyBzcGVjaWZpZWQuXFxuXFxuQWRkIGEgPFN1c3BlbnNlIGZhbGxiYWNrPS4uLj4gY29tcG9uZW50IGhpZ2hlciBpbiB0aGUgdHJlZSB0byBwcm92aWRlIGEgbG9hZGluZyBpbmRpY2F0b3Igb3IgcGxhY2Vob2xkZXIgdG8gZGlzcGxheS5cIitqYyhrKSl9Tmg9ITA7bT1qaChtLGspO2g9bDtkb3tzd2l0Y2goaC50YWcpe2Nhc2UgMzpoLmVmZmVjdFRhZ3w9MjA0ODtoLmV4cGlyYXRpb25UaW1lPWc7Zz1DaChoLG0sZyk7ZWgoaCxnKTticmVhayBhO2Nhc2UgMTppZih0PW0sQT1oLnR5cGUsaz1oLnN0YXRlTm9kZSwwPT09KGguZWZmZWN0VGFnJjY0KSYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBBLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8bnVsbCE9PWsmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBrLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PUZofHwhRmguaGFzKGspKSkpe2guZWZmZWN0VGFnfD0yMDQ4O1xuaC5leHBpcmF0aW9uVGltZT1nO2c9RWgoaCx0LGcpO2VoKGgsZyk7YnJlYWsgYX19aD1oLnJldHVybn13aGlsZShudWxsIT09aCl9VD1haShmKTtjb250aW51ZX19fWJyZWFrfXdoaWxlKDEpO0toPSExO0hoLmN1cnJlbnQ9YztZZz1YZz1XZz1udWxsO2xnKCk7aWYoZSlMaD1udWxsLGEuZmluaXNoZWRXb3JrPW51bGw7ZWxzZSBpZihudWxsIT09VClhLmZpbmlzaGVkV29yaz1udWxsO2Vsc2V7Yz1hLmN1cnJlbnQuYWx0ZXJuYXRlO251bGw9PT1jP3goXCIyODFcIik6dm9pZCAwO0xoPW51bGw7aWYoTmgpe2U9YS5sYXRlc3RQZW5kaW5nVGltZTtmPWEubGF0ZXN0U3VzcGVuZGVkVGltZTtnPWEubGF0ZXN0UGluZ2VkVGltZTtpZigwIT09ZSYmZTxkfHwwIT09ZiYmZjxkfHwwIT09ZyYmZzxkKXtmZihhLGQpO2ZpKGEsYyxkLGEuZXhwaXJhdGlvblRpbWUsLTEpO3JldHVybn1pZighYS5kaWRFcnJvciYmYil7YS5kaWRFcnJvcj0hMDtkPWEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249ZDtcbmI9YS5leHBpcmF0aW9uVGltZT0xMDczNzQxODIzO2ZpKGEsYyxkLGIsLTEpO3JldHVybn19YiYmLTEhPT1NaD8oZmYoYSxkKSxiPTEwKigxMDczNzQxODIyLWdmKGEsZCkpLGI8TWgmJihNaD1iKSxiPTEwKigxMDczNzQxODIyLWxmKCkpLGI9TWgtYixmaShhLGMsZCxhLmV4cGlyYXRpb25UaW1lLDA+Yj8wOmIpKTooYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9ZCxhLmZpbmlzaGVkV29yaz1jKX19XG5mdW5jdGlvbiBzaChhLGIpe2Zvcih2YXIgYz1hLnJldHVybjtudWxsIT09Yzspe3N3aXRjaChjLnRhZyl7Y2FzZSAxOnZhciBkPWMuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1GaHx8IUZoLmhhcyhkKSkpe2E9amgoYixhKTthPUVoKGMsYSwxMDczNzQxODIzKTtwZihjLGEpO3FmKGMsMTA3Mzc0MTgyMyk7cmV0dXJufWJyZWFrO2Nhc2UgMzphPWpoKGIsYSk7YT1DaChjLGEsMTA3Mzc0MTgyMyk7cGYoYyxhKTtxZihjLDEwNzM3NDE4MjMpO3JldHVybn1jPWMucmV0dXJufTM9PT1hLnRhZyYmKGM9amgoYixhKSxjPUNoKGEsYywxMDczNzQxODIzKSxwZihhLGMpLHFmKGEsMTA3Mzc0MTgyMykpfVxuZnVuY3Rpb24gbWYoYSxiKXt2YXIgYz1yLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsKCksZD12b2lkIDA7aWYoMD09PShiLm1vZGUmMSkpZD0xMDczNzQxODIzO2Vsc2UgaWYoS2gmJiFPaClkPVU7ZWxzZXtzd2l0Y2goYyl7Y2FzZSByLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5OmQ9MTA3Mzc0MTgyMzticmVhaztjYXNlIHIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk6ZD0xMDczNzQxODIyLTEwKigoKDEwNzM3NDE4MjItYSsxNSkvMTB8MCkrMSk7YnJlYWs7Y2FzZSByLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5OmQ9MTA3Mzc0MTgyMi0yNSooKCgxMDczNzQxODIyLWErNTAwKS8yNXwwKSsxKTticmVhaztjYXNlIHIudW5zdGFibGVfTG93UHJpb3JpdHk6Y2FzZSByLnVuc3RhYmxlX0lkbGVQcmlvcml0eTpkPTE7YnJlYWs7ZGVmYXVsdDp4KFwiMzEzXCIpfW51bGwhPT1MaCYmZD09PVUmJi0tZH1jPT09ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSYmXG4oMD09PWdpfHxkPGdpKSYmKGdpPWQpO3JldHVybiBkfWZ1bmN0aW9uIGVpKGEsYixjKXt2YXIgZD1hLnBpbmdDYWNoZTtudWxsIT09ZCYmZC5kZWxldGUoYik7aWYobnVsbCE9PUxoJiZVPT09YylMaD1udWxsO2Vsc2UgaWYoYj1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZSxkPWEubGF0ZXN0U3VzcGVuZGVkVGltZSwwIT09YiYmYzw9YiYmYz49ZCl7YS5kaWRFcnJvcj0hMTtiPWEubGF0ZXN0UGluZ2VkVGltZTtpZigwPT09Ynx8Yj5jKWEubGF0ZXN0UGluZ2VkVGltZT1jO2RmKGMsYSk7Yz1hLmV4cGlyYXRpb25UaW1lOzAhPT1jJiZYaChhLGMpfX1mdW5jdGlvbiBBaChhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO251bGwhPT1jJiZjLmRlbGV0ZShiKTtiPWxmKCk7Yj1tZihiLGEpO2E9aGkoYSxiKTtudWxsIT09YSYmKGNmKGEsYiksYj1hLmV4cGlyYXRpb25UaW1lLDAhPT1iJiZYaChhLGIpKX1cbmZ1bmN0aW9uIGhpKGEsYil7YS5leHBpcmF0aW9uVGltZTxiJiYoYS5leHBpcmF0aW9uVGltZT1iKTt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTxiJiYoYy5leHBpcmF0aW9uVGltZT1iKTt2YXIgZD1hLnJldHVybixlPW51bGw7aWYobnVsbD09PWQmJjM9PT1hLnRhZyllPWEuc3RhdGVOb2RlO2Vsc2UgZm9yKDtudWxsIT09ZDspe2M9ZC5hbHRlcm5hdGU7ZC5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihkLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7bnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoYy5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO2lmKG51bGw9PT1kLnJldHVybiYmMz09PWQudGFnKXtlPWQuc3RhdGVOb2RlO2JyZWFrfWQ9ZC5yZXR1cm59cmV0dXJuIGV9XG5mdW5jdGlvbiBxZihhLGIpe2E9aGkoYSxiKTtudWxsIT09YSYmKCFLaCYmMCE9PVUmJmI+VSYmU2goKSxjZihhLGIpLEtoJiYhT2gmJkxoPT09YXx8WGgoYSxhLmV4cGlyYXRpb25UaW1lKSxpaT5qaSYmKGlpPTAseChcIjE4NVwiKSkpfWZ1bmN0aW9uIGtpKGEsYixjLGQsZSl7cmV0dXJuIHIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KHIudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHksZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfXZhciBsaT1udWxsLFk9bnVsbCxtaT0wLG5pPXZvaWQgMCxXPSExLG9pPW51bGwsWj0wLGdpPTAscGk9ITEscWk9bnVsbCxYPSExLHJpPSExLHNpPW51bGwsdGk9ci51bnN0YWJsZV9ub3coKSx1aT0xMDczNzQxODIyLSh0aS8xMHwwKSx2aT11aSxqaT01MCxpaT0wLHdpPW51bGw7ZnVuY3Rpb24geGkoKXt1aT0xMDczNzQxODIyLSgoci51bnN0YWJsZV9ub3coKS10aSkvMTB8MCl9XG5mdW5jdGlvbiB5aShhLGIpe2lmKDAhPT1taSl7aWYoYjxtaSlyZXR1cm47bnVsbCE9PW5pJiZyLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrKG5pKX1taT1iO2E9ci51bnN0YWJsZV9ub3coKS10aTtuaT1yLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2soemkse3RpbWVvdXQ6MTAqKDEwNzM3NDE4MjItYiktYX0pfWZ1bmN0aW9uIGZpKGEsYixjLGQsZSl7YS5leHBpcmF0aW9uVGltZT1kOzAhPT1lfHxkaSgpPzA8ZSYmKGEudGltZW91dEhhbmRsZT15ZShBaS5iaW5kKG51bGwsYSxiLGMpLGUpKTooYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9YyxhLmZpbmlzaGVkV29yaz1iKX1mdW5jdGlvbiBBaShhLGIsYyl7YS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9YzthLmZpbmlzaGVkV29yaz1iO3hpKCk7dmk9dWk7QmkoYSxjKX1mdW5jdGlvbiAkaChhLGIpe2EuZXhwaXJhdGlvblRpbWU9YjthLmZpbmlzaGVkV29yaz1udWxsfVxuZnVuY3Rpb24gbGYoKXtpZihXKXJldHVybiB2aTtDaSgpO2lmKDA9PT1afHwxPT09Wil4aSgpLHZpPXVpO3JldHVybiB2aX1mdW5jdGlvbiBYaChhLGIpe251bGw9PT1hLm5leHRTY2hlZHVsZWRSb290PyhhLmV4cGlyYXRpb25UaW1lPWIsbnVsbD09PVk/KGxpPVk9YSxhLm5leHRTY2hlZHVsZWRSb290PWEpOihZPVkubmV4dFNjaGVkdWxlZFJvb3Q9YSxZLm5leHRTY2hlZHVsZWRSb290PWxpKSk6Yj5hLmV4cGlyYXRpb25UaW1lJiYoYS5leHBpcmF0aW9uVGltZT1iKTtXfHwoWD9yaSYmKG9pPWEsWj0xMDczNzQxODIzLERpKGEsMTA3Mzc0MTgyMywhMSkpOjEwNzM3NDE4MjM9PT1iP1loKDEwNzM3NDE4MjMsITEpOnlpKGEsYikpfVxuZnVuY3Rpb24gQ2koKXt2YXIgYT0wLGI9bnVsbDtpZihudWxsIT09WSlmb3IodmFyIGM9WSxkPWxpO251bGwhPT1kOyl7dmFyIGU9ZC5leHBpcmF0aW9uVGltZTtpZigwPT09ZSl7bnVsbD09PWN8fG51bGw9PT1ZP3goXCIyNDRcIik6dm9pZCAwO2lmKGQ9PT1kLm5leHRTY2hlZHVsZWRSb290KXtsaT1ZPWQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDticmVha31lbHNlIGlmKGQ9PT1saSlsaT1lPWQubmV4dFNjaGVkdWxlZFJvb3QsWS5uZXh0U2NoZWR1bGVkUm9vdD1lLGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtlbHNlIGlmKGQ9PT1ZKXtZPWM7WS5uZXh0U2NoZWR1bGVkUm9vdD1saTtkLm5leHRTY2hlZHVsZWRSb290PW51bGw7YnJlYWt9ZWxzZSBjLm5leHRTY2hlZHVsZWRSb290PWQubmV4dFNjaGVkdWxlZFJvb3QsZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2Q9Yy5uZXh0U2NoZWR1bGVkUm9vdH1lbHNle2U+YSYmKGE9ZSxiPWQpO2lmKGQ9PT1ZKWJyZWFrO2lmKDEwNzM3NDE4MjM9PT1cbmEpYnJlYWs7Yz1kO2Q9ZC5uZXh0U2NoZWR1bGVkUm9vdH19b2k9YjtaPWF9dmFyIEVpPSExO2Z1bmN0aW9uIGRpKCl7cmV0dXJuIEVpPyEwOnIudW5zdGFibGVfc2hvdWxkWWllbGQoKT9FaT0hMDohMX1mdW5jdGlvbiB6aSgpe3RyeXtpZighZGkoKSYmbnVsbCE9PWxpKXt4aSgpO3ZhciBhPWxpO2Rve3ZhciBiPWEuZXhwaXJhdGlvblRpbWU7MCE9PWImJnVpPD1iJiYoYS5uZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbj11aSk7YT1hLm5leHRTY2hlZHVsZWRSb290fXdoaWxlKGEhPT1saSl9WWgoMCwhMCl9ZmluYWxseXtFaT0hMX19XG5mdW5jdGlvbiBZaChhLGIpe0NpKCk7aWYoYilmb3IoeGkoKSx2aT11aTtudWxsIT09b2kmJjAhPT1aJiZhPD1aJiYhKEVpJiZ1aT5aKTspRGkob2ksWix1aT5aKSxDaSgpLHhpKCksdmk9dWk7ZWxzZSBmb3IoO251bGwhPT1vaSYmMCE9PVomJmE8PVo7KURpKG9pLFosITEpLENpKCk7YiYmKG1pPTAsbmk9bnVsbCk7MCE9PVomJnlpKG9pLFopO2lpPTA7d2k9bnVsbDtpZihudWxsIT09c2kpZm9yKGE9c2ksc2k9bnVsbCxiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBjPWFbYl07dHJ5e2MuX29uQ29tcGxldGUoKX1jYXRjaChkKXtwaXx8KHBpPSEwLHFpPWQpfX1pZihwaSl0aHJvdyBhPXFpLHFpPW51bGwscGk9ITEsYTt9ZnVuY3Rpb24gQmkoYSxiKXtXP3goXCIyNTNcIik6dm9pZCAwO29pPWE7Wj1iO0RpKGEsYiwhMSk7WWgoMTA3Mzc0MTgyMywhMSl9XG5mdW5jdGlvbiBEaShhLGIsYyl7Vz94KFwiMjQ1XCIpOnZvaWQgMDtXPSEwO2lmKGMpe3ZhciBkPWEuZmluaXNoZWRXb3JrO251bGwhPT1kP0ZpKGEsZCxiKTooYS5maW5pc2hlZFdvcms9bnVsbCxkPWEudGltZW91dEhhbmRsZSwtMSE9PWQmJihhLnRpbWVvdXRIYW5kbGU9LTEsemUoZCkpLGNpKGEsYyksZD1hLmZpbmlzaGVkV29yayxudWxsIT09ZCYmKGRpKCk/YS5maW5pc2hlZFdvcms9ZDpGaShhLGQsYikpKX1lbHNlIGQ9YS5maW5pc2hlZFdvcmssbnVsbCE9PWQ/RmkoYSxkLGIpOihhLmZpbmlzaGVkV29yaz1udWxsLGQ9YS50aW1lb3V0SGFuZGxlLC0xIT09ZCYmKGEudGltZW91dEhhbmRsZT0tMSx6ZShkKSksY2koYSxjKSxkPWEuZmluaXNoZWRXb3JrLG51bGwhPT1kJiZGaShhLGQsYikpO1c9ITF9XG5mdW5jdGlvbiBGaShhLGIsYyl7dmFyIGQ9YS5maXJzdEJhdGNoO2lmKG51bGwhPT1kJiZkLl9leHBpcmF0aW9uVGltZT49YyYmKG51bGw9PT1zaT9zaT1bZF06c2kucHVzaChkKSxkLl9kZWZlcikpe2EuZmluaXNoZWRXb3JrPWI7YS5leHBpcmF0aW9uVGltZT0wO3JldHVybn1hLmZpbmlzaGVkV29yaz1udWxsO2E9PT13aT9paSsrOih3aT1hLGlpPTApO3IudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KHIudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHksZnVuY3Rpb24oKXtaaChhLGIpfSl9ZnVuY3Rpb24gRGgoYSl7bnVsbD09PW9pP3goXCIyNDZcIik6dm9pZCAwO29pLmV4cGlyYXRpb25UaW1lPTA7cGl8fChwaT0hMCxxaT1hKX1mdW5jdGlvbiBHaShhLGIpe3ZhciBjPVg7WD0hMDt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXsoWD1jKXx8V3x8WWgoMTA3Mzc0MTgyMywhMSl9fVxuZnVuY3Rpb24gSGkoYSxiKXtpZihYJiYhcmkpe3JpPSEwO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e3JpPSExfX1yZXR1cm4gYShiKX1mdW5jdGlvbiBJaShhLGIsYyl7WHx8V3x8MD09PWdpfHwoWWgoZ2ksITEpLGdpPTApO3ZhciBkPVg7WD0hMDt0cnl7cmV0dXJuIHIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KHIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMpfSl9ZmluYWxseXsoWD1kKXx8V3x8WWgoMTA3Mzc0MTgyMywhMSl9fVxuZnVuY3Rpb24gSmkoYSxiLGMsZCxlKXt2YXIgZj1iLmN1cnJlbnQ7YTppZihjKXtjPWMuX3JlYWN0SW50ZXJuYWxGaWJlcjtiOnsyPT09ZWQoYykmJjE9PT1jLnRhZz92b2lkIDA6eChcIjE3MFwiKTt2YXIgZz1jO2Rve3N3aXRjaChnLnRhZyl7Y2FzZSAzOmc9Zy5zdGF0ZU5vZGUuY29udGV4dDticmVhayBiO2Nhc2UgMTppZihKKGcudHlwZSkpe2c9Zy5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgYn19Zz1nLnJldHVybn13aGlsZShudWxsIT09Zyk7eChcIjE3MVwiKTtnPXZvaWQgMH1pZigxPT09Yy50YWcpe3ZhciBoPWMudHlwZTtpZihKKGgpKXtjPU5lKGMsaCxnKTticmVhayBhfX1jPWd9ZWxzZSBjPUhlO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9ZTtlPW5mKGQpO2UucGF5bG9hZD17ZWxlbWVudDphfTtiPXZvaWQgMD09PWI/bnVsbDpiO251bGwhPT1iJiYoZS5jYWxsYmFjaz1iKTtcbm9mKCk7cGYoZixlKTtxZihmLGQpO3JldHVybiBkfWZ1bmN0aW9uIEtpKGEsYixjLGQpe3ZhciBlPWIuY3VycmVudCxmPWxmKCk7ZT1tZihmLGUpO3JldHVybiBKaShhLGIsYyxlLGQpfWZ1bmN0aW9uIExpKGEpe2E9YS5jdXJyZW50O2lmKCFhLmNoaWxkKXJldHVybiBudWxsO3N3aXRjaChhLmNoaWxkLnRhZyl7Y2FzZSA1OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZTtkZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19ZnVuY3Rpb24gTWkoYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjpXYixrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1cbkFiPWZ1bmN0aW9uKGEsYixjKXtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6eWMoYSxjKTtiPWMubmFtZTtpZihcInJhZGlvXCI9PT1jLnR5cGUmJm51bGwhPWIpe2ZvcihjPWE7Yy5wYXJlbnROb2RlOyljPWMucGFyZW50Tm9kZTtjPWMucXVlcnlTZWxlY3RvckFsbChcImlucHV0W25hbWU9XCIrSlNPTi5zdHJpbmdpZnkoXCJcIitiKSsnXVt0eXBlPVwicmFkaW9cIl0nKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKXt2YXIgZD1jW2JdO2lmKGQhPT1hJiZkLmZvcm09PT1hLmZvcm0pe3ZhciBlPUthKGQpO2U/dm9pZCAwOngoXCI5MFwiKTtTYihkKTt5YyhkLGUpfX19YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6ZGUoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLnZhbHVlLG51bGwhPWImJmFlKGEsISFjLm11bHRpcGxlLGIsITEpfX07XG5mdW5jdGlvbiBOaShhKXt2YXIgYj0xMDczNzQxODIyLTI1KigoKDEwNzM3NDE4MjItbGYoKSs1MDApLzI1fDApKzEpO2I+PUpoJiYoYj1KaC0xKTt0aGlzLl9leHBpcmF0aW9uVGltZT1KaD1iO3RoaXMuX3Jvb3Q9YTt0aGlzLl9jYWxsYmFja3M9dGhpcy5fbmV4dD1udWxsO3RoaXMuX2hhc0NoaWxkcmVuPXRoaXMuX2RpZENvbXBsZXRlPSExO3RoaXMuX2NoaWxkcmVuPW51bGw7dGhpcy5fZGVmZXI9ITB9TmkucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhKXt0aGlzLl9kZWZlcj92b2lkIDA6eChcIjI1MFwiKTt0aGlzLl9oYXNDaGlsZHJlbj0hMDt0aGlzLl9jaGlsZHJlbj1hO3ZhciBiPXRoaXMuX3Jvb3QuX2ludGVybmFsUm9vdCxjPXRoaXMuX2V4cGlyYXRpb25UaW1lLGQ9bmV3IE9pO0ppKGEsYixudWxsLGMsZC5fb25Db21taXQpO3JldHVybiBkfTtcbk5pLnByb3RvdHlwZS50aGVuPWZ1bmN0aW9uKGEpe2lmKHRoaXMuX2RpZENvbXBsZXRlKWEoKTtlbHNle3ZhciBiPXRoaXMuX2NhbGxiYWNrcztudWxsPT09YiYmKGI9dGhpcy5fY2FsbGJhY2tzPVtdKTtiLnB1c2goYSl9fTtcbk5pLnByb3RvdHlwZS5jb21taXQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLl9yb290Ll9pbnRlcm5hbFJvb3QsYj1hLmZpcnN0QmF0Y2g7dGhpcy5fZGVmZXImJm51bGwhPT1iP3ZvaWQgMDp4KFwiMjUxXCIpO2lmKHRoaXMuX2hhc0NoaWxkcmVuKXt2YXIgYz10aGlzLl9leHBpcmF0aW9uVGltZTtpZihiIT09dGhpcyl7dGhpcy5faGFzQ2hpbGRyZW4mJihjPXRoaXMuX2V4cGlyYXRpb25UaW1lPWIuX2V4cGlyYXRpb25UaW1lLHRoaXMucmVuZGVyKHRoaXMuX2NoaWxkcmVuKSk7Zm9yKHZhciBkPW51bGwsZT1iO2UhPT10aGlzOylkPWUsZT1lLl9uZXh0O251bGw9PT1kP3goXCIyNTFcIik6dm9pZCAwO2QuX25leHQ9ZS5fbmV4dDt0aGlzLl9uZXh0PWI7YS5maXJzdEJhdGNoPXRoaXN9dGhpcy5fZGVmZXI9ITE7QmkoYSxjKTtiPXRoaXMuX25leHQ7dGhpcy5fbmV4dD1udWxsO2I9YS5maXJzdEJhdGNoPWI7bnVsbCE9PWImJmIuX2hhc0NoaWxkcmVuJiZiLnJlbmRlcihiLl9jaGlsZHJlbil9ZWxzZSB0aGlzLl9uZXh0PVxubnVsbCx0aGlzLl9kZWZlcj0hMX07TmkucHJvdG90eXBlLl9vbkNvbXBsZXRlPWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2RpZENvbXBsZXRlKXt0aGlzLl9kaWRDb21wbGV0ZT0hMDt2YXIgYT10aGlzLl9jYWxsYmFja3M7aWYobnVsbCE9PWEpZm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspKDAsYVtiXSkoKX19O2Z1bmN0aW9uIE9pKCl7dGhpcy5fY2FsbGJhY2tzPW51bGw7dGhpcy5fZGlkQ29tbWl0PSExO3RoaXMuX29uQ29tbWl0PXRoaXMuX29uQ29tbWl0LmJpbmQodGhpcyl9T2kucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24oYSl7aWYodGhpcy5fZGlkQ29tbWl0KWEoKTtlbHNle3ZhciBiPXRoaXMuX2NhbGxiYWNrcztudWxsPT09YiYmKGI9dGhpcy5fY2FsbGJhY2tzPVtdKTtiLnB1c2goYSl9fTtcbk9pLnByb3RvdHlwZS5fb25Db21taXQ9ZnVuY3Rpb24oKXtpZighdGhpcy5fZGlkQ29tbWl0KXt0aGlzLl9kaWRDb21taXQ9ITA7dmFyIGE9dGhpcy5fY2FsbGJhY2tzO2lmKG51bGwhPT1hKWZvcih2YXIgYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgYz1hW2JdO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP3goXCIxOTFcIixjKTp2b2lkIDA7YygpfX19O1xuZnVuY3Rpb24gUGkoYSxiLGMpe2I9SygzLG51bGwsbnVsbCxiPzM6MCk7YT17Y3VycmVudDpiLGNvbnRhaW5lckluZm86YSxwZW5kaW5nQ2hpbGRyZW46bnVsbCxwaW5nQ2FjaGU6bnVsbCxlYXJsaWVzdFBlbmRpbmdUaW1lOjAsbGF0ZXN0UGVuZGluZ1RpbWU6MCxlYXJsaWVzdFN1c3BlbmRlZFRpbWU6MCxsYXRlc3RTdXNwZW5kZWRUaW1lOjAsbGF0ZXN0UGluZ2VkVGltZTowLGRpZEVycm9yOiExLHBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZTowLGZpbmlzaGVkV29yazpudWxsLHRpbWVvdXRIYW5kbGU6LTEsY29udGV4dDpudWxsLHBlbmRpbmdDb250ZXh0Om51bGwsaHlkcmF0ZTpjLG5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uOjAsZXhwaXJhdGlvblRpbWU6MCxmaXJzdEJhdGNoOm51bGwsbmV4dFNjaGVkdWxlZFJvb3Q6bnVsbH07dGhpcy5faW50ZXJuYWxSb290PWIuc3RhdGVOb2RlPWF9XG5QaS5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5faW50ZXJuYWxSb290LGQ9bmV3IE9pO2I9dm9pZCAwPT09Yj9udWxsOmI7bnVsbCE9PWImJmQudGhlbihiKTtLaShhLGMsbnVsbCxkLl9vbkNvbW1pdCk7cmV0dXJuIGR9O1BpLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuX2ludGVybmFsUm9vdCxjPW5ldyBPaTthPXZvaWQgMD09PWE/bnVsbDphO251bGwhPT1hJiZjLnRoZW4oYSk7S2kobnVsbCxiLG51bGwsYy5fb25Db21taXQpO3JldHVybiBjfTtQaS5wcm90b3R5cGUubGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aGlzLl9pbnRlcm5hbFJvb3QsZT1uZXcgT2k7Yz12b2lkIDA9PT1jP251bGw6YztudWxsIT09YyYmZS50aGVuKGMpO0tpKGIsZCxhLGUuX29uQ29tbWl0KTtyZXR1cm4gZX07XG5QaS5wcm90b3R5cGUuY3JlYXRlQmF0Y2g9ZnVuY3Rpb24oKXt2YXIgYT1uZXcgTmkodGhpcyksYj1hLl9leHBpcmF0aW9uVGltZSxjPXRoaXMuX2ludGVybmFsUm9vdCxkPWMuZmlyc3RCYXRjaDtpZihudWxsPT09ZCljLmZpcnN0QmF0Y2g9YSxhLl9uZXh0PW51bGw7ZWxzZXtmb3IoYz1udWxsO251bGwhPT1kJiZkLl9leHBpcmF0aW9uVGltZT49YjspYz1kLGQ9ZC5fbmV4dDthLl9uZXh0PWQ7bnVsbCE9PWMmJihjLl9uZXh0PWEpfXJldHVybiBhfTtmdW5jdGlvbiBRaShhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9R2I9R2k7SGI9SWk7SWI9ZnVuY3Rpb24oKXtXfHwwPT09Z2l8fChZaChnaSwhMSksZ2k9MCl9O1xuZnVuY3Rpb24gUmkoYSxiKXtifHwoYj1hPzk9PT1hLm5vZGVUeXBlP2EuZG9jdW1lbnRFbGVtZW50OmEuZmlyc3RDaGlsZDpudWxsLGI9ISghYnx8MSE9PWIubm9kZVR5cGV8fCFiLmhhc0F0dHJpYnV0ZShcImRhdGEtcmVhY3Ryb290XCIpKSk7aWYoIWIpZm9yKHZhciBjO2M9YS5sYXN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYyk7cmV0dXJuIG5ldyBQaShhLCExLGIpfVxuZnVuY3Rpb24gU2koYSxiLGMsZCxlKXt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBnPWU7ZT1mdW5jdGlvbigpe3ZhciBhPUxpKGYuX2ludGVybmFsUm9vdCk7Zy5jYWxsKGEpfX1udWxsIT1hP2YubGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyKGEsYixlKTpmLnJlbmRlcihiLGUpfWVsc2V7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9UmkoYyxkKTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGg9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9TGkoZi5faW50ZXJuYWxSb290KTtoLmNhbGwoYSl9fUhpKGZ1bmN0aW9uKCl7bnVsbCE9YT9mLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcihhLGIsZSk6Zi5yZW5kZXIoYixlKX0pfXJldHVybiBMaShmLl9pbnRlcm5hbFJvb3QpfVxuZnVuY3Rpb24gVGkoYSxiKXt2YXIgYz0yPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbDtRaShiKT92b2lkIDA6eChcIjIwMFwiKTtyZXR1cm4gTWkoYSxiLG51bGwsYyl9XG52YXIgVmk9e2NyZWF0ZVBvcnRhbDpUaSxmaW5kRE9NTm9kZTpmdW5jdGlvbihhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKDE9PT1hLm5vZGVUeXBlKXJldHVybiBhO3ZhciBiPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2b2lkIDA9PT1iJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyP3goXCIxODhcIik6eChcIjI2OFwiLE9iamVjdC5rZXlzKGEpKSk7YT1oZChiKTthPW51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGU7cmV0dXJuIGF9LGh5ZHJhdGU6ZnVuY3Rpb24oYSxiLGMpe1FpKGIpP3ZvaWQgMDp4KFwiMjAwXCIpO3JldHVybiBTaShudWxsLGEsYiwhMCxjKX0scmVuZGVyOmZ1bmN0aW9uKGEsYixjKXtRaShiKT92b2lkIDA6eChcIjIwMFwiKTtyZXR1cm4gU2kobnVsbCxhLGIsITEsYyl9LHVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyOmZ1bmN0aW9uKGEsYixjLGQpe1FpKGMpP3ZvaWQgMDp4KFwiMjAwXCIpO251bGw9PWF8fHZvaWQgMD09PWEuX3JlYWN0SW50ZXJuYWxGaWJlcj9cbngoXCIzOFwiKTp2b2lkIDA7cmV0dXJuIFNpKGEsYixjLCExLGQpfSx1bm1vdW50Q29tcG9uZW50QXROb2RlOmZ1bmN0aW9uKGEpe1FpKGEpP3ZvaWQgMDp4KFwiNDBcIik7cmV0dXJuIGEuX3JlYWN0Um9vdENvbnRhaW5lcj8oSGkoZnVuY3Rpb24oKXtTaShudWxsLG51bGwsYSwhMSxmdW5jdGlvbigpe2EuX3JlYWN0Um9vdENvbnRhaW5lcj1udWxsfSl9KSwhMCk6ITF9LHVuc3RhYmxlX2NyZWF0ZVBvcnRhbDpmdW5jdGlvbigpe3JldHVybiBUaS5hcHBseSh2b2lkIDAsYXJndW1lbnRzKX0sdW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXM6R2ksdW5zdGFibGVfaW50ZXJhY3RpdmVVcGRhdGVzOklpLGZsdXNoU3luYzpmdW5jdGlvbihhLGIpe1c/eChcIjE4N1wiKTp2b2lkIDA7dmFyIGM9WDtYPSEwO3RyeXtyZXR1cm4ga2koYSxiKX1maW5hbGx5e1g9YyxZaCgxMDczNzQxODIzLCExKX19LHVuc3RhYmxlX2NyZWF0ZVJvb3Q6VWksdW5zdGFibGVfZmx1c2hDb250cm9sbGVkOmZ1bmN0aW9uKGEpe3ZhciBiPVxuWDtYPSEwO3RyeXtraShhKX1maW5hbGx5eyhYPWIpfHxXfHxZaCgxMDczNzQxODIzLCExKX19LF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOntFdmVudHM6W0lhLEphLEthLEJhLmluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSxwYSxRYSxmdW5jdGlvbihhKXt5YShhLFBhKX0sRWIsRmIsRGQsRGFdfX07ZnVuY3Rpb24gVWkoYSxiKXtRaShhKT92b2lkIDA6eChcIjI5OVwiLFwidW5zdGFibGVfY3JlYXRlUm9vdFwiKTtyZXR1cm4gbmV3IFBpKGEsITAsbnVsbCE9YiYmITA9PT1iLmh5ZHJhdGUpfVxuKGZ1bmN0aW9uKGEpe3ZhciBiPWEuZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U7cmV0dXJuIFRlKG4oe30sYSx7b3ZlcnJpZGVQcm9wczpudWxsLGN1cnJlbnREaXNwYXRjaGVyUmVmOlRiLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1oZChhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGI/YihhKTpudWxsfX0pKX0pKHtmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpIYSxidW5kbGVUeXBlOjAsdmVyc2lvbjpcIjE2LjguNFwiLHJlbmRlcmVyUGFja2FnZU5hbWU6XCJyZWFjdC1kb21cIn0pO3ZhciBXaT17ZGVmYXVsdDpWaX0sWGk9V2kmJlZpfHxXaTttb2R1bGUuZXhwb3J0cz1YaS5kZWZhdWx0fHxYaTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjAuMTMuNFxuICogc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBkPW51bGwsZT0hMSxnPTMsaz0tMSxsPS0xLG09ITEsbj0hMTtmdW5jdGlvbiBwKCl7aWYoIW0pe3ZhciBhPWQuZXhwaXJhdGlvblRpbWU7bj9xKCk6bj0hMDtyKHQsYSl9fVxuZnVuY3Rpb24gdSgpe3ZhciBhPWQsYj1kLm5leHQ7aWYoZD09PWIpZD1udWxsO2Vsc2V7dmFyIGM9ZC5wcmV2aW91cztkPWMubmV4dD1iO2IucHJldmlvdXM9Y31hLm5leHQ9YS5wcmV2aW91cz1udWxsO2M9YS5jYWxsYmFjaztiPWEuZXhwaXJhdGlvblRpbWU7YT1hLnByaW9yaXR5TGV2ZWw7dmFyIGY9ZyxRPWw7Zz1hO2w9Yjt0cnl7dmFyIGg9YygpfWZpbmFsbHl7Zz1mLGw9UX1pZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgaClpZihoPXtjYWxsYmFjazpoLHByaW9yaXR5TGV2ZWw6YSxleHBpcmF0aW9uVGltZTpiLG5leHQ6bnVsbCxwcmV2aW91czpudWxsfSxudWxsPT09ZClkPWgubmV4dD1oLnByZXZpb3VzPWg7ZWxzZXtjPW51bGw7YT1kO2Rve2lmKGEuZXhwaXJhdGlvblRpbWU+PWIpe2M9YTticmVha31hPWEubmV4dH13aGlsZShhIT09ZCk7bnVsbD09PWM/Yz1kOmM9PT1kJiYoZD1oLHAoKSk7Yj1jLnByZXZpb3VzO2IubmV4dD1jLnByZXZpb3VzPWg7aC5uZXh0PWM7aC5wcmV2aW91cz1cbmJ9fWZ1bmN0aW9uIHYoKXtpZigtMT09PWsmJm51bGwhPT1kJiYxPT09ZC5wcmlvcml0eUxldmVsKXttPSEwO3RyeXtkbyB1KCk7d2hpbGUobnVsbCE9PWQmJjE9PT1kLnByaW9yaXR5TGV2ZWwpfWZpbmFsbHl7bT0hMSxudWxsIT09ZD9wKCk6bj0hMX19fWZ1bmN0aW9uIHQoYSl7bT0hMDt2YXIgYj1lO2U9YTt0cnl7aWYoYSlmb3IoO251bGwhPT1kOyl7dmFyIGM9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihkLmV4cGlyYXRpb25UaW1lPD1jKXtkbyB1KCk7d2hpbGUobnVsbCE9PWQmJmQuZXhwaXJhdGlvblRpbWU8PWMpfWVsc2UgYnJlYWt9ZWxzZSBpZihudWxsIT09ZCl7ZG8gdSgpO3doaWxlKG51bGwhPT1kJiYhdygpKX19ZmluYWxseXttPSExLGU9YixudWxsIT09ZD9wKCk6bj0hMSx2KCl9fVxudmFyIHg9RGF0ZSx5PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLHo9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwLEE9XCJmdW5jdGlvblwiPT09dHlwZW9mIHJlcXVlc3RBbmltYXRpb25GcmFtZT9yZXF1ZXN0QW5pbWF0aW9uRnJhbWU6dm9pZCAwLEI9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNhbmNlbEFuaW1hdGlvbkZyYW1lP2NhbmNlbEFuaW1hdGlvbkZyYW1lOnZvaWQgMCxDLEQ7ZnVuY3Rpb24gRShhKXtDPUEoZnVuY3Rpb24oYil7eihEKTthKGIpfSk7RD15KGZ1bmN0aW9uKCl7QihDKTthKGV4cG9ydHMudW5zdGFibGVfbm93KCkpfSwxMDApfVxuaWYoXCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdyl7dmFyIEY9cGVyZm9ybWFuY2U7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gRi5ub3coKX19ZWxzZSBleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiB4Lm5vdygpfTt2YXIgcixxLHcsRz1udWxsO1widW5kZWZpbmVkXCIhPT10eXBlb2Ygd2luZG93P0c9d2luZG93OlwidW5kZWZpbmVkXCIhPT10eXBlb2YgZ2xvYmFsJiYoRz1nbG9iYWwpO1xuaWYoRyYmRy5fc2NoZWRNb2NrKXt2YXIgSD1HLl9zY2hlZE1vY2s7cj1IWzBdO3E9SFsxXTt3PUhbMl07ZXhwb3J0cy51bnN0YWJsZV9ub3c9SFszXX1lbHNlIGlmKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgTWVzc2FnZUNoYW5uZWwpe3ZhciBJPW51bGwsSj1mdW5jdGlvbihhKXtpZihudWxsIT09SSl0cnl7SShhKX1maW5hbGx5e0k9bnVsbH19O3I9ZnVuY3Rpb24oYSl7bnVsbCE9PUk/c2V0VGltZW91dChyLDAsYSk6KEk9YSxzZXRUaW1lb3V0KEosMCwhMSkpfTtxPWZ1bmN0aW9uKCl7ST1udWxsfTt3PWZ1bmN0aW9uKCl7cmV0dXJuITF9fWVsc2V7XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjb25zb2xlJiYoXCJmdW5jdGlvblwiIT09dHlwZW9mIEEmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IHJlcXVlc3RBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIiksXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgQiYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgY2FuY2VsQW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpKTt2YXIgSz1udWxsLEw9ITEsTT0tMSxOPSExLE89ITEsUD0wLFI9MzMsUz0zMzt3PWZ1bmN0aW9uKCl7cmV0dXJuIFA8PWV4cG9ydHMudW5zdGFibGVfbm93KCl9O3ZhciBUPW5ldyBNZXNzYWdlQ2hhbm5lbCxVPVQucG9ydDI7VC5wb3J0MS5vbm1lc3NhZ2U9ZnVuY3Rpb24oKXtMPSExO3ZhciBhPUssYj1NO0s9bnVsbDtNPS0xO3ZhciBjPWV4cG9ydHMudW5zdGFibGVfbm93KCksZj0hMTtpZigwPj1QLWMpaWYoLTEhPT1iJiZiPD1jKWY9ITA7ZWxzZXtOfHwoTj0hMCxFKFYpKTtLPWE7TT1iO3JldHVybn1pZihudWxsIT09YSl7Tz0hMDt0cnl7YShmKX1maW5hbGx5e089ITF9fX07XG52YXIgVj1mdW5jdGlvbihhKXtpZihudWxsIT09Syl7RShWKTt2YXIgYj1hLVArUztiPFMmJlI8Uz8oOD5iJiYoYj04KSxTPWI8Uj9SOmIpOlI9YjtQPWErUztMfHwoTD0hMCxVLnBvc3RNZXNzYWdlKHZvaWQgMCkpfWVsc2UgTj0hMX07cj1mdW5jdGlvbihhLGIpe0s9YTtNPWI7T3x8MD5iP1UucG9zdE1lc3NhZ2Uodm9pZCAwKTpOfHwoTj0hMCxFKFYpKX07cT1mdW5jdGlvbigpe0s9bnVsbDtMPSExO009LTF9fWV4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MTtleHBvcnRzLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5PTI7ZXhwb3J0cy51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eT0zO2V4cG9ydHMudW5zdGFibGVfSWRsZVByaW9yaXR5PTU7ZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eT00O1xuZXhwb3J0cy51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHk9ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA0OmNhc2UgNTpicmVhaztkZWZhdWx0OmE9M312YXIgYz1nLGY9aztnPWE7az1leHBvcnRzLnVuc3RhYmxlX25vdygpO3RyeXtyZXR1cm4gYigpfWZpbmFsbHl7Zz1jLGs9Zix2KCl9fTtleHBvcnRzLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oYSl7c3dpdGNoKGcpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciBiPTM7YnJlYWs7ZGVmYXVsdDpiPWd9dmFyIGM9ZyxmPWs7Zz1iO2s9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e2c9YyxrPWYsdigpfX07XG5leHBvcnRzLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiKXt2YXIgYz0tMSE9PWs/azpleHBvcnRzLnVuc3RhYmxlX25vdygpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWImJlwibnVtYmVyXCI9PT10eXBlb2YgYi50aW1lb3V0KWI9YytiLnRpbWVvdXQ7ZWxzZSBzd2l0Y2goZyl7Y2FzZSAxOmI9YystMTticmVhaztjYXNlIDI6Yj1jKzI1MDticmVhaztjYXNlIDU6Yj1jKzEwNzM3NDE4MjM7YnJlYWs7Y2FzZSA0OmI9YysxRTQ7YnJlYWs7ZGVmYXVsdDpiPWMrNUUzfWE9e2NhbGxiYWNrOmEscHJpb3JpdHlMZXZlbDpnLGV4cGlyYXRpb25UaW1lOmIsbmV4dDpudWxsLHByZXZpb3VzOm51bGx9O2lmKG51bGw9PT1kKWQ9YS5uZXh0PWEucHJldmlvdXM9YSxwKCk7ZWxzZXtjPW51bGw7dmFyIGY9ZDtkb3tpZihmLmV4cGlyYXRpb25UaW1lPmIpe2M9ZjticmVha31mPWYubmV4dH13aGlsZShmIT09ZCk7bnVsbD09PWM/Yz1kOmM9PT1kJiYoZD1hLHAoKSk7XG5iPWMucHJldmlvdXM7Yi5uZXh0PWMucHJldmlvdXM9YTthLm5leHQ9YzthLnByZXZpb3VzPWJ9cmV0dXJuIGF9O2V4cG9ydHMudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9YS5uZXh0O2lmKG51bGwhPT1iKXtpZihiPT09YSlkPW51bGw7ZWxzZXthPT09ZCYmKGQ9Yik7dmFyIGM9YS5wcmV2aW91cztjLm5leHQ9YjtiLnByZXZpb3VzPWN9YS5uZXh0PWEucHJldmlvdXM9bnVsbH19O2V4cG9ydHMudW5zdGFibGVfd3JhcENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPWc7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGM9ZyxmPWs7Zz1iO2s9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7Zz1jLGs9Zix2KCl9fX07ZXhwb3J0cy51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbD1mdW5jdGlvbigpe3JldHVybiBnfTtcbmV4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXtyZXR1cm4hZSYmKG51bGwhPT1kJiZkLmV4cGlyYXRpb25UaW1lPGx8fHcoKSl9O2V4cG9ydHMudW5zdGFibGVfY29udGludWVFeGVjdXRpb249ZnVuY3Rpb24oKXtudWxsIT09ZCYmcCgpfTtleHBvcnRzLnVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIGR9O1xuIiwidmFyIGc7XG5cbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXG5nID0gKGZ1bmN0aW9uKCkge1xuXHRyZXR1cm4gdGhpcztcbn0pKCk7XG5cbnRyeSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxuXHRnID0gZyB8fCBuZXcgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xufSBjYXRjaCAoZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcbn1cblxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3Ncbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cblxubW9kdWxlLmV4cG9ydHMgPSBnO1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb24oKSB7fVxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbldpdGhSZXNldCgpIHt9XG5lbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LnJlc2V0V2FybmluZ0NhY2hlID0gZW1wdHlGdW5jdGlvbjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIHRocm93IGVycjtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGVsZW1lbnRUeXBlOiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW0sXG5cbiAgICBjaGVja1Byb3BUeXBlczogZW1wdHlGdW5jdGlvbldpdGhSZXNldCxcbiAgICByZXNldFdhcm5pbmdDYWNoZTogZW1wdHlGdW5jdGlvblxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiIsIi8vIHNoaW0gZm9yIHVzaW5nIHByb2Nlc3MgaW4gYnJvd3NlclxudmFyIHByb2Nlc3MgPSBtb2R1bGUuZXhwb3J0cyA9IHt9O1xuXG4vLyBjYWNoZWQgZnJvbSB3aGF0ZXZlciBnbG9iYWwgaXMgcHJlc2VudCBzbyB0aGF0IHRlc3QgcnVubmVycyB0aGF0IHN0dWIgaXRcbi8vIGRvbid0IGJyZWFrIHRoaW5ncy4gIEJ1dCB3ZSBuZWVkIHRvIHdyYXAgaXQgaW4gYSB0cnkgY2F0Y2ggaW4gY2FzZSBpdCBpc1xuLy8gd3JhcHBlZCBpbiBzdHJpY3QgbW9kZSBjb2RlIHdoaWNoIGRvZXNuJ3QgZGVmaW5lIGFueSBnbG9iYWxzLiAgSXQncyBpbnNpZGUgYVxuLy8gZnVuY3Rpb24gYmVjYXVzZSB0cnkvY2F0Y2hlcyBkZW9wdGltaXplIGluIGNlcnRhaW4gZW5naW5lcy5cblxudmFyIGNhY2hlZFNldFRpbWVvdXQ7XG52YXIgY2FjaGVkQ2xlYXJUaW1lb3V0O1xuXG5mdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCkge1xuICAgIHRocm93IG5ldyBFcnJvcignc2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCcpO1xufVxuZnVuY3Rpb24gZGVmYXVsdENsZWFyVGltZW91dCAoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdjbGVhclRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQnKTtcbn1cbihmdW5jdGlvbiAoKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBzZXRUaW1lb3V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0O1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gZGVmYXVsdFNldFRpbW91dDtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBjbGVhclRpbWVvdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgfVxufSAoKSlcbmZ1bmN0aW9uIHJ1blRpbWVvdXQoZnVuKSB7XG4gICAgaWYgKGNhY2hlZFNldFRpbWVvdXQgPT09IHNldFRpbWVvdXQpIHtcbiAgICAgICAgLy9ub3JtYWwgZW52aXJvbWVudHMgaW4gc2FuZSBzaXR1YXRpb25zXG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfVxuICAgIC8vIGlmIHNldFRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkXG4gICAgaWYgKChjYWNoZWRTZXRUaW1lb3V0ID09PSBkZWZhdWx0U2V0VGltb3V0IHx8ICFjYWNoZWRTZXRUaW1lb3V0KSAmJiBzZXRUaW1lb3V0KSB7XG4gICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICAgICAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfSBjYXRjaChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbChudWxsLCBmdW4sIDApO1xuICAgICAgICB9IGNhdGNoKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3JcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwodGhpcywgZnVuLCAwKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG59XG5mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQobWFya2VyKSB7XG4gICAgaWYgKGNhY2hlZENsZWFyVGltZW91dCA9PT0gY2xlYXJUaW1lb3V0KSB7XG4gICAgICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9uc1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIC8vIGlmIGNsZWFyVGltZW91dCB3YXNuJ3QgYXZhaWxhYmxlIGJ1dCB3YXMgbGF0dGVyIGRlZmluZWRcbiAgICBpZiAoKGNhY2hlZENsZWFyVGltZW91dCA9PT0gZGVmYXVsdENsZWFyVGltZW91dCB8fCAhY2FjaGVkQ2xlYXJUaW1lb3V0KSAmJiBjbGVhclRpbWVvdXQpIHtcbiAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gY2xlYXJUaW1lb3V0O1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIC8vIHdoZW4gd2hlbiBzb21lYm9keSBoYXMgc2NyZXdlZCB3aXRoIHNldFRpbWVvdXQgYnV0IG5vIEkuRS4gbWFkZG5lc3NcbiAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gV2hlbiB3ZSBhcmUgaW4gSS5FLiBidXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBldmFsZWQgc28gSS5FLiBkb2Vzbid0ICB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKG51bGwsIG1hcmtlcik7XG4gICAgICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3IuXG4gICAgICAgICAgICAvLyBTb21lIHZlcnNpb25zIG9mIEkuRS4gaGF2ZSBkaWZmZXJlbnQgcnVsZXMgZm9yIGNsZWFyVGltZW91dCB2cyBzZXRUaW1lb3V0XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwodGhpcywgbWFya2VyKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG5cbn1cbnZhciBxdWV1ZSA9IFtdO1xudmFyIGRyYWluaW5nID0gZmFsc2U7XG52YXIgY3VycmVudFF1ZXVlO1xudmFyIHF1ZXVlSW5kZXggPSAtMTtcblxuZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCkge1xuICAgIGlmICghZHJhaW5pbmcgfHwgIWN1cnJlbnRRdWV1ZSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgaWYgKGN1cnJlbnRRdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgcXVldWUgPSBjdXJyZW50UXVldWUuY29uY2F0KHF1ZXVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgfVxuICAgIGlmIChxdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgZHJhaW5RdWV1ZSgpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZHJhaW5RdWV1ZSgpIHtcbiAgICBpZiAoZHJhaW5pbmcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgdGltZW91dCA9IHJ1blRpbWVvdXQoY2xlYW5VcE5leHRUaWNrKTtcbiAgICBkcmFpbmluZyA9IHRydWU7XG5cbiAgICB2YXIgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIHdoaWxlKGxlbikge1xuICAgICAgICBjdXJyZW50UXVldWUgPSBxdWV1ZTtcbiAgICAgICAgcXVldWUgPSBbXTtcbiAgICAgICAgd2hpbGUgKCsrcXVldWVJbmRleCA8IGxlbikge1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRRdWV1ZSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRRdWV1ZVtxdWV1ZUluZGV4XS5ydW4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgICAgIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB9XG4gICAgY3VycmVudFF1ZXVlID0gbnVsbDtcbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIHJ1bkNsZWFyVGltZW91dCh0aW1lb3V0KTtcbn1cblxucHJvY2Vzcy5uZXh0VGljayA9IGZ1bmN0aW9uIChmdW4pIHtcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoIC0gMSk7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBhcmdzW2kgLSAxXSA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBxdWV1ZS5wdXNoKG5ldyBJdGVtKGZ1biwgYXJncykpO1xuICAgIGlmIChxdWV1ZS5sZW5ndGggPT09IDEgJiYgIWRyYWluaW5nKSB7XG4gICAgICAgIHJ1blRpbWVvdXQoZHJhaW5RdWV1ZSk7XG4gICAgfVxufTtcblxuLy8gdjggbGlrZXMgcHJlZGljdGlibGUgb2JqZWN0c1xuZnVuY3Rpb24gSXRlbShmdW4sIGFycmF5KSB7XG4gICAgdGhpcy5mdW4gPSBmdW47XG4gICAgdGhpcy5hcnJheSA9IGFycmF5O1xufVxuSXRlbS5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZnVuLmFwcGx5KG51bGwsIHRoaXMuYXJyYXkpO1xufTtcbnByb2Nlc3MudGl0bGUgPSAnYnJvd3Nlcic7XG5wcm9jZXNzLmJyb3dzZXIgPSB0cnVlO1xucHJvY2Vzcy5lbnYgPSB7fTtcbnByb2Nlc3MuYXJndiA9IFtdO1xucHJvY2Vzcy52ZXJzaW9uID0gJyc7IC8vIGVtcHR5IHN0cmluZyB0byBhdm9pZCByZWdleHAgaXNzdWVzXG5wcm9jZXNzLnZlcnNpb25zID0ge307XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG5wcm9jZXNzLm9uID0gbm9vcDtcbnByb2Nlc3MuYWRkTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5vbmNlID0gbm9vcDtcbnByb2Nlc3Mub2ZmID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVBbGxMaXN0ZW5lcnMgPSBub29wO1xucHJvY2Vzcy5lbWl0ID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZE9uY2VMaXN0ZW5lciA9IG5vb3A7XG5cbnByb2Nlc3MubGlzdGVuZXJzID0gZnVuY3Rpb24gKG5hbWUpIHsgcmV0dXJuIFtdIH1cblxucHJvY2Vzcy5iaW5kaW5nID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuYmluZGluZyBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xuXG5wcm9jZXNzLmN3ZCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICcvJyB9O1xucHJvY2Vzcy5jaGRpciA9IGZ1bmN0aW9uIChkaXIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuY2hkaXIgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcbnByb2Nlc3MudW1hc2sgPSBmdW5jdGlvbigpIHsgcmV0dXJuIDA7IH07XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjguNFxuICogcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7XG52YXIgYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLGM9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxkPWI/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixlPWI/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGY9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsZz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxoPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGs9Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxsPWI/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEsbT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsbj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixwPWI/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHE9Yj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTpcbjYwMTE1LHI9Yj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNjtmdW5jdGlvbiB0KGEpe2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpe3ZhciB1PWEuJCR0eXBlb2Y7c3dpdGNoKHUpe2Nhc2UgYzpzd2l0Y2goYT1hLnR5cGUsYSl7Y2FzZSBsOmNhc2UgbTpjYXNlIGU6Y2FzZSBnOmNhc2UgZjpjYXNlIHA6cmV0dXJuIGE7ZGVmYXVsdDpzd2l0Y2goYT1hJiZhLiQkdHlwZW9mLGEpe2Nhc2UgazpjYXNlIG46Y2FzZSBoOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuIHV9fWNhc2UgcjpjYXNlIHE6Y2FzZSBkOnJldHVybiB1fX19ZnVuY3Rpb24gdihhKXtyZXR1cm4gdChhKT09PW19ZXhwb3J0cy50eXBlT2Y9dDtleHBvcnRzLkFzeW5jTW9kZT1sO2V4cG9ydHMuQ29uY3VycmVudE1vZGU9bTtleHBvcnRzLkNvbnRleHRDb25zdW1lcj1rO2V4cG9ydHMuQ29udGV4dFByb3ZpZGVyPWg7ZXhwb3J0cy5FbGVtZW50PWM7ZXhwb3J0cy5Gb3J3YXJkUmVmPW47XG5leHBvcnRzLkZyYWdtZW50PWU7ZXhwb3J0cy5MYXp5PXI7ZXhwb3J0cy5NZW1vPXE7ZXhwb3J0cy5Qb3J0YWw9ZDtleHBvcnRzLlByb2ZpbGVyPWc7ZXhwb3J0cy5TdHJpY3RNb2RlPWY7ZXhwb3J0cy5TdXNwZW5zZT1wO2V4cG9ydHMuaXNWYWxpZEVsZW1lbnRUeXBlPWZ1bmN0aW9uKGEpe3JldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGF8fGE9PT1lfHxhPT09bXx8YT09PWd8fGE9PT1mfHxhPT09cHx8XCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmKGEuJCR0eXBlb2Y9PT1yfHxhLiQkdHlwZW9mPT09cXx8YS4kJHR5cGVvZj09PWh8fGEuJCR0eXBlb2Y9PT1rfHxhLiQkdHlwZW9mPT09bil9O2V4cG9ydHMuaXNBc3luY01vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHYoYSl8fHQoYSk9PT1sfTtleHBvcnRzLmlzQ29uY3VycmVudE1vZGU9djtleHBvcnRzLmlzQ29udGV4dENvbnN1bWVyPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09a307XG5leHBvcnRzLmlzQ29udGV4dFByb3ZpZGVyPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09aH07ZXhwb3J0cy5pc0VsZW1lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PWN9O2V4cG9ydHMuaXNGb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09bn07ZXhwb3J0cy5pc0ZyYWdtZW50PWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09ZX07ZXhwb3J0cy5pc0xhenk9ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1yfTtleHBvcnRzLmlzTWVtbz1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PXF9O2V4cG9ydHMuaXNQb3J0YWw9ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1kfTtleHBvcnRzLmlzUHJvZmlsZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1nfTtleHBvcnRzLmlzU3RyaWN0TW9kZT1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PWZ9O1xuZXhwb3J0cy5pc1N1c3BlbnNlPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09cH07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFycikge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG4iLCJmdW5jdGlvbiBpc0Fic29sdXRlKHBhdGhuYW1lKSB7XG4gIHJldHVybiBwYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJztcbn1cblxuLy8gQWJvdXQgMS41eCBmYXN0ZXIgdGhhbiB0aGUgdHdvLWFyZyB2ZXJzaW9uIG9mIEFycmF5I3NwbGljZSgpXG5mdW5jdGlvbiBzcGxpY2VPbmUobGlzdCwgaW5kZXgpIHtcbiAgZm9yICh2YXIgaSA9IGluZGV4LCBrID0gaSArIDEsIG4gPSBsaXN0Lmxlbmd0aDsgayA8IG47IGkgKz0gMSwgayArPSAxKSB7XG4gICAgbGlzdFtpXSA9IGxpc3Rba107XG4gIH1cblxuICBsaXN0LnBvcCgpO1xufVxuXG4vLyBUaGlzIGltcGxlbWVudGF0aW9uIGlzIGJhc2VkIGhlYXZpbHkgb24gbm9kZSdzIHVybC5wYXJzZVxuZnVuY3Rpb24gcmVzb2x2ZVBhdGhuYW1lKHRvKSB7XG4gIHZhciBmcm9tID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAnJztcblxuICB2YXIgdG9QYXJ0cyA9IHRvICYmIHRvLnNwbGl0KCcvJykgfHwgW107XG4gIHZhciBmcm9tUGFydHMgPSBmcm9tICYmIGZyb20uc3BsaXQoJy8nKSB8fCBbXTtcblxuICB2YXIgaXNUb0FicyA9IHRvICYmIGlzQWJzb2x1dGUodG8pO1xuICB2YXIgaXNGcm9tQWJzID0gZnJvbSAmJiBpc0Fic29sdXRlKGZyb20pO1xuICB2YXIgbXVzdEVuZEFicyA9IGlzVG9BYnMgfHwgaXNGcm9tQWJzO1xuXG4gIGlmICh0byAmJiBpc0Fic29sdXRlKHRvKSkge1xuICAgIC8vIHRvIGlzIGFic29sdXRlXG4gICAgZnJvbVBhcnRzID0gdG9QYXJ0cztcbiAgfSBlbHNlIGlmICh0b1BhcnRzLmxlbmd0aCkge1xuICAgIC8vIHRvIGlzIHJlbGF0aXZlLCBkcm9wIHRoZSBmaWxlbmFtZVxuICAgIGZyb21QYXJ0cy5wb3AoKTtcbiAgICBmcm9tUGFydHMgPSBmcm9tUGFydHMuY29uY2F0KHRvUGFydHMpO1xuICB9XG5cbiAgaWYgKCFmcm9tUGFydHMubGVuZ3RoKSByZXR1cm4gJy8nO1xuXG4gIHZhciBoYXNUcmFpbGluZ1NsYXNoID0gdm9pZCAwO1xuICBpZiAoZnJvbVBhcnRzLmxlbmd0aCkge1xuICAgIHZhciBsYXN0ID0gZnJvbVBhcnRzW2Zyb21QYXJ0cy5sZW5ndGggLSAxXTtcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gbGFzdCA9PT0gJy4nIHx8IGxhc3QgPT09ICcuLicgfHwgbGFzdCA9PT0gJyc7XG4gIH0gZWxzZSB7XG4gICAgaGFzVHJhaWxpbmdTbGFzaCA9IGZhbHNlO1xuICB9XG5cbiAgdmFyIHVwID0gMDtcbiAgZm9yICh2YXIgaSA9IGZyb21QYXJ0cy5sZW5ndGg7IGkgPj0gMDsgaS0tKSB7XG4gICAgdmFyIHBhcnQgPSBmcm9tUGFydHNbaV07XG5cbiAgICBpZiAocGFydCA9PT0gJy4nKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICB9IGVsc2UgaWYgKHBhcnQgPT09ICcuLicpIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgICAgdXArKztcbiAgICB9IGVsc2UgaWYgKHVwKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICAgIHVwLS07XG4gICAgfVxuICB9XG5cbiAgaWYgKCFtdXN0RW5kQWJzKSBmb3IgKDsgdXAtLTsgdXApIHtcbiAgICBmcm9tUGFydHMudW5zaGlmdCgnLi4nKTtcbiAgfWlmIChtdXN0RW5kQWJzICYmIGZyb21QYXJ0c1swXSAhPT0gJycgJiYgKCFmcm9tUGFydHNbMF0gfHwgIWlzQWJzb2x1dGUoZnJvbVBhcnRzWzBdKSkpIGZyb21QYXJ0cy51bnNoaWZ0KCcnKTtcblxuICB2YXIgcmVzdWx0ID0gZnJvbVBhcnRzLmpvaW4oJy8nKTtcblxuICBpZiAoaGFzVHJhaWxpbmdTbGFzaCAmJiByZXN1bHQuc3Vic3RyKC0xKSAhPT0gJy8nKSByZXN1bHQgKz0gJy8nO1xuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHJlc29sdmVQYXRobmFtZTsiLCJ2YXIgX3R5cGVvZiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07XG5cbmZ1bmN0aW9uIHZhbHVlRXF1YWwoYSwgYikge1xuICBpZiAoYSA9PT0gYikgcmV0dXJuIHRydWU7XG5cbiAgaWYgKGEgPT0gbnVsbCB8fCBiID09IG51bGwpIHJldHVybiBmYWxzZTtcblxuICBpZiAoQXJyYXkuaXNBcnJheShhKSkge1xuICAgIHJldHVybiBBcnJheS5pc0FycmF5KGIpICYmIGEubGVuZ3RoID09PSBiLmxlbmd0aCAmJiBhLmV2ZXJ5KGZ1bmN0aW9uIChpdGVtLCBpbmRleCkge1xuICAgICAgcmV0dXJuIHZhbHVlRXF1YWwoaXRlbSwgYltpbmRleF0pO1xuICAgIH0pO1xuICB9XG5cbiAgdmFyIGFUeXBlID0gdHlwZW9mIGEgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKGEpO1xuICB2YXIgYlR5cGUgPSB0eXBlb2YgYiA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YoYik7XG5cbiAgaWYgKGFUeXBlICE9PSBiVHlwZSkgcmV0dXJuIGZhbHNlO1xuXG4gIGlmIChhVHlwZSA9PT0gJ29iamVjdCcpIHtcbiAgICB2YXIgYVZhbHVlID0gYS52YWx1ZU9mKCk7XG4gICAgdmFyIGJWYWx1ZSA9IGIudmFsdWVPZigpO1xuXG4gICAgaWYgKGFWYWx1ZSAhPT0gYSB8fCBiVmFsdWUgIT09IGIpIHJldHVybiB2YWx1ZUVxdWFsKGFWYWx1ZSwgYlZhbHVlKTtcblxuICAgIHZhciBhS2V5cyA9IE9iamVjdC5rZXlzKGEpO1xuICAgIHZhciBiS2V5cyA9IE9iamVjdC5rZXlzKGIpO1xuXG4gICAgaWYgKGFLZXlzLmxlbmd0aCAhPT0gYktleXMubGVuZ3RoKSByZXR1cm4gZmFsc2U7XG5cbiAgICByZXR1cm4gYUtleXMuZXZlcnkoZnVuY3Rpb24gKGtleSkge1xuICAgICAgcmV0dXJuIHZhbHVlRXF1YWwoYVtrZXldLCBiW2tleV0pO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5leHBvcnQgZGVmYXVsdCB2YWx1ZUVxdWFsOyIsImV4cG9ydCB2YXIgYWRkTGVhZGluZ1NsYXNoID0gZnVuY3Rpb24gYWRkTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLycgPyBwYXRoIDogJy8nICsgcGF0aDtcbn07XG5cbmV4cG9ydCB2YXIgc3RyaXBMZWFkaW5nU2xhc2ggPSBmdW5jdGlvbiBzdHJpcExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aC5zdWJzdHIoMSkgOiBwYXRoO1xufTtcblxuZXhwb3J0IHZhciBoYXNCYXNlbmFtZSA9IGZ1bmN0aW9uIGhhc0Jhc2VuYW1lKHBhdGgsIHByZWZpeCkge1xuICByZXR1cm4gbmV3IFJlZ0V4cCgnXicgKyBwcmVmaXggKyAnKFxcXFwvfFxcXFw/fCN8JCknLCAnaScpLnRlc3QocGF0aCk7XG59O1xuXG5leHBvcnQgdmFyIHN0cmlwQmFzZW5hbWUgPSBmdW5jdGlvbiBzdHJpcEJhc2VuYW1lKHBhdGgsIHByZWZpeCkge1xuICByZXR1cm4gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSA/IHBhdGguc3Vic3RyKHByZWZpeC5sZW5ndGgpIDogcGF0aDtcbn07XG5cbmV4cG9ydCB2YXIgc3RyaXBUcmFpbGluZ1NsYXNoID0gZnVuY3Rpb24gc3RyaXBUcmFpbGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KHBhdGgubGVuZ3RoIC0gMSkgPT09ICcvJyA/IHBhdGguc2xpY2UoMCwgLTEpIDogcGF0aDtcbn07XG5cbmV4cG9ydCB2YXIgcGFyc2VQYXRoID0gZnVuY3Rpb24gcGFyc2VQYXRoKHBhdGgpIHtcbiAgdmFyIHBhdGhuYW1lID0gcGF0aCB8fCAnLyc7XG4gIHZhciBzZWFyY2ggPSAnJztcbiAgdmFyIGhhc2ggPSAnJztcblxuICB2YXIgaGFzaEluZGV4ID0gcGF0aG5hbWUuaW5kZXhPZignIycpO1xuICBpZiAoaGFzaEluZGV4ICE9PSAtMSkge1xuICAgIGhhc2ggPSBwYXRobmFtZS5zdWJzdHIoaGFzaEluZGV4KTtcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBoYXNoSW5kZXgpO1xuICB9XG5cbiAgdmFyIHNlYXJjaEluZGV4ID0gcGF0aG5hbWUuaW5kZXhPZignPycpO1xuICBpZiAoc2VhcmNoSW5kZXggIT09IC0xKSB7XG4gICAgc2VhcmNoID0gcGF0aG5hbWUuc3Vic3RyKHNlYXJjaEluZGV4KTtcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBzZWFyY2hJbmRleCk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHBhdGhuYW1lOiBwYXRobmFtZSxcbiAgICBzZWFyY2g6IHNlYXJjaCA9PT0gJz8nID8gJycgOiBzZWFyY2gsXG4gICAgaGFzaDogaGFzaCA9PT0gJyMnID8gJycgOiBoYXNoXG4gIH07XG59O1xuXG5leHBvcnQgdmFyIGNyZWF0ZVBhdGggPSBmdW5jdGlvbiBjcmVhdGVQYXRoKGxvY2F0aW9uKSB7XG4gIHZhciBwYXRobmFtZSA9IGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgc2VhcmNoID0gbG9jYXRpb24uc2VhcmNoLFxuICAgICAgaGFzaCA9IGxvY2F0aW9uLmhhc2g7XG5cblxuICB2YXIgcGF0aCA9IHBhdGhuYW1lIHx8ICcvJztcblxuICBpZiAoc2VhcmNoICYmIHNlYXJjaCAhPT0gJz8nKSBwYXRoICs9IHNlYXJjaC5jaGFyQXQoMCkgPT09ICc/JyA/IHNlYXJjaCA6ICc/JyArIHNlYXJjaDtcblxuICBpZiAoaGFzaCAmJiBoYXNoICE9PSAnIycpIHBhdGggKz0gaGFzaC5jaGFyQXQoMCkgPT09ICcjJyA/IGhhc2ggOiAnIycgKyBoYXNoO1xuXG4gIHJldHVybiBwYXRoO1xufTsiLCJ2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5pbXBvcnQgcmVzb2x2ZVBhdGhuYW1lIGZyb20gJ3Jlc29sdmUtcGF0aG5hbWUnO1xuaW1wb3J0IHZhbHVlRXF1YWwgZnJvbSAndmFsdWUtZXF1YWwnO1xuaW1wb3J0IHsgcGFyc2VQYXRoIH0gZnJvbSAnLi9QYXRoVXRpbHMnO1xuXG5leHBvcnQgdmFyIGNyZWF0ZUxvY2F0aW9uID0gZnVuY3Rpb24gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGtleSwgY3VycmVudExvY2F0aW9uKSB7XG4gIHZhciBsb2NhdGlvbiA9IHZvaWQgMDtcbiAgaWYgKHR5cGVvZiBwYXRoID09PSAnc3RyaW5nJykge1xuICAgIC8vIFR3by1hcmcgZm9ybTogcHVzaChwYXRoLCBzdGF0ZSlcbiAgICBsb2NhdGlvbiA9IHBhcnNlUGF0aChwYXRoKTtcbiAgICBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xuICB9IGVsc2Uge1xuICAgIC8vIE9uZS1hcmcgZm9ybTogcHVzaChsb2NhdGlvbilcbiAgICBsb2NhdGlvbiA9IF9leHRlbmRzKHt9LCBwYXRoKTtcblxuICAgIGlmIChsb2NhdGlvbi5wYXRobmFtZSA9PT0gdW5kZWZpbmVkKSBsb2NhdGlvbi5wYXRobmFtZSA9ICcnO1xuXG4gICAgaWYgKGxvY2F0aW9uLnNlYXJjaCkge1xuICAgICAgaWYgKGxvY2F0aW9uLnNlYXJjaC5jaGFyQXQoMCkgIT09ICc/JykgbG9jYXRpb24uc2VhcmNoID0gJz8nICsgbG9jYXRpb24uc2VhcmNoO1xuICAgIH0gZWxzZSB7XG4gICAgICBsb2NhdGlvbi5zZWFyY2ggPSAnJztcbiAgICB9XG5cbiAgICBpZiAobG9jYXRpb24uaGFzaCkge1xuICAgICAgaWYgKGxvY2F0aW9uLmhhc2guY2hhckF0KDApICE9PSAnIycpIGxvY2F0aW9uLmhhc2ggPSAnIycgKyBsb2NhdGlvbi5oYXNoO1xuICAgIH0gZWxzZSB7XG4gICAgICBsb2NhdGlvbi5oYXNoID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKHN0YXRlICE9PSB1bmRlZmluZWQgJiYgbG9jYXRpb24uc3RhdGUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgbG9jYXRpb24ucGF0aG5hbWUgPSBkZWNvZGVVUkkobG9jYXRpb24ucGF0aG5hbWUpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiBVUklFcnJvcikge1xuICAgICAgdGhyb3cgbmV3IFVSSUVycm9yKCdQYXRobmFtZSBcIicgKyBsb2NhdGlvbi5wYXRobmFtZSArICdcIiBjb3VsZCBub3QgYmUgZGVjb2RlZC4gJyArICdUaGlzIGlzIGxpa2VseSBjYXVzZWQgYnkgYW4gaW52YWxpZCBwZXJjZW50LWVuY29kaW5nLicpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBlO1xuICAgIH1cbiAgfVxuXG4gIGlmIChrZXkpIGxvY2F0aW9uLmtleSA9IGtleTtcblxuICBpZiAoY3VycmVudExvY2F0aW9uKSB7XG4gICAgLy8gUmVzb2x2ZSBpbmNvbXBsZXRlL3JlbGF0aXZlIHBhdGhuYW1lIHJlbGF0aXZlIHRvIGN1cnJlbnQgbG9jYXRpb24uXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSBjdXJyZW50TG9jYXRpb24ucGF0aG5hbWU7XG4gICAgfSBlbHNlIGlmIChsb2NhdGlvbi5wYXRobmFtZS5jaGFyQXQoMCkgIT09ICcvJykge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSByZXNvbHZlUGF0aG5hbWUobG9jYXRpb24ucGF0aG5hbWUsIGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIC8vIFdoZW4gdGhlcmUgaXMgbm8gcHJpb3IgbG9jYXRpb24gYW5kIHBhdGhuYW1lIGlzIGVtcHR5LCBzZXQgaXQgdG8gL1xuICAgIGlmICghbG9jYXRpb24ucGF0aG5hbWUpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gJy8nO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBsb2NhdGlvbjtcbn07XG5cbmV4cG9ydCB2YXIgbG9jYXRpb25zQXJlRXF1YWwgPSBmdW5jdGlvbiBsb2NhdGlvbnNBcmVFcXVhbChhLCBiKSB7XG4gIHJldHVybiBhLnBhdGhuYW1lID09PSBiLnBhdGhuYW1lICYmIGEuc2VhcmNoID09PSBiLnNlYXJjaCAmJiBhLmhhc2ggPT09IGIuaGFzaCAmJiBhLmtleSA9PT0gYi5rZXkgJiYgdmFsdWVFcXVhbChhLnN0YXRlLCBiLnN0YXRlKTtcbn07IiwiaW1wb3J0IHdhcm5pbmcgZnJvbSAnd2FybmluZyc7XG5cbnZhciBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlciA9IGZ1bmN0aW9uIGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCkge1xuICB2YXIgcHJvbXB0ID0gbnVsbDtcblxuICB2YXIgc2V0UHJvbXB0ID0gZnVuY3Rpb24gc2V0UHJvbXB0KG5leHRQcm9tcHQpIHtcbiAgICB3YXJuaW5nKHByb21wdCA9PSBudWxsLCAnQSBoaXN0b3J5IHN1cHBvcnRzIG9ubHkgb25lIHByb21wdCBhdCBhIHRpbWUnKTtcblxuICAgIHByb21wdCA9IG5leHRQcm9tcHQ7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKHByb21wdCA9PT0gbmV4dFByb21wdCkgcHJvbXB0ID0gbnVsbDtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBjb25maXJtVHJhbnNpdGlvblRvID0gZnVuY3Rpb24gY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBjYWxsYmFjaykge1xuICAgIC8vIFRPRE86IElmIGFub3RoZXIgdHJhbnNpdGlvbiBzdGFydHMgd2hpbGUgd2UncmUgc3RpbGwgY29uZmlybWluZ1xuICAgIC8vIHRoZSBwcmV2aW91cyBvbmUsIHdlIG1heSBlbmQgdXAgaW4gYSB3ZWlyZCBzdGF0ZS4gRmlndXJlIG91dCB0aGVcbiAgICAvLyBiZXN0IHdheSB0byBoYW5kbGUgdGhpcy5cbiAgICBpZiAocHJvbXB0ICE9IG51bGwpIHtcbiAgICAgIHZhciByZXN1bHQgPSB0eXBlb2YgcHJvbXB0ID09PSAnZnVuY3Rpb24nID8gcHJvbXB0KGxvY2F0aW9uLCBhY3Rpb24pIDogcHJvbXB0O1xuXG4gICAgICBpZiAodHlwZW9mIHJlc3VsdCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBnZXRVc2VyQ29uZmlybWF0aW9uID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbihyZXN1bHQsIGNhbGxiYWNrKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB3YXJuaW5nKGZhbHNlLCAnQSBoaXN0b3J5IG5lZWRzIGEgZ2V0VXNlckNvbmZpcm1hdGlvbiBmdW5jdGlvbiBpbiBvcmRlciB0byB1c2UgYSBwcm9tcHQgbWVzc2FnZScpO1xuXG4gICAgICAgICAgY2FsbGJhY2sodHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIFJldHVybiBmYWxzZSBmcm9tIGEgdHJhbnNpdGlvbiBob29rIHRvIGNhbmNlbCB0aGUgdHJhbnNpdGlvbi5cbiAgICAgICAgY2FsbGJhY2socmVzdWx0ICE9PSBmYWxzZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGNhbGxiYWNrKHRydWUpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgbGlzdGVuZXJzID0gW107XG5cbiAgdmFyIGFwcGVuZExpc3RlbmVyID0gZnVuY3Rpb24gYXBwZW5kTGlzdGVuZXIoZm4pIHtcbiAgICB2YXIgaXNBY3RpdmUgPSB0cnVlO1xuXG4gICAgdmFyIGxpc3RlbmVyID0gZnVuY3Rpb24gbGlzdGVuZXIoKSB7XG4gICAgICBpZiAoaXNBY3RpdmUpIGZuLmFwcGx5KHVuZGVmaW5lZCwgYXJndW1lbnRzKTtcbiAgICB9O1xuXG4gICAgbGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlzQWN0aXZlID0gZmFsc2U7XG4gICAgICBsaXN0ZW5lcnMgPSBsaXN0ZW5lcnMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgIHJldHVybiBpdGVtICE9PSBsaXN0ZW5lcjtcbiAgICAgIH0pO1xuICAgIH07XG4gIH07XG5cbiAgdmFyIG5vdGlmeUxpc3RlbmVycyA9IGZ1bmN0aW9uIG5vdGlmeUxpc3RlbmVycygpIHtcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBsaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbiAobGlzdGVuZXIpIHtcbiAgICAgIHJldHVybiBsaXN0ZW5lci5hcHBseSh1bmRlZmluZWQsIGFyZ3MpO1xuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiB7XG4gICAgc2V0UHJvbXB0OiBzZXRQcm9tcHQsXG4gICAgY29uZmlybVRyYW5zaXRpb25UbzogY29uZmlybVRyYW5zaXRpb25UbyxcbiAgICBhcHBlbmRMaXN0ZW5lcjogYXBwZW5kTGlzdGVuZXIsXG4gICAgbm90aWZ5TGlzdGVuZXJzOiBub3RpZnlMaXN0ZW5lcnNcbiAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyOyIsImV4cG9ydCB2YXIgY2FuVXNlRE9NID0gISEodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmRvY3VtZW50ICYmIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcblxuZXhwb3J0IHZhciBhZGRFdmVudExpc3RlbmVyID0gZnVuY3Rpb24gYWRkRXZlbnRMaXN0ZW5lcihub2RlLCBldmVudCwgbGlzdGVuZXIpIHtcbiAgcmV0dXJuIG5vZGUuYWRkRXZlbnRMaXN0ZW5lciA/IG5vZGUuYWRkRXZlbnRMaXN0ZW5lcihldmVudCwgbGlzdGVuZXIsIGZhbHNlKSA6IG5vZGUuYXR0YWNoRXZlbnQoJ29uJyArIGV2ZW50LCBsaXN0ZW5lcik7XG59O1xuXG5leHBvcnQgdmFyIHJlbW92ZUV2ZW50TGlzdGVuZXIgPSBmdW5jdGlvbiByZW1vdmVFdmVudExpc3RlbmVyKG5vZGUsIGV2ZW50LCBsaXN0ZW5lcikge1xuICByZXR1cm4gbm9kZS5yZW1vdmVFdmVudExpc3RlbmVyID8gbm9kZS5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LCBsaXN0ZW5lciwgZmFsc2UpIDogbm9kZS5kZXRhY2hFdmVudCgnb24nICsgZXZlbnQsIGxpc3RlbmVyKTtcbn07XG5cbmV4cG9ydCB2YXIgZ2V0Q29uZmlybWF0aW9uID0gZnVuY3Rpb24gZ2V0Q29uZmlybWF0aW9uKG1lc3NhZ2UsIGNhbGxiYWNrKSB7XG4gIHJldHVybiBjYWxsYmFjayh3aW5kb3cuY29uZmlybShtZXNzYWdlKSk7XG59OyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWFsZXJ0XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpcyBzdXBwb3J0ZWQuIFRha2VuIGZyb20gTW9kZXJuaXpyLlxuICpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb2Rlcm5penIvTW9kZXJuaXpyL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb2Rlcm5penIvTW9kZXJuaXpyL2Jsb2IvbWFzdGVyL2ZlYXR1cmUtZGV0ZWN0cy9oaXN0b3J5LmpzXG4gKiBjaGFuZ2VkIHRvIGF2b2lkIGZhbHNlIG5lZ2F0aXZlcyBmb3IgV2luZG93cyBQaG9uZXM6IGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdGpzL3JlYWN0LXJvdXRlci9pc3N1ZXMvNTg2XG4gKi9cbmV4cG9ydCB2YXIgc3VwcG9ydHNIaXN0b3J5ID0gZnVuY3Rpb24gc3VwcG9ydHNIaXN0b3J5KCkge1xuICB2YXIgdWEgPSB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudDtcblxuICBpZiAoKHVhLmluZGV4T2YoJ0FuZHJvaWQgMi4nKSAhPT0gLTEgfHwgdWEuaW5kZXhPZignQW5kcm9pZCA0LjAnKSAhPT0gLTEpICYmIHVhLmluZGV4T2YoJ01vYmlsZSBTYWZhcmknKSAhPT0gLTEgJiYgdWEuaW5kZXhPZignQ2hyb21lJykgPT09IC0xICYmIHVhLmluZGV4T2YoJ1dpbmRvd3MgUGhvbmUnKSA9PT0gLTEpIHJldHVybiBmYWxzZTtcblxuICByZXR1cm4gd2luZG93Lmhpc3RvcnkgJiYgJ3B1c2hTdGF0ZScgaW4gd2luZG93Lmhpc3Rvcnk7XG59O1xuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBicm93c2VyIGZpcmVzIHBvcHN0YXRlIG9uIGhhc2ggY2hhbmdlLlxuICogSUUxMCBhbmQgSUUxMSBkbyBub3QuXG4gKi9cbmV4cG9ydCB2YXIgc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSA9IGZ1bmN0aW9uIHN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UoKSB7XG4gIHJldHVybiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdUcmlkZW50JykgPT09IC0xO1xufTtcblxuLyoqXG4gKiBSZXR1cm5zIGZhbHNlIGlmIHVzaW5nIGdvKG4pIHdpdGggaGFzaCBoaXN0b3J5IGNhdXNlcyBhIGZ1bGwgcGFnZSByZWxvYWQuXG4gKi9cbmV4cG9ydCB2YXIgc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2ggPSBmdW5jdGlvbiBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpIHtcbiAgcmV0dXJuIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0ZpcmVmb3gnKSA9PT0gLTE7XG59O1xuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBhIGdpdmVuIHBvcHN0YXRlIGV2ZW50IGlzIGFuIGV4dHJhbmVvdXMgV2ViS2l0IGV2ZW50LlxuICogQWNjb3VudHMgZm9yIHRoZSBmYWN0IHRoYXQgQ2hyb21lIG9uIGlPUyBmaXJlcyByZWFsIHBvcHN0YXRlIGV2ZW50c1xuICogY29udGFpbmluZyB1bmRlZmluZWQgc3RhdGUgd2hlbiBwcmVzc2luZyB0aGUgYmFjayBidXR0b24uXG4gKi9cbmV4cG9ydCB2YXIgaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudCA9IGZ1bmN0aW9uIGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpIHtcbiAgcmV0dXJuIGV2ZW50LnN0YXRlID09PSB1bmRlZmluZWQgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdDcmlPUycpID09PSAtMTtcbn07IiwidmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5pbXBvcnQgd2FybmluZyBmcm9tICd3YXJuaW5nJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAnaW52YXJpYW50JztcbmltcG9ydCB7IGNyZWF0ZUxvY2F0aW9uIH0gZnJvbSAnLi9Mb2NhdGlvblV0aWxzJztcbmltcG9ydCB7IGFkZExlYWRpbmdTbGFzaCwgc3RyaXBUcmFpbGluZ1NsYXNoLCBoYXNCYXNlbmFtZSwgc3RyaXBCYXNlbmFtZSwgY3JlYXRlUGF0aCB9IGZyb20gJy4vUGF0aFV0aWxzJztcbmltcG9ydCBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlciBmcm9tICcuL2NyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyJztcbmltcG9ydCB7IGNhblVzZURPTSwgYWRkRXZlbnRMaXN0ZW5lciwgcmVtb3ZlRXZlbnRMaXN0ZW5lciwgZ2V0Q29uZmlybWF0aW9uLCBzdXBwb3J0c0hpc3RvcnksIHN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UsIGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQgfSBmcm9tICcuL0RPTVV0aWxzJztcblxudmFyIFBvcFN0YXRlRXZlbnQgPSAncG9wc3RhdGUnO1xudmFyIEhhc2hDaGFuZ2VFdmVudCA9ICdoYXNoY2hhbmdlJztcblxudmFyIGdldEhpc3RvcnlTdGF0ZSA9IGZ1bmN0aW9uIGdldEhpc3RvcnlTdGF0ZSgpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gd2luZG93Lmhpc3Rvcnkuc3RhdGUgfHwge307XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICAvLyBJRSAxMSBzb21ldGltZXMgdGhyb3dzIHdoZW4gYWNjZXNzaW5nIHdpbmRvdy5oaXN0b3J5LnN0YXRlXG4gICAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9SZWFjdFRyYWluaW5nL2hpc3RvcnkvcHVsbC8yODlcbiAgICByZXR1cm4ge307XG4gIH1cbn07XG5cbi8qKlxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgdXNlcyB0aGUgSFRNTDUgaGlzdG9yeSBBUEkgaW5jbHVkaW5nXG4gKiBwdXNoU3RhdGUsIHJlcGxhY2VTdGF0ZSwgYW5kIHRoZSBwb3BzdGF0ZSBldmVudC5cbiAqL1xudmFyIGNyZWF0ZUJyb3dzZXJIaXN0b3J5ID0gZnVuY3Rpb24gY3JlYXRlQnJvd3Nlckhpc3RvcnkoKSB7XG4gIHZhciBwcm9wcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG5cbiAgaW52YXJpYW50KGNhblVzZURPTSwgJ0Jyb3dzZXIgaGlzdG9yeSBuZWVkcyBhIERPTScpO1xuXG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG4gIHZhciBjYW5Vc2VIaXN0b3J5ID0gc3VwcG9ydHNIaXN0b3J5KCk7XG4gIHZhciBuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciA9ICFzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlKCk7XG5cbiAgdmFyIF9wcm9wcyRmb3JjZVJlZnJlc2ggPSBwcm9wcy5mb3JjZVJlZnJlc2gsXG4gICAgICBmb3JjZVJlZnJlc2ggPSBfcHJvcHMkZm9yY2VSZWZyZXNoID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IF9wcm9wcyRmb3JjZVJlZnJlc2gsXG4gICAgICBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBwcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9PT0gdW5kZWZpbmVkID8gZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IHByb3BzLmtleUxlbmd0aCxcbiAgICAgIGtleUxlbmd0aCA9IF9wcm9wcyRrZXlMZW5ndGggPT09IHVuZGVmaW5lZCA/IDYgOiBfcHJvcHMka2V5TGVuZ3RoO1xuXG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XG5cbiAgdmFyIGdldERPTUxvY2F0aW9uID0gZnVuY3Rpb24gZ2V0RE9NTG9jYXRpb24oaGlzdG9yeVN0YXRlKSB7XG4gICAgdmFyIF9yZWYgPSBoaXN0b3J5U3RhdGUgfHwge30sXG4gICAgICAgIGtleSA9IF9yZWYua2V5LFxuICAgICAgICBzdGF0ZSA9IF9yZWYuc3RhdGU7XG5cbiAgICB2YXIgX3dpbmRvdyRsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbixcbiAgICAgICAgcGF0aG5hbWUgPSBfd2luZG93JGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgICBzZWFyY2ggPSBfd2luZG93JGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgICAgaGFzaCA9IF93aW5kb3ckbG9jYXRpb24uaGFzaDtcblxuXG4gICAgdmFyIHBhdGggPSBwYXRobmFtZSArIHNlYXJjaCArIGhhc2g7XG5cbiAgICB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpO1xuXG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XG5cbiAgICByZXR1cm4gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGtleSk7XG4gIH07XG5cbiAgdmFyIGNyZWF0ZUtleSA9IGZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XG4gIH07XG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICB2YXIgc2V0U3RhdGUgPSBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH07XG5cbiAgdmFyIGhhbmRsZVBvcFN0YXRlID0gZnVuY3Rpb24gaGFuZGxlUG9wU3RhdGUoZXZlbnQpIHtcbiAgICAvLyBJZ25vcmUgZXh0cmFuZW91cyBwb3BzdGF0ZSBldmVudHMgaW4gV2ViS2l0LlxuICAgIGlmIChpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50KGV2ZW50KSkgcmV0dXJuO1xuXG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGV2ZW50LnN0YXRlKSk7XG4gIH07XG5cbiAgdmFyIGhhbmRsZUhhc2hDaGFuZ2UgPSBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xuICAgIGhhbmRsZVBvcChnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSkpO1xuICB9O1xuXG4gIHZhciBmb3JjZU5leHRQb3AgPSBmYWxzZTtcblxuICB2YXIgaGFuZGxlUG9wID0gZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG5cbiAgICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICAgIGlmIChvaykge1xuICAgICAgICAgIHNldFN0YXRlKHsgYWN0aW9uOiBhY3Rpb24sIGxvY2F0aW9uOiBsb2NhdGlvbiB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIHJldmVydFBvcCA9IGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247XG5cbiAgICAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIGtleXMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cbiAgICAvLyBJbnN0ZWFkLCB3ZSBqdXN0IGRlZmF1bHQgdG8gMCBmb3Iga2V5cyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxLZXlzLmluZGV4T2YodG9Mb2NhdGlvbi5rZXkpO1xuXG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcblxuICAgIHZhciBmcm9tSW5kZXggPSBhbGxLZXlzLmluZGV4T2YoZnJvbUxvY2F0aW9uLmtleSk7XG5cbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcblxuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XG5cbiAgICBpZiAoZGVsdGEpIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XG4gICAgICBnbyhkZWx0YSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSk7XG4gIHZhciBhbGxLZXlzID0gW2luaXRpYWxMb2NhdGlvbi5rZXldO1xuXG4gIC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICB2YXIgY3JlYXRlSHJlZiA9IGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcbiAgICByZXR1cm4gYmFzZW5hbWUgKyBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgfTtcblxuICB2YXIgcHVzaCA9IGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICB3YXJuaW5nKCEoKHR5cGVvZiBwYXRoID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihwYXRoKSkgPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJyk7XG5cbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuXG4gICAgICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcbiAgICAgICAgICBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlO1xuXG5cbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucHVzaFN0YXRlKHsga2V5OiBrZXksIHN0YXRlOiBzdGF0ZSB9LCBudWxsLCBocmVmKTtcblxuICAgICAgICBpZiAoZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxLZXlzLmluZGV4T2YoaGlzdG9yeS5sb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIHZhciBuZXh0S2V5cyA9IGFsbEtleXMuc2xpY2UoMCwgcHJldkluZGV4ID09PSAtMSA/IDAgOiBwcmV2SW5kZXggKyAxKTtcblxuICAgICAgICAgIG5leHRLZXlzLnB1c2gobG9jYXRpb24ua2V5KTtcbiAgICAgICAgICBhbGxLZXlzID0gbmV4dEtleXM7XG5cbiAgICAgICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKTtcblxuICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGhyZWY7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIHJlcGxhY2UgPSBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgd2FybmluZyghKCh0eXBlb2YgcGF0aCA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YocGF0aCkpID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byByZXBsYWNlIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcblxuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXksXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcblxuXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnJlcGxhY2VTdGF0ZSh7IGtleToga2V5LCBzdGF0ZTogc3RhdGUgfSwgbnVsbCwgaHJlZik7XG5cbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGhyZWYpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxLZXlzLmluZGV4T2YoaGlzdG9yeS5sb2NhdGlvbi5rZXkpO1xuXG4gICAgICAgICAgaWYgKHByZXZJbmRleCAhPT0gLTEpIGFsbEtleXNbcHJldkluZGV4XSA9IGxvY2F0aW9uLmtleTtcblxuICAgICAgICAgIHNldFN0YXRlKHsgYWN0aW9uOiBhY3Rpb24sIGxvY2F0aW9uOiBsb2NhdGlvbiB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnQnJvd3NlciBoaXN0b3J5IGNhbm5vdCByZXBsYWNlIHN0YXRlIGluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgSFRNTDUgaGlzdG9yeScpO1xuXG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGhyZWYpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIHZhciBnbyA9IGZ1bmN0aW9uIGdvKG4pIHtcbiAgICBnbG9iYWxIaXN0b3J5LmdvKG4pO1xuICB9O1xuXG4gIHZhciBnb0JhY2sgPSBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgcmV0dXJuIGdvKC0xKTtcbiAgfTtcblxuICB2YXIgZ29Gb3J3YXJkID0gZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIHJldHVybiBnbygxKTtcbiAgfTtcblxuICB2YXIgbGlzdGVuZXJDb3VudCA9IDA7XG5cbiAgdmFyIGNoZWNrRE9NTGlzdGVuZXJzID0gZnVuY3Rpb24gY2hlY2tET01MaXN0ZW5lcnMoZGVsdGEpIHtcbiAgICBsaXN0ZW5lckNvdW50ICs9IGRlbHRhO1xuXG4gICAgaWYgKGxpc3RlbmVyQ291bnQgPT09IDEpIHtcbiAgICAgIGFkZEV2ZW50TGlzdGVuZXIod2luZG93LCBQb3BTdGF0ZUV2ZW50LCBoYW5kbGVQb3BTdGF0ZSk7XG5cbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgYWRkRXZlbnRMaXN0ZW5lcih3aW5kb3csIEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XG4gICAgICByZW1vdmVFdmVudExpc3RlbmVyKHdpbmRvdywgUG9wU3RhdGVFdmVudCwgaGFuZGxlUG9wU3RhdGUpO1xuXG4gICAgICBpZiAobmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIpIHJlbW92ZUV2ZW50TGlzdGVuZXIod2luZG93LCBIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgdmFyIGJsb2NrID0gZnVuY3Rpb24gYmxvY2soKSB7XG4gICAgdmFyIHByb21wdCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogZmFsc2U7XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH07XG5cbiAgdmFyIGxpc3RlbiA9IGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHZhciB1bmxpc3RlbiA9IHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB1bmxpc3RlbigpO1xuICAgIH07XG4gIH07XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBnbG9iYWxIaXN0b3J5Lmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuXG4gIHJldHVybiBoaXN0b3J5O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlQnJvd3Nlckhpc3Rvcnk7IiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgd2FybmluZyBmcm9tIFwid2FybmluZ1wiO1xuaW1wb3J0IGludmFyaWFudCBmcm9tIFwiaW52YXJpYW50XCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHB1dHRpbmcgaGlzdG9yeSBvbiBjb250ZXh0LlxuICovXG5cbnZhciBSb3V0ZXIgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBSb3V0ZXIoKSB7XG4gICAgdmFyIF90ZW1wLCBfdGhpcywgX3JldDtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSb3V0ZXIpO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIF9yZXQgPSAoX3RlbXAgPSAoX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkpLCBfdGhpcyksIF90aGlzLnN0YXRlID0ge1xuICAgICAgbWF0Y2g6IF90aGlzLmNvbXB1dGVNYXRjaChfdGhpcy5wcm9wcy5oaXN0b3J5LmxvY2F0aW9uLnBhdGhuYW1lKVxuICAgIH0sIF90ZW1wKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMsIF9yZXQpO1xuICB9XG5cbiAgUm91dGVyLnByb3RvdHlwZS5nZXRDaGlsZENvbnRleHQgPSBmdW5jdGlvbiBnZXRDaGlsZENvbnRleHQoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJvdXRlcjogX2V4dGVuZHMoe30sIHRoaXMuY29udGV4dC5yb3V0ZXIsIHtcbiAgICAgICAgaGlzdG9yeTogdGhpcy5wcm9wcy5oaXN0b3J5LFxuICAgICAgICByb3V0ZToge1xuICAgICAgICAgIGxvY2F0aW9uOiB0aGlzLnByb3BzLmhpc3RvcnkubG9jYXRpb24sXG4gICAgICAgICAgbWF0Y2g6IHRoaXMuc3RhdGUubWF0Y2hcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9O1xuICB9O1xuXG4gIFJvdXRlci5wcm90b3R5cGUuY29tcHV0ZU1hdGNoID0gZnVuY3Rpb24gY29tcHV0ZU1hdGNoKHBhdGhuYW1lKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdGg6IFwiL1wiLFxuICAgICAgdXJsOiBcIi9cIixcbiAgICAgIHBhcmFtczoge30sXG4gICAgICBpc0V4YWN0OiBwYXRobmFtZSA9PT0gXCIvXCJcbiAgICB9O1xuICB9O1xuXG4gIFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50V2lsbE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgdmFyIF9wcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIGNoaWxkcmVuID0gX3Byb3BzLmNoaWxkcmVuLFxuICAgICAgICBoaXN0b3J5ID0gX3Byb3BzLmhpc3Rvcnk7XG5cblxuICAgIGludmFyaWFudChjaGlsZHJlbiA9PSBudWxsIHx8IFJlYWN0LkNoaWxkcmVuLmNvdW50KGNoaWxkcmVuKSA9PT0gMSwgXCJBIDxSb3V0ZXI+IG1heSBoYXZlIG9ubHkgb25lIGNoaWxkIGVsZW1lbnRcIik7XG5cbiAgICAvLyBEbyB0aGlzIGhlcmUgc28gd2UgY2FuIHNldFN0YXRlIHdoZW4gYSA8UmVkaXJlY3Q+IGNoYW5nZXMgdGhlXG4gICAgLy8gbG9jYXRpb24gaW4gY29tcG9uZW50V2lsbE1vdW50LiBUaGlzIGhhcHBlbnMgZS5nLiB3aGVuIGRvaW5nXG4gICAgLy8gc2VydmVyIHJlbmRlcmluZyB1c2luZyBhIDxTdGF0aWNSb3V0ZXI+LlxuICAgIHRoaXMudW5saXN0ZW4gPSBoaXN0b3J5Lmxpc3RlbihmdW5jdGlvbiAoKSB7XG4gICAgICBfdGhpczIuc2V0U3RhdGUoe1xuICAgICAgICBtYXRjaDogX3RoaXMyLmNvbXB1dGVNYXRjaChoaXN0b3J5LmxvY2F0aW9uLnBhdGhuYW1lKVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICB3YXJuaW5nKHRoaXMucHJvcHMuaGlzdG9yeSA9PT0gbmV4dFByb3BzLmhpc3RvcnksIFwiWW91IGNhbm5vdCBjaGFuZ2UgPFJvdXRlciBoaXN0b3J5PlwiKTtcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgdGhpcy51bmxpc3RlbigpO1xuICB9O1xuXG4gIFJvdXRlci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBjaGlsZHJlbiA9IHRoaXMucHJvcHMuY2hpbGRyZW47XG5cbiAgICByZXR1cm4gY2hpbGRyZW4gPyBSZWFjdC5DaGlsZHJlbi5vbmx5KGNoaWxkcmVuKSA6IG51bGw7XG4gIH07XG5cbiAgcmV0dXJuIFJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgaGlzdG9yeTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGVcbn07XG5Sb3V0ZXIuY29udGV4dFR5cGVzID0ge1xuICByb3V0ZXI6IFByb3BUeXBlcy5vYmplY3Rcbn07XG5Sb3V0ZXIuY2hpbGRDb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IFJvdXRlcjsiLCJ2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5pbXBvcnQgd2FybmluZyBmcm9tICd3YXJuaW5nJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAnaW52YXJpYW50JztcbmltcG9ydCB7IGNyZWF0ZUxvY2F0aW9uLCBsb2NhdGlvbnNBcmVFcXVhbCB9IGZyb20gJy4vTG9jYXRpb25VdGlscyc7XG5pbXBvcnQgeyBhZGRMZWFkaW5nU2xhc2gsIHN0cmlwTGVhZGluZ1NsYXNoLCBzdHJpcFRyYWlsaW5nU2xhc2gsIGhhc0Jhc2VuYW1lLCBzdHJpcEJhc2VuYW1lLCBjcmVhdGVQYXRoIH0gZnJvbSAnLi9QYXRoVXRpbHMnO1xuaW1wb3J0IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyIGZyb20gJy4vY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXInO1xuaW1wb3J0IHsgY2FuVXNlRE9NLCBhZGRFdmVudExpc3RlbmVyLCByZW1vdmVFdmVudExpc3RlbmVyLCBnZXRDb25maXJtYXRpb24sIHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoIH0gZnJvbSAnLi9ET01VdGlscyc7XG5cbnZhciBIYXNoQ2hhbmdlRXZlbnQgPSAnaGFzaGNoYW5nZSc7XG5cbnZhciBIYXNoUGF0aENvZGVycyA9IHtcbiAgaGFzaGJhbmc6IHtcbiAgICBlbmNvZGVQYXRoOiBmdW5jdGlvbiBlbmNvZGVQYXRoKHBhdGgpIHtcbiAgICAgIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJyEnID8gcGF0aCA6ICchLycgKyBzdHJpcExlYWRpbmdTbGFzaChwYXRoKTtcbiAgICB9LFxuICAgIGRlY29kZVBhdGg6IGZ1bmN0aW9uIGRlY29kZVBhdGgocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XG4gICAgfVxuICB9LFxuICBub3NsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogc3RyaXBMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXG4gIH0sXG4gIHNsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoLFxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxuICB9XG59O1xuXG52YXIgZ2V0SGFzaFBhdGggPSBmdW5jdGlvbiBnZXRIYXNoUGF0aCgpIHtcbiAgLy8gV2UgY2FuJ3QgdXNlIHdpbmRvdy5sb2NhdGlvbi5oYXNoIGhlcmUgYmVjYXVzZSBpdCdzIG5vdFxuICAvLyBjb25zaXN0ZW50IGFjcm9zcyBicm93c2VycyAtIEZpcmVmb3ggd2lsbCBwcmUtZGVjb2RlIGl0IVxuICB2YXIgaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuICB2YXIgaGFzaEluZGV4ID0gaHJlZi5pbmRleE9mKCcjJyk7XG4gIHJldHVybiBoYXNoSW5kZXggPT09IC0xID8gJycgOiBocmVmLnN1YnN0cmluZyhoYXNoSW5kZXggKyAxKTtcbn07XG5cbnZhciBwdXNoSGFzaFBhdGggPSBmdW5jdGlvbiBwdXNoSGFzaFBhdGgocGF0aCkge1xuICByZXR1cm4gd2luZG93LmxvY2F0aW9uLmhhc2ggPSBwYXRoO1xufTtcblxudmFyIHJlcGxhY2VIYXNoUGF0aCA9IGZ1bmN0aW9uIHJlcGxhY2VIYXNoUGF0aChwYXRoKSB7XG4gIHZhciBoYXNoSW5kZXggPSB3aW5kb3cubG9jYXRpb24uaHJlZi5pbmRleE9mKCcjJyk7XG5cbiAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2Uod2luZG93LmxvY2F0aW9uLmhyZWYuc2xpY2UoMCwgaGFzaEluZGV4ID49IDAgPyBoYXNoSW5kZXggOiAwKSArICcjJyArIHBhdGgpO1xufTtcblxudmFyIGNyZWF0ZUhhc2hIaXN0b3J5ID0gZnVuY3Rpb24gY3JlYXRlSGFzaEhpc3RvcnkoKSB7XG4gIHZhciBwcm9wcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG5cbiAgaW52YXJpYW50KGNhblVzZURPTSwgJ0hhc2ggaGlzdG9yeSBuZWVkcyBhIERPTScpO1xuXG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG4gIHZhciBjYW5Hb1dpdGhvdXRSZWxvYWQgPSBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpO1xuXG4gIHZhciBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBwcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9PT0gdW5kZWZpbmVkID8gZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxuICAgICAgX3Byb3BzJGhhc2hUeXBlID0gcHJvcHMuaGFzaFR5cGUsXG4gICAgICBoYXNoVHlwZSA9IF9wcm9wcyRoYXNoVHlwZSA9PT0gdW5kZWZpbmVkID8gJ3NsYXNoJyA6IF9wcm9wcyRoYXNoVHlwZTtcblxuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6ICcnO1xuXG4gIHZhciBfSGFzaFBhdGhDb2RlcnMkaGFzaFQgPSBIYXNoUGF0aENvZGVyc1toYXNoVHlwZV0sXG4gICAgICBlbmNvZGVQYXRoID0gX0hhc2hQYXRoQ29kZXJzJGhhc2hULmVuY29kZVBhdGgsXG4gICAgICBkZWNvZGVQYXRoID0gX0hhc2hQYXRoQ29kZXJzJGhhc2hULmRlY29kZVBhdGg7XG5cblxuICB2YXIgZ2V0RE9NTG9jYXRpb24gPSBmdW5jdGlvbiBnZXRET01Mb2NhdGlvbigpIHtcbiAgICB2YXIgcGF0aCA9IGRlY29kZVBhdGgoZ2V0SGFzaFBhdGgoKSk7XG5cbiAgICB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpO1xuXG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XG5cbiAgICByZXR1cm4gY3JlYXRlTG9jYXRpb24ocGF0aCk7XG4gIH07XG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICB2YXIgc2V0U3RhdGUgPSBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH07XG5cbiAgdmFyIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICB2YXIgaWdub3JlUGF0aCA9IG51bGw7XG5cbiAgdmFyIGhhbmRsZUhhc2hDaGFuZ2UgPSBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xuICAgIHZhciBwYXRoID0gZ2V0SGFzaFBhdGgoKTtcbiAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuXG4gICAgaWYgKHBhdGggIT09IGVuY29kZWRQYXRoKSB7XG4gICAgICAvLyBFbnN1cmUgd2UgYWx3YXlzIGhhdmUgYSBwcm9wZXJseS1lbmNvZGVkIGhhc2guXG4gICAgICByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgbG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbigpO1xuICAgICAgdmFyIHByZXZMb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247XG5cbiAgICAgIGlmICghZm9yY2VOZXh0UG9wICYmIGxvY2F0aW9uc0FyZUVxdWFsKHByZXZMb2NhdGlvbiwgbG9jYXRpb24pKSByZXR1cm47IC8vIEEgaGFzaGNoYW5nZSBkb2Vzbid0IGFsd2F5cyA9PSBsb2NhdGlvbiBjaGFuZ2UuXG5cbiAgICAgIGlmIChpZ25vcmVQYXRoID09PSBjcmVhdGVQYXRoKGxvY2F0aW9uKSkgcmV0dXJuOyAvLyBJZ25vcmUgdGhpcyBjaGFuZ2U7IHdlIGFscmVhZHkgc2V0U3RhdGUgaW4gcHVzaC9yZXBsYWNlLlxuXG4gICAgICBpZ25vcmVQYXRoID0gbnVsbDtcblxuICAgICAgaGFuZGxlUG9wKGxvY2F0aW9uKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGhhbmRsZVBvcCA9IGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuXG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciByZXZlcnRQb3AgPSBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uO1xuXG4gICAgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBwYXRocyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBwYXRocyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKHRvTG9jYXRpb24pKTtcblxuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG5cbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aChmcm9tTG9jYXRpb24pKTtcblxuICAgIGlmIChmcm9tSW5kZXggPT09IC0xKSBmcm9tSW5kZXggPSAwO1xuXG4gICAgdmFyIGRlbHRhID0gdG9JbmRleCAtIGZyb21JbmRleDtcblxuICAgIGlmIChkZWx0YSkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gdHJ1ZTtcbiAgICAgIGdvKGRlbHRhKTtcbiAgICB9XG4gIH07XG5cbiAgLy8gRW5zdXJlIHRoZSBoYXNoIGlzIGVuY29kZWQgcHJvcGVybHkgYmVmb3JlIGRvaW5nIGFueXRoaW5nIGVsc2UuXG4gIHZhciBwYXRoID0gZ2V0SGFzaFBhdGgoKTtcbiAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcblxuICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG5cbiAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XG4gIHZhciBhbGxQYXRocyA9IFtjcmVhdGVQYXRoKGluaXRpYWxMb2NhdGlvbildO1xuXG4gIC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICB2YXIgY3JlYXRlSHJlZiA9IGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcbiAgICByZXR1cm4gJyMnICsgZW5jb2RlUGF0aChiYXNlbmFtZSArIGNyZWF0ZVBhdGgobG9jYXRpb24pKTtcbiAgfTtcblxuICB2YXIgcHVzaCA9IGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdIYXNoIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGU7IGl0IGlzIGlnbm9yZWQnKTtcblxuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGhpc3RvcnkubG9jYXRpb24pO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcblxuICAgICAgdmFyIHBhdGggPSBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgoYmFzZW5hbWUgKyBwYXRoKTtcbiAgICAgIHZhciBoYXNoQ2hhbmdlZCA9IGdldEhhc2hQYXRoKCkgIT09IGVuY29kZWRQYXRoO1xuXG4gICAgICBpZiAoaGFzaENoYW5nZWQpIHtcbiAgICAgICAgLy8gV2UgY2Fubm90IHRlbGwgaWYgYSBoYXNoY2hhbmdlIHdhcyBjYXVzZWQgYnkgYSBQVVNILCBzbyB3ZSdkXG4gICAgICAgIC8vIHJhdGhlciBzZXRTdGF0ZSBoZXJlIGFuZCBpZ25vcmUgdGhlIGhhc2hjaGFuZ2UuIFRoZSBjYXZlYXQgaGVyZVxuICAgICAgICAvLyBpcyB0aGF0IG90aGVyIGhhc2ggaGlzdG9yaWVzIGluIHRoZSBwYWdlIHdpbGwgY29uc2lkZXIgaXQgYSBQT1AuXG4gICAgICAgIGlnbm9yZVBhdGggPSBwYXRoO1xuICAgICAgICBwdXNoSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuXG4gICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGhpc3RvcnkubG9jYXRpb24pKTtcbiAgICAgICAgdmFyIG5leHRQYXRocyA9IGFsbFBhdGhzLnNsaWNlKDAsIHByZXZJbmRleCA9PT0gLTEgPyAwIDogcHJldkluZGV4ICsgMSk7XG5cbiAgICAgICAgbmV4dFBhdGhzLnB1c2gocGF0aCk7XG4gICAgICAgIGFsbFBhdGhzID0gbmV4dFBhdGhzO1xuXG4gICAgICAgIHNldFN0YXRlKHsgYWN0aW9uOiBhY3Rpb24sIGxvY2F0aW9uOiBsb2NhdGlvbiB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdhcm5pbmcoZmFsc2UsICdIYXNoIGhpc3RvcnkgY2Fubm90IFBVU0ggdGhlIHNhbWUgcGF0aDsgYSBuZXcgZW50cnkgd2lsbCBub3QgYmUgYWRkZWQgdG8gdGhlIGhpc3Rvcnkgc3RhY2snKTtcblxuICAgICAgICBzZXRTdGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIHZhciByZXBsYWNlID0gZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuXG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XG5cbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFJFUExBQ0UsIHNvIHdlJ2RcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XG4gICAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgICB9XG5cbiAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5pbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuXG4gICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsUGF0aHNbcHJldkluZGV4XSA9IHBhdGg7XG5cbiAgICAgIHNldFN0YXRlKHsgYWN0aW9uOiBhY3Rpb24sIGxvY2F0aW9uOiBsb2NhdGlvbiB9KTtcbiAgICB9KTtcbiAgfTtcblxuICB2YXIgZ28gPSBmdW5jdGlvbiBnbyhuKSB7XG4gICAgd2FybmluZyhjYW5Hb1dpdGhvdXRSZWxvYWQsICdIYXNoIGhpc3RvcnkgZ28obikgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZCBpbiB0aGlzIGJyb3dzZXInKTtcblxuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XG4gIH07XG5cbiAgdmFyIGdvQmFjayA9IGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICByZXR1cm4gZ28oLTEpO1xuICB9O1xuXG4gIHZhciBnb0ZvcndhcmQgPSBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgcmV0dXJuIGdvKDEpO1xuICB9O1xuXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMDtcblxuICB2YXIgY2hlY2tET01MaXN0ZW5lcnMgPSBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xuICAgIGxpc3RlbmVyQ291bnQgKz0gZGVsdGE7XG5cbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSkge1xuICAgICAgYWRkRXZlbnRMaXN0ZW5lcih3aW5kb3csIEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XG4gICAgICByZW1vdmVFdmVudExpc3RlbmVyKHdpbmRvdywgSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIHZhciBibG9jayA9IGZ1bmN0aW9uIGJsb2NrKCkge1xuICAgIHZhciBwcm9tcHQgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IGZhbHNlO1xuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBsaXN0ZW4gPSBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgdW5saXN0ZW4oKTtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcblxuICByZXR1cm4gaGlzdG9yeTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUhhc2hIaXN0b3J5OyIsInZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuaW1wb3J0IHdhcm5pbmcgZnJvbSAnd2FybmluZyc7XG5pbXBvcnQgeyBjcmVhdGVQYXRoIH0gZnJvbSAnLi9QYXRoVXRpbHMnO1xuaW1wb3J0IHsgY3JlYXRlTG9jYXRpb24gfSBmcm9tICcuL0xvY2F0aW9uVXRpbHMnO1xuaW1wb3J0IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyIGZyb20gJy4vY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXInO1xuXG52YXIgY2xhbXAgPSBmdW5jdGlvbiBjbGFtcChuLCBsb3dlckJvdW5kLCB1cHBlckJvdW5kKSB7XG4gIHJldHVybiBNYXRoLm1pbihNYXRoLm1heChuLCBsb3dlckJvdW5kKSwgdXBwZXJCb3VuZCk7XG59O1xuXG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHN0b3JlcyBsb2NhdGlvbnMgaW4gbWVtb3J5LlxuICovXG52YXIgY3JlYXRlTWVtb3J5SGlzdG9yeSA9IGZ1bmN0aW9uIGNyZWF0ZU1lbW9yeUhpc3RvcnkoKSB7XG4gIHZhciBwcm9wcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG4gIHZhciBnZXRVc2VyQ29uZmlybWF0aW9uID0gcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIF9wcm9wcyRpbml0aWFsRW50cmllcyA9IHByb3BzLmluaXRpYWxFbnRyaWVzLFxuICAgICAgaW5pdGlhbEVudHJpZXMgPSBfcHJvcHMkaW5pdGlhbEVudHJpZXMgPT09IHVuZGVmaW5lZCA/IFsnLyddIDogX3Byb3BzJGluaXRpYWxFbnRyaWVzLFxuICAgICAgX3Byb3BzJGluaXRpYWxJbmRleCA9IHByb3BzLmluaXRpYWxJbmRleCxcbiAgICAgIGluaXRpYWxJbmRleCA9IF9wcm9wcyRpbml0aWFsSW5kZXggPT09IHVuZGVmaW5lZCA/IDAgOiBfcHJvcHMkaW5pdGlhbEluZGV4LFxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IHByb3BzLmtleUxlbmd0aCxcbiAgICAgIGtleUxlbmd0aCA9IF9wcm9wcyRrZXlMZW5ndGggPT09IHVuZGVmaW5lZCA/IDYgOiBfcHJvcHMka2V5TGVuZ3RoO1xuXG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICB2YXIgc2V0U3RhdGUgPSBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfTtcblxuICB2YXIgY3JlYXRlS2V5ID0gZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcbiAgfTtcblxuICB2YXIgaW5kZXggPSBjbGFtcChpbml0aWFsSW5kZXgsIDAsIGluaXRpYWxFbnRyaWVzLmxlbmd0aCAtIDEpO1xuICB2YXIgZW50cmllcyA9IGluaXRpYWxFbnRyaWVzLm1hcChmdW5jdGlvbiAoZW50cnkpIHtcbiAgICByZXR1cm4gdHlwZW9mIGVudHJ5ID09PSAnc3RyaW5nJyA/IGNyZWF0ZUxvY2F0aW9uKGVudHJ5LCB1bmRlZmluZWQsIGNyZWF0ZUtleSgpKSA6IGNyZWF0ZUxvY2F0aW9uKGVudHJ5LCB1bmRlZmluZWQsIGVudHJ5LmtleSB8fCBjcmVhdGVLZXkoKSk7XG4gIH0pO1xuXG4gIC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICB2YXIgY3JlYXRlSHJlZiA9IGNyZWF0ZVBhdGg7XG5cbiAgdmFyIHB1c2ggPSBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgd2FybmluZyghKCh0eXBlb2YgcGF0aCA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YocGF0aCkpID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcblxuICAgICAgdmFyIHByZXZJbmRleCA9IGhpc3RvcnkuaW5kZXg7XG4gICAgICB2YXIgbmV4dEluZGV4ID0gcHJldkluZGV4ICsgMTtcblxuICAgICAgdmFyIG5leHRFbnRyaWVzID0gaGlzdG9yeS5lbnRyaWVzLnNsaWNlKDApO1xuICAgICAgaWYgKG5leHRFbnRyaWVzLmxlbmd0aCA+IG5leHRJbmRleCkge1xuICAgICAgICBuZXh0RW50cmllcy5zcGxpY2UobmV4dEluZGV4LCBuZXh0RW50cmllcy5sZW5ndGggLSBuZXh0SW5kZXgsIGxvY2F0aW9uKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnB1c2gobG9jYXRpb24pO1xuICAgICAgfVxuXG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgIGluZGV4OiBuZXh0SW5kZXgsXG4gICAgICAgIGVudHJpZXM6IG5leHRFbnRyaWVzXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcblxuICB2YXIgcmVwbGFjZSA9IGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICB3YXJuaW5nKCEoKHR5cGVvZiBwYXRoID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihwYXRoKSkgPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHJlcGxhY2Ugd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJyk7XG5cbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuXG4gICAgICBoaXN0b3J5LmVudHJpZXNbaGlzdG9yeS5pbmRleF0gPSBsb2NhdGlvbjtcblxuICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIHZhciBnbyA9IGZ1bmN0aW9uIGdvKG4pIHtcbiAgICB2YXIgbmV4dEluZGV4ID0gY2xhbXAoaGlzdG9yeS5pbmRleCArIG4sIDAsIGhpc3RvcnkuZW50cmllcy5sZW5ndGggLSAxKTtcblxuICAgIHZhciBhY3Rpb24gPSAnUE9QJztcbiAgICB2YXIgbG9jYXRpb24gPSBoaXN0b3J5LmVudHJpZXNbbmV4dEluZGV4XTtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAob2spIHtcbiAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgICBpbmRleDogbmV4dEluZGV4XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gTWltaWMgdGhlIGJlaGF2aW9yIG9mIERPTSBoaXN0b3JpZXMgYnlcbiAgICAgICAgLy8gY2F1c2luZyBhIHJlbmRlciBhZnRlciBhIGNhbmNlbGxlZCBQT1AuXG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIGdvQmFjayA9IGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICByZXR1cm4gZ28oLTEpO1xuICB9O1xuXG4gIHZhciBnb0ZvcndhcmQgPSBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgcmV0dXJuIGdvKDEpO1xuICB9O1xuXG4gIHZhciBjYW5HbyA9IGZ1bmN0aW9uIGNhbkdvKG4pIHtcbiAgICB2YXIgbmV4dEluZGV4ID0gaGlzdG9yeS5pbmRleCArIG47XG4gICAgcmV0dXJuIG5leHRJbmRleCA+PSAwICYmIG5leHRJbmRleCA8IGhpc3RvcnkuZW50cmllcy5sZW5ndGg7XG4gIH07XG5cbiAgdmFyIGJsb2NrID0gZnVuY3Rpb24gYmxvY2soKSB7XG4gICAgdmFyIHByb21wdCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogZmFsc2U7XG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuICB9O1xuXG4gIHZhciBsaXN0ZW4gPSBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICB9O1xuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZW50cmllcy5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogZW50cmllc1tpbmRleF0sXG4gICAgaW5kZXg6IGluZGV4LFxuICAgIGVudHJpZXM6IGVudHJpZXMsXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGNhbkdvOiBjYW5HbyxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcblxuICByZXR1cm4gaGlzdG9yeTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZU1lbW9yeUhpc3Rvcnk7IiwiLy8gV3JpdHRlbiBpbiB0aGlzIHJvdW5kIGFib3V0IHdheSBmb3IgYmFiZWwtdHJhbnNmb3JtLWltcG9ydHNcbmltcG9ydCBSb3V0ZXIgZnJvbSBcInJlYWN0LXJvdXRlci9lcy9Sb3V0ZXJcIjtcblxuZXhwb3J0IGRlZmF1bHQgUm91dGVyOyIsImZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IHdhcm5pbmcgZnJvbSBcIndhcm5pbmdcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCB7IGNyZWF0ZUJyb3dzZXJIaXN0b3J5IGFzIGNyZWF0ZUhpc3RvcnkgfSBmcm9tIFwiaGlzdG9yeVwiO1xuaW1wb3J0IFJvdXRlciBmcm9tIFwiLi9Sb3V0ZXJcIjtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgSFRNTDUgaGlzdG9yeS5cbiAqL1xuXG52YXIgQnJvd3NlclJvdXRlciA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhCcm93c2VyUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBCcm93c2VyUm91dGVyKCkge1xuICAgIHZhciBfdGVtcCwgX3RoaXMsIF9yZXQ7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQnJvd3NlclJvdXRlcik7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3JldCA9IChfdGVtcCA9IChfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZUhpc3RvcnkoX3RoaXMucHJvcHMpLCBfdGVtcCksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgfVxuXG4gIEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPEJyb3dzZXJSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBCcm93c2VyUm91dGVyIGFzIFJvdXRlciB9YC5cIik7XG4gIH07XG5cbiAgQnJvd3NlclJvdXRlci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwgeyBoaXN0b3J5OiB0aGlzLmhpc3RvcnksIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuIH0pO1xuICB9O1xuXG4gIHJldHVybiBCcm93c2VyUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5Ccm93c2VyUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGZvcmNlUmVmcmVzaDogUHJvcFR5cGVzLmJvb2wsXG4gIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICBrZXlMZW5ndGg6IFByb3BUeXBlcy5udW1iZXIsXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZVxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBCcm93c2VyUm91dGVyOyIsImltcG9ydCBwYXRoVG9SZWdleHAgZnJvbSBcInBhdGgtdG8tcmVnZXhwXCI7XG5cbnZhciBwYXR0ZXJuQ2FjaGUgPSB7fTtcbnZhciBjYWNoZUxpbWl0ID0gMTAwMDA7XG52YXIgY2FjaGVDb3VudCA9IDA7XG5cbnZhciBjb21waWxlUGF0aCA9IGZ1bmN0aW9uIGNvbXBpbGVQYXRoKHBhdHRlcm4sIG9wdGlvbnMpIHtcbiAgdmFyIGNhY2hlS2V5ID0gXCJcIiArIG9wdGlvbnMuZW5kICsgb3B0aW9ucy5zdHJpY3QgKyBvcHRpb25zLnNlbnNpdGl2ZTtcbiAgdmFyIGNhY2hlID0gcGF0dGVybkNhY2hlW2NhY2hlS2V5XSB8fCAocGF0dGVybkNhY2hlW2NhY2hlS2V5XSA9IHt9KTtcblxuICBpZiAoY2FjaGVbcGF0dGVybl0pIHJldHVybiBjYWNoZVtwYXR0ZXJuXTtcblxuICB2YXIga2V5cyA9IFtdO1xuICB2YXIgcmUgPSBwYXRoVG9SZWdleHAocGF0dGVybiwga2V5cywgb3B0aW9ucyk7XG4gIHZhciBjb21waWxlZFBhdHRlcm4gPSB7IHJlOiByZSwga2V5czoga2V5cyB9O1xuXG4gIGlmIChjYWNoZUNvdW50IDwgY2FjaGVMaW1pdCkge1xuICAgIGNhY2hlW3BhdHRlcm5dID0gY29tcGlsZWRQYXR0ZXJuO1xuICAgIGNhY2hlQ291bnQrKztcbiAgfVxuXG4gIHJldHVybiBjb21waWxlZFBhdHRlcm47XG59O1xuXG4vKipcbiAqIFB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgVVJMIHBhdGhuYW1lIHRvIGEgcGF0aCBwYXR0ZXJuLlxuICovXG52YXIgbWF0Y2hQYXRoID0gZnVuY3Rpb24gbWF0Y2hQYXRoKHBhdGhuYW1lKSB7XG4gIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcbiAgdmFyIHBhcmVudCA9IGFyZ3VtZW50c1syXTtcblxuICBpZiAodHlwZW9mIG9wdGlvbnMgPT09IFwic3RyaW5nXCIpIG9wdGlvbnMgPSB7IHBhdGg6IG9wdGlvbnMgfTtcblxuICB2YXIgX29wdGlvbnMgPSBvcHRpb25zLFxuICAgICAgcGF0aCA9IF9vcHRpb25zLnBhdGgsXG4gICAgICBfb3B0aW9ucyRleGFjdCA9IF9vcHRpb25zLmV4YWN0LFxuICAgICAgZXhhY3QgPSBfb3B0aW9ucyRleGFjdCA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiBfb3B0aW9ucyRleGFjdCxcbiAgICAgIF9vcHRpb25zJHN0cmljdCA9IF9vcHRpb25zLnN0cmljdCxcbiAgICAgIHN0cmljdCA9IF9vcHRpb25zJHN0cmljdCA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiBfb3B0aW9ucyRzdHJpY3QsXG4gICAgICBfb3B0aW9ucyRzZW5zaXRpdmUgPSBfb3B0aW9ucy5zZW5zaXRpdmUsXG4gICAgICBzZW5zaXRpdmUgPSBfb3B0aW9ucyRzZW5zaXRpdmUgPT09IHVuZGVmaW5lZCA/IGZhbHNlIDogX29wdGlvbnMkc2Vuc2l0aXZlO1xuXG5cbiAgaWYgKHBhdGggPT0gbnVsbCkgcmV0dXJuIHBhcmVudDtcblxuICB2YXIgX2NvbXBpbGVQYXRoID0gY29tcGlsZVBhdGgocGF0aCwgeyBlbmQ6IGV4YWN0LCBzdHJpY3Q6IHN0cmljdCwgc2Vuc2l0aXZlOiBzZW5zaXRpdmUgfSksXG4gICAgICByZSA9IF9jb21waWxlUGF0aC5yZSxcbiAgICAgIGtleXMgPSBfY29tcGlsZVBhdGgua2V5cztcblxuICB2YXIgbWF0Y2ggPSByZS5leGVjKHBhdGhuYW1lKTtcblxuICBpZiAoIW1hdGNoKSByZXR1cm4gbnVsbDtcblxuICB2YXIgdXJsID0gbWF0Y2hbMF0sXG4gICAgICB2YWx1ZXMgPSBtYXRjaC5zbGljZSgxKTtcblxuICB2YXIgaXNFeGFjdCA9IHBhdGhuYW1lID09PSB1cmw7XG5cbiAgaWYgKGV4YWN0ICYmICFpc0V4YWN0KSByZXR1cm4gbnVsbDtcblxuICByZXR1cm4ge1xuICAgIHBhdGg6IHBhdGgsIC8vIHRoZSBwYXRoIHBhdHRlcm4gdXNlZCB0byBtYXRjaFxuICAgIHVybDogcGF0aCA9PT0gXCIvXCIgJiYgdXJsID09PSBcIlwiID8gXCIvXCIgOiB1cmwsIC8vIHRoZSBtYXRjaGVkIHBvcnRpb24gb2YgdGhlIFVSTFxuICAgIGlzRXhhY3Q6IGlzRXhhY3QsIC8vIHdoZXRoZXIgb3Igbm90IHdlIG1hdGNoZWQgZXhhY3RseVxuICAgIHBhcmFtczoga2V5cy5yZWR1Y2UoZnVuY3Rpb24gKG1lbW8sIGtleSwgaW5kZXgpIHtcbiAgICAgIG1lbW9ba2V5Lm5hbWVdID0gdmFsdWVzW2luZGV4XTtcbiAgICAgIHJldHVybiBtZW1vO1xuICAgIH0sIHt9KVxuICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgbWF0Y2hQYXRoOyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IHdhcm5pbmcgZnJvbSBcIndhcm5pbmdcIjtcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSBcImludmFyaWFudFwiO1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IG1hdGNoUGF0aCBmcm9tIFwiLi9tYXRjaFBhdGhcIjtcblxudmFyIGlzRW1wdHlDaGlsZHJlbiA9IGZ1bmN0aW9uIGlzRW1wdHlDaGlsZHJlbihjaGlsZHJlbikge1xuICByZXR1cm4gUmVhY3QuQ2hpbGRyZW4uY291bnQoY2hpbGRyZW4pID09PSAwO1xufTtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBzaW5nbGUgcGF0aCBhbmQgcmVuZGVyaW5nLlxuICovXG5cbnZhciBSb3V0ZSA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhSb3V0ZSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gUm91dGUoKSB7XG4gICAgdmFyIF90ZW1wLCBfdGhpcywgX3JldDtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSb3V0ZSk7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3JldCA9IChfdGVtcCA9IChfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMuc3RhdGUgPSB7XG4gICAgICBtYXRjaDogX3RoaXMuY29tcHV0ZU1hdGNoKF90aGlzLnByb3BzLCBfdGhpcy5jb250ZXh0LnJvdXRlcilcbiAgICB9LCBfdGVtcCksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgfVxuXG4gIFJvdXRlLnByb3RvdHlwZS5nZXRDaGlsZENvbnRleHQgPSBmdW5jdGlvbiBnZXRDaGlsZENvbnRleHQoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJvdXRlcjogX2V4dGVuZHMoe30sIHRoaXMuY29udGV4dC5yb3V0ZXIsIHtcbiAgICAgICAgcm91dGU6IHtcbiAgICAgICAgICBsb2NhdGlvbjogdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCB0aGlzLmNvbnRleHQucm91dGVyLnJvdXRlLmxvY2F0aW9uLFxuICAgICAgICAgIG1hdGNoOiB0aGlzLnN0YXRlLm1hdGNoXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfTtcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcHV0ZU1hdGNoID0gZnVuY3Rpb24gY29tcHV0ZU1hdGNoKF9yZWYsIHJvdXRlcikge1xuICAgIHZhciBjb21wdXRlZE1hdGNoID0gX3JlZi5jb21wdXRlZE1hdGNoLFxuICAgICAgICBsb2NhdGlvbiA9IF9yZWYubG9jYXRpb24sXG4gICAgICAgIHBhdGggPSBfcmVmLnBhdGgsXG4gICAgICAgIHN0cmljdCA9IF9yZWYuc3RyaWN0LFxuICAgICAgICBleGFjdCA9IF9yZWYuZXhhY3QsXG4gICAgICAgIHNlbnNpdGl2ZSA9IF9yZWYuc2Vuc2l0aXZlO1xuXG4gICAgaWYgKGNvbXB1dGVkTWF0Y2gpIHJldHVybiBjb21wdXRlZE1hdGNoOyAvLyA8U3dpdGNoPiBhbHJlYWR5IGNvbXB1dGVkIHRoZSBtYXRjaCBmb3IgdXNcblxuICAgIGludmFyaWFudChyb3V0ZXIsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZT4gb3Igd2l0aFJvdXRlcigpIG91dHNpZGUgYSA8Um91dGVyPlwiKTtcblxuICAgIHZhciByb3V0ZSA9IHJvdXRlci5yb3V0ZTtcblxuICAgIHZhciBwYXRobmFtZSA9IChsb2NhdGlvbiB8fCByb3V0ZS5sb2NhdGlvbikucGF0aG5hbWU7XG5cbiAgICByZXR1cm4gbWF0Y2hQYXRoKHBhdGhuYW1lLCB7IHBhdGg6IHBhdGgsIHN0cmljdDogc3RyaWN0LCBleGFjdDogZXhhY3QsIHNlbnNpdGl2ZTogc2Vuc2l0aXZlIH0sIHJvdXRlLm1hdGNoKTtcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcG9uZW50V2lsbE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgIHdhcm5pbmcoISh0aGlzLnByb3BzLmNvbXBvbmVudCAmJiB0aGlzLnByb3BzLnJlbmRlciksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgcmVuZGVyPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIHJlbmRlcj4gd2lsbCBiZSBpZ25vcmVkXCIpO1xuXG4gICAgd2FybmluZyghKHRoaXMucHJvcHMuY29tcG9uZW50ICYmIHRoaXMucHJvcHMuY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbih0aGlzLnByb3BzLmNoaWxkcmVuKSksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgY2hpbGRyZW4+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgY2hpbGRyZW4+IHdpbGwgYmUgaWdub3JlZFwiKTtcblxuICAgIHdhcm5pbmcoISh0aGlzLnByb3BzLnJlbmRlciAmJiB0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgcmVuZGVyPiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIGNoaWxkcmVuPiB3aWxsIGJlIGlnbm9yZWRcIik7XG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcywgbmV4dENvbnRleHQpIHtcbiAgICB3YXJuaW5nKCEobmV4dFByb3BzLmxvY2F0aW9uICYmICF0aGlzLnByb3BzLmxvY2F0aW9uKSwgJzxSb3V0ZT4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSB1bmNvbnRyb2xsZWQgdG8gY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBpbml0aWFsbHkgdXNlZCBubyBcImxvY2F0aW9uXCIgcHJvcCBhbmQgdGhlbiBwcm92aWRlZCBvbmUgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKTtcblxuICAgIHdhcm5pbmcoISghbmV4dFByb3BzLmxvY2F0aW9uICYmIHRoaXMucHJvcHMubG9jYXRpb24pLCAnPFJvdXRlPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIGNvbnRyb2xsZWQgdG8gdW5jb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IHByb3ZpZGVkIGEgXCJsb2NhdGlvblwiIHByb3AgaW5pdGlhbGx5IGJ1dCBvbWl0dGVkIGl0IG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJyk7XG5cbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIG1hdGNoOiB0aGlzLmNvbXB1dGVNYXRjaChuZXh0UHJvcHMsIG5leHRDb250ZXh0LnJvdXRlcilcbiAgICB9KTtcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBtYXRjaCA9IHRoaXMuc3RhdGUubWF0Y2g7XG4gICAgdmFyIF9wcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIGNoaWxkcmVuID0gX3Byb3BzLmNoaWxkcmVuLFxuICAgICAgICBjb21wb25lbnQgPSBfcHJvcHMuY29tcG9uZW50LFxuICAgICAgICByZW5kZXIgPSBfcHJvcHMucmVuZGVyO1xuICAgIHZhciBfY29udGV4dCRyb3V0ZXIgPSB0aGlzLmNvbnRleHQucm91dGVyLFxuICAgICAgICBoaXN0b3J5ID0gX2NvbnRleHQkcm91dGVyLmhpc3RvcnksXG4gICAgICAgIHJvdXRlID0gX2NvbnRleHQkcm91dGVyLnJvdXRlLFxuICAgICAgICBzdGF0aWNDb250ZXh0ID0gX2NvbnRleHQkcm91dGVyLnN0YXRpY0NvbnRleHQ7XG5cbiAgICB2YXIgbG9jYXRpb24gPSB0aGlzLnByb3BzLmxvY2F0aW9uIHx8IHJvdXRlLmxvY2F0aW9uO1xuICAgIHZhciBwcm9wcyA9IHsgbWF0Y2g6IG1hdGNoLCBsb2NhdGlvbjogbG9jYXRpb24sIGhpc3Rvcnk6IGhpc3RvcnksIHN0YXRpY0NvbnRleHQ6IHN0YXRpY0NvbnRleHQgfTtcblxuICAgIGlmIChjb21wb25lbnQpIHJldHVybiBtYXRjaCA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcykgOiBudWxsO1xuXG4gICAgaWYgKHJlbmRlcikgcmV0dXJuIG1hdGNoID8gcmVuZGVyKHByb3BzKSA6IG51bGw7XG5cbiAgICBpZiAodHlwZW9mIGNoaWxkcmVuID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiBjaGlsZHJlbihwcm9wcyk7XG5cbiAgICBpZiAoY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbihjaGlsZHJlbikpIHJldHVybiBSZWFjdC5DaGlsZHJlbi5vbmx5KGNoaWxkcmVuKTtcblxuICAgIHJldHVybiBudWxsO1xuICB9O1xuXG4gIHJldHVybiBSb3V0ZTtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuUm91dGUucHJvcFR5cGVzID0ge1xuICBjb21wdXRlZE1hdGNoOiBQcm9wVHlwZXMub2JqZWN0LCAvLyBwcml2YXRlLCBmcm9tIDxTd2l0Y2g+XG4gIHBhdGg6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGV4YWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgc3RyaWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgc2Vuc2l0aXZlOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29tcG9uZW50OiBQcm9wVHlwZXMuZnVuYyxcbiAgcmVuZGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMubm9kZV0pLFxuICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdFxufTtcblJvdXRlLmNvbnRleHRUeXBlcyA9IHtcbiAgcm91dGVyOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGhpc3Rvcnk6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICByb3V0ZTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIHN0YXRpY0NvbnRleHQ6IFByb3BUeXBlcy5vYmplY3RcbiAgfSlcbn07XG5Sb3V0ZS5jaGlsZENvbnRleHRUeXBlcyA9IHtcbiAgcm91dGVyOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgUm91dGU7IiwiLy8gV3JpdHRlbiBpbiB0aGlzIHJvdW5kIGFib3V0IHdheSBmb3IgYmFiZWwtdHJhbnNmb3JtLWltcG9ydHNcbmltcG9ydCBSb3V0ZSBmcm9tIFwicmVhY3Qtcm91dGVyL2VzL1JvdXRlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IFJvdXRlOyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhvYmosIGtleXMpIHsgdmFyIHRhcmdldCA9IHt9OyBmb3IgKHZhciBpIGluIG9iaikgeyBpZiAoa2V5cy5pbmRleE9mKGkpID49IDApIGNvbnRpbnVlOyBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGkpKSBjb250aW51ZTsgdGFyZ2V0W2ldID0gb2JqW2ldOyB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gXCJpbnZhcmlhbnRcIjtcbmltcG9ydCB7IGNyZWF0ZUxvY2F0aW9uIH0gZnJvbSBcImhpc3RvcnlcIjtcblxudmFyIGlzTW9kaWZpZWRFdmVudCA9IGZ1bmN0aW9uIGlzTW9kaWZpZWRFdmVudChldmVudCkge1xuICByZXR1cm4gISEoZXZlbnQubWV0YUtleSB8fCBldmVudC5hbHRLZXkgfHwgZXZlbnQuY3RybEtleSB8fCBldmVudC5zaGlmdEtleSk7XG59O1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgYSBoaXN0b3J5LWF3YXJlIDxhPi5cbiAqL1xuXG52YXIgTGluayA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhMaW5rLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBMaW5rKCkge1xuICAgIHZhciBfdGVtcCwgX3RoaXMsIF9yZXQ7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTGluayk7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3JldCA9IChfdGVtcCA9IChfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMuaGFuZGxlQ2xpY2sgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIGlmIChfdGhpcy5wcm9wcy5vbkNsaWNrKSBfdGhpcy5wcm9wcy5vbkNsaWNrKGV2ZW50KTtcblxuICAgICAgaWYgKCFldmVudC5kZWZhdWx0UHJldmVudGVkICYmIC8vIG9uQ2xpY2sgcHJldmVudGVkIGRlZmF1bHRcbiAgICAgIGV2ZW50LmJ1dHRvbiA9PT0gMCAmJiAvLyBpZ25vcmUgZXZlcnl0aGluZyBidXQgbGVmdCBjbGlja3NcbiAgICAgICFfdGhpcy5wcm9wcy50YXJnZXQgJiYgLy8gbGV0IGJyb3dzZXIgaGFuZGxlIFwidGFyZ2V0PV9ibGFua1wiIGV0Yy5cbiAgICAgICFpc01vZGlmaWVkRXZlbnQoZXZlbnQpIC8vIGlnbm9yZSBjbGlja3Mgd2l0aCBtb2RpZmllciBrZXlzXG4gICAgICApIHtcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgICAgdmFyIGhpc3RvcnkgPSBfdGhpcy5jb250ZXh0LnJvdXRlci5oaXN0b3J5O1xuICAgICAgICAgIHZhciBfdGhpcyRwcm9wcyA9IF90aGlzLnByb3BzLFxuICAgICAgICAgICAgICByZXBsYWNlID0gX3RoaXMkcHJvcHMucmVwbGFjZSxcbiAgICAgICAgICAgICAgdG8gPSBfdGhpcyRwcm9wcy50bztcblxuXG4gICAgICAgICAgaWYgKHJlcGxhY2UpIHtcbiAgICAgICAgICAgIGhpc3RvcnkucmVwbGFjZSh0byk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGhpc3RvcnkucHVzaCh0byk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSwgX3RlbXApLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX3JldCk7XG4gIH1cblxuICBMaW5rLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF9wcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIHJlcGxhY2UgPSBfcHJvcHMucmVwbGFjZSxcbiAgICAgICAgdG8gPSBfcHJvcHMudG8sXG4gICAgICAgIGlubmVyUmVmID0gX3Byb3BzLmlubmVyUmVmLFxuICAgICAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcHJvcHMsIFtcInJlcGxhY2VcIiwgXCJ0b1wiLCBcImlubmVyUmVmXCJdKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuXG4gICAgaW52YXJpYW50KHRoaXMuY29udGV4dC5yb3V0ZXIsIFwiWW91IHNob3VsZCBub3QgdXNlIDxMaW5rPiBvdXRzaWRlIGEgPFJvdXRlcj5cIik7XG5cbiAgICBpbnZhcmlhbnQodG8gIT09IHVuZGVmaW5lZCwgJ1lvdSBtdXN0IHNwZWNpZnkgdGhlIFwidG9cIiBwcm9wZXJ0eScpO1xuXG4gICAgdmFyIGhpc3RvcnkgPSB0aGlzLmNvbnRleHQucm91dGVyLmhpc3Rvcnk7XG5cbiAgICB2YXIgbG9jYXRpb24gPSB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBjcmVhdGVMb2NhdGlvbih0bywgbnVsbCwgbnVsbCwgaGlzdG9yeS5sb2NhdGlvbikgOiB0bztcblxuICAgIHZhciBocmVmID0gaGlzdG9yeS5jcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwgX2V4dGVuZHMoe30sIHByb3BzLCB7IG9uQ2xpY2s6IHRoaXMuaGFuZGxlQ2xpY2ssIGhyZWY6IGhyZWYsIHJlZjogaW5uZXJSZWYgfSkpO1xuICB9O1xuXG4gIHJldHVybiBMaW5rO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5MaW5rLnByb3BUeXBlcyA9IHtcbiAgb25DbGljazogUHJvcFR5cGVzLmZ1bmMsXG4gIHRhcmdldDogUHJvcFR5cGVzLnN0cmluZyxcbiAgcmVwbGFjZTogUHJvcFR5cGVzLmJvb2wsXG4gIHRvOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSkuaXNSZXF1aXJlZCxcbiAgaW5uZXJSZWY6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jXSlcbn07XG5MaW5rLmRlZmF1bHRQcm9wcyA9IHtcbiAgcmVwbGFjZTogZmFsc2Vcbn07XG5MaW5rLmNvbnRleHRUeXBlcyA9IHtcbiAgcm91dGVyOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGhpc3Rvcnk6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICBwdXNoOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgICAgcmVwbGFjZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICAgIGNyZWF0ZUhyZWY6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbiAgICB9KS5pc1JlcXVpcmVkXG4gIH0pLmlzUmVxdWlyZWRcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgTGluazsiLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJ1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEhlYWRlciBleHRlbmRzIENvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPEhlYWRlcldyYXBwZXI+XG4gICAgICAgIDxIZWFkZXJOYXY+XG4gICAgICAgICAgPG5hdj5cbiAgICAgICAgICAgIDxMaW5rIHRvPVwiL1wiPkhvbWU8L0xpbms+XG4gICAgICAgICAgICA8TGluayB0bz1cIi90ZWFtc1wiPlRlYW1zPC9MaW5rPlxuICAgICAgICAgIDwvbmF2PlxuICAgICAgICA8L0hlYWRlck5hdj5cbiAgICAgIDwvSGVhZGVyV3JhcHBlcj5cbiAgICApXG4gIH1cbn1cblxuY29uc3QgSGVhZGVyV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG5gXG5cbmNvbnN0IEhlYWRlck5hdiA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG5cbiAgbmF2IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGEge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG4gICAgICBjb2xvcjogYmxhY2s7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgfVxuICB9XG5gXG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBIb21lIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8SG9tZVdyYXBwZXI+XG4gICAgICAgIDxoMj5XZWxjb21lIGhvbWU8L2gyPlxuICAgICAgPC9Ib21lV3JhcHBlcj5cbiAgICApXG4gIH1cbn1cblxuY29uc3QgSG9tZVdyYXBwZXIgPSBzdHlsZWQuZGl2YGBcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnXG5cbmNvbnN0IFRFQU1TID0gW1xuICB7IGlkOiAwLCB0aXRsZTogJ1Bob2VuaXggU3VucycsIHNwb3J0OiAnQmFza2V0YmFsbCcsIGVtb2ppOiAn8J+PgCcgfSxcbiAgeyBpZDogMSwgdGl0bGU6ICdKdXZlbnR1cycsIHNwb3J0OiAnU29jY2VyJywgZW1vamk6ICfimr3vuI8nIH0sXG4gIHsgaWQ6IDIsIHRpdGxlOiAnS29sa2F0YSBLbmlnaHQgUmlkZXJzJywgc3BvcnQ6ICdDcmlja2V0JywgZW1vamk6ICfwn4+PJyB9XG5dXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRlYW0gZXh0ZW5kcyBDb21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBtYXRjaCB9ID0gdGhpcy5wcm9wc1xuICAgIGNvbnN0IHRlYW0gPSBURUFNUy5maW5kKHQgPT4gdC50aXRsZSA9PT0gbWF0Y2gucGFyYW1zLnRpdGxlKVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxUZWFtV3JhcHBlcj5cbiAgICAgICAgPGgzPnt0ZWFtLnRpdGxlfTwvaDM+XG4gICAgICAgIDxwPnt0ZWFtLnNwb3J0fTwvcD5cbiAgICAgICAgPHA+e3RlYW0uZW1vaml9PC9wPlxuICAgICAgPC9UZWFtV3JhcHBlcj5cbiAgICApXG4gIH1cbn1cblxuY29uc3QgVGVhbVdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuICBoMyB7XG4gICAgZm9udC1zaXplOiAyMDAlO1xuICAgIG1hcmdpbjogMjBweCAwO1xuICB9XG4gIHAge1xuICAgIGZvbnQtc2l6ZTogMTAwJTtcbiAgICBtYXJnaW46IDEwcHggMDtcbiAgfVxuYFxuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cydcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJ1xuaW1wb3J0IHsgUm91dGUgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJ1xuaW1wb3J0IFRlYW0gZnJvbSAnLi9UZWFtJ1xuXG5jb25zdCBURUFNUyA9IFtcbiAgeyBpZDogMCwgdGl0bGU6ICdQaG9lbml4IFN1bnMnLCBzcG9ydDogJ0Jhc2tldGJhbGwnLCBlbW9qaTogJ/Cfj4AnIH0sXG4gIHsgaWQ6IDEsIHRpdGxlOiAnSnV2ZW50dXMnLCBzcG9ydDogJ1NvY2NlcicsIGVtb2ppOiAn4pq977iPJyB9LFxuICB7IGlkOiAyLCB0aXRsZTogJ0tvbGthdGEgS25pZ2h0IFJpZGVycycsIHNwb3J0OiAnQ3JpY2tldCcsIGVtb2ppOiAn8J+PjycgfVxuXVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUZWFtcyBleHRlbmRzIENvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IG1hdGNoIH0gPSB0aGlzLnByb3BzXG5cbiAgICByZXR1cm4gKFxuICAgICAgPFRlYW1zV3JhcHBlcj5cbiAgICAgICAgPGgyPlRlYW1zPC9oMj5cbiAgICAgICAgPFRlYW1zTmF2PlxuICAgICAgICAgIDxuYXY+XG4gICAgICAgICAgICB7VEVBTVMubWFwKCh0LCBpKSA9PiB7XG4gICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPExpbmsga2V5PXtpfSB0bz17YCR7bWF0Y2gudXJsfS8ke3QudGl0bGV9YH0+XG4gICAgICAgICAgICAgICAgICB7dC50aXRsZX1cbiAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgIH0pfVxuICAgICAgICAgIDwvbmF2PlxuICAgICAgICA8L1RlYW1zTmF2PlxuXG4gICAgICAgIDxSb3V0ZSBwYXRoPXtgJHttYXRjaC5wYXRofS86dGl0bGVgfSBjb21wb25lbnQ9e1RlYW19IC8+XG4gICAgICAgIDxSb3V0ZVxuICAgICAgICAgIGV4YWN0XG4gICAgICAgICAgcGF0aD17bWF0Y2gucGF0aH1cbiAgICAgICAgICByZW5kZXI9eygpID0+IDxoMz5QbGVhc2Ugc2VsZWN0IGEgdGVhbS48L2gzPn1cbiAgICAgICAgLz5cbiAgICAgIDwvVGVhbXNXcmFwcGVyPlxuICAgIClcbiAgfVxufVxuXG5jb25zdCBUZWFtc1dyYXBwZXIgPSBzdHlsZWQuZGl2YGBcblxuY29uc3QgVGVhbXNOYXYgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBmbGV4O1xuXG4gIG5hdiB7XG4gICAgZGlzcGxheTogZmxleDtcblxuICAgIGEge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG4gICAgICBjb2xvcjogYmxhY2s7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgfVxuICB9XG5gXG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJ1xuaW1wb3J0IHsgQnJvd3NlclJvdXRlciBhcyBSb3V0ZXIsIFJvdXRlIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSdcbmltcG9ydCBIZWFkZXIgZnJvbSAnLi9jb21wb25lbnRzL0hlYWRlcidcbmltcG9ydCBIb21lIGZyb20gJy4vY29tcG9uZW50cy9Ib21lJ1xuaW1wb3J0IFRlYW1zIGZyb20gJy4vY29tcG9uZW50cy9UZWFtcydcblxuY29uc3QgQXBwID0gKCkgPT4gKFxuICA8QXBwQ29udGFpbmVyPlxuICAgIDxSb3V0ZXI+XG4gICAgICA8ZGl2PlxuICAgICAgICA8SGVhZGVyIC8+XG4gICAgICAgIDxSb3V0ZSBleGFjdCBwYXRoPVwiL1wiIGNvbXBvbmVudD17SG9tZX0gLz5cbiAgICAgICAgPFJvdXRlIHBhdGg9XCIvdGVhbXNcIiBjb21wb25lbnQ9e1RlYW1zfSAvPlxuICAgICAgPC9kaXY+XG4gICAgPC9Sb3V0ZXI+XG4gIDwvQXBwQ29udGFpbmVyPlxuKVxuXG5jb25zdCBBcHBDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBmbGV4O1xuICB3aWR0aDogMTAwJTtcbiAgbWluLWhlaWdodDogMTAwdmg7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgcGFkZGluZzogMjBweCA0MHB4O1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMjBkZWcsIHJnYigyMTksIDExMiwgMTQ3KSwgI2RhYTM1Nyk7XG5gXG5cbmV4cG9ydCBkZWZhdWx0IEFwcFxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSAncmVhY3QtZG9tJ1xuaW1wb3J0IEFwcCBmcm9tICcuL0FwcCdcblxucmVuZGVyKDxBcHAgLz4sIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb290JykpXG4iXSwic291cmNlUm9vdCI6IiJ9